(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    369971,       7453]
NotebookOptionsPosition[    366255,       7334]
NotebookOutlinePosition[    366612,       7350]
CellTagsIndexPosition[    366569,       7347]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<NDSolve`FEM`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InCyl", "[", 
    RowBox[{
    "x0_", ",", "y0_", ",", "z0_", ",", "a0_", ",", "b0_", ",", "c0_", ",", 
     "x_", ",", "y_", ",", "z_", ",", "L_", ",", "R_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"v0", "=", 
      RowBox[{"{", 
       RowBox[{"x0", ",", "y0", ",", "z0"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"hv", "=", 
      RowBox[{"v0", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"L", "/", "2"}], ")"}], "*", 
        RowBox[{"{", 
         RowBox[{"a0", ",", "b0", ",", "c0"}], "}"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xv", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dv", "=", 
      RowBox[{"xv", "-", "hv"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rv", "=", 
      RowBox[{"{", 
       RowBox[{"a0", ",", "b0", ",", "c0"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"hv2", "=", 
      RowBox[{"hv", "+", 
       RowBox[{"L", "*", "rv"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dv2", "=", 
      RowBox[{"xv", "-", "hv2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"proj2", "=", 
      RowBox[{"dv2", ".", "rv"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"proj", "=", 
      RowBox[{"dv", ".", "rv"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"norm", "=", 
      RowBox[{
       RowBox[{"Norm", "[", "dv", "]"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"ArcCos", "[", 
         RowBox[{
          RowBox[{"dv", ".", "rv"}], "/", 
          RowBox[{"Norm", "[", "dv", "]"}]}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"proj", ">=", "0"}], "&&", 
          RowBox[{"proj", "<=", "L"}], "&&", 
          RowBox[{"norm", "<=", "R"}]}], ")"}], "||", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"proj", "\[LessEqual]", "0"}], "&&", 
          RowBox[{
           RowBox[{"Norm", "[", "dv", "]"}], "\[LessEqual]", "R"}]}], ")"}], "||",
         "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"proj2", "\[GreaterEqual]", "0"}], "&&", 
          RowBox[{
           RowBox[{"Norm", "[", "dv2", "]"}], "\[LessEqual]", "R"}]}], 
         ")"}]}], ",", "1", ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stressOperator", "[", 
    RowBox[{"Y_", ",", "\[Nu]_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Nu]"}], ")"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Nu]"}], ")"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Nu]"}], ")"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.690312261313895*^9, 3.690312261492655*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hl", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fl", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"h", "=", 
     RowBox[{"-", "0.99"}]}], ",", 
    RowBox[{"h", "<", 
     RowBox[{"-", "0.9"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"h", "=", 
      RowBox[{"h", "+", "0.01"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{"RegionPlot3D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"InCyl", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", 
           RowBox[{
            RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", "0", ",", "x", 
           ",", "y", ",", "z", ",", "1", ",", "1"}], "]"}], "\[Equal]", "1"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
        RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
        RowBox[{"PlotPoints", "\[Rule]", "100"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Green", ",", 
           RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}], ",", 
        RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
        RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "4"}], "}"}]}]}], "]"}]}], ";", "\n", 
     RowBox[{"mesh", "=", 
      RowBox[{"ToElementMesh", "[", 
       RowBox[{
        RowBox[{"DiscretizeGraphics", "[", "A", "]"}], ",", 
        RowBox[{"\"\<MeshOrder\>\"", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[CapitalGamma]", ",", "D"}], "]"}], "=", 
      RowBox[{"{", 
       RowBox[{"DirichletCondition", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}], 
           ",", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}], 
           ",", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", "\[GreaterEqual]", "h"}], "}"}]}], "]"}], "}"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\[CapitalGamma]2", ",", "D"}], "]"}], "=", 
      RowBox[{"{", 
       RowBox[{"DirichletCondition", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}], 
           ",", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}], 
           ",", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{"-", "z"}], "+", "h"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", "<", "h"}], "}"}]}], "]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"E0", "=", 
      RowBox[{"10", "^", "6"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V0", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"mf", "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"stressOperator", "[", 
            RowBox[{"E0", ",", "V0"}], "]"}], "\[Equal]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"Subscript", "[", 
           RowBox[{"\[CapitalGamma]", ",", "D"}], "]"}], ",", 
          RowBox[{"Subscript", "[", 
           RowBox[{"\[CapitalGamma]2", ",", "D"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "v", ",", "w"}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", "mesh"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"test", "[", 
       RowBox[{"mf_", ",", "x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"mf", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
         RowBox[{
          RowBox[{"mf", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
         RowBox[{
          RowBox[{"mf", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}], 
       "\[IndentingNewLine]", ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"uik", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Grad", "[", 
          RowBox[{
           RowBox[{"test", "[", 
            RowBox[{"mf", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"Grad", "[", 
           RowBox[{
            RowBox[{"test", "[", 
             RowBox[{"mf", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "]"}]}], 
        ")"}], "/", "2.0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ull2", "=", 
      SuperscriptBox[
       RowBox[{"Tr", "[", "uik", "]"}], "2"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"uik2", "=", 
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "uik", "]"}], "*", 
        RowBox[{"Flatten", "[", "uik", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Fden", "=", 
      RowBox[{
       FractionBox["E0", 
        RowBox[{"2", "*", 
         RowBox[{"(", 
          RowBox[{"1", "+", "V0"}], ")"}]}]], "*", 
       RowBox[{"(", 
        RowBox[{"uik2", "+", 
         RowBox[{
          FractionBox["V0", 
           RowBox[{"1", "-", 
            RowBox[{"2", "V0"}]}]], "ull2"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"RR", "=", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"InCyl", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", 
           RowBox[{
            RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", 
           RowBox[{
            RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", "0", ",", "x", 
           ",", "y", ",", "z", ",", "1", ",", "1"}], "]"}], "\[Equal]", "1"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"F", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{"Fden", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", "RR"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"hl", ",", 
       RowBox[{"h", "+", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"Fl", ",", "F"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"h", ",", "\"\< \>\"", ",", "F"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6903089075014553`*^9, 3.6903089332685947`*^9}, {
  3.6903105138118143`*^9, 3.69031053821348*^9}, {3.690310901671232*^9, 
  3.6903109555848303`*^9}, {3.690311238251116*^9, 3.690311245759797*^9}, {
  3.6903112823396597`*^9, 3.690311282513094*^9}, {3.690311319164628*^9, 
  3.690311319675387*^9}, {3.690312195233831*^9, 3.690312216228084*^9}, {
  3.690312248116527*^9, 3.690312285179582*^9}, {3.6903123236297007`*^9, 
  3.690312325309018*^9}, {3.690499669277721*^9, 3.690499675131444*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.690311365234871*^9, 3.690312499056579*^9, 
  3.6905048720286903`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(2000\\)\[NoBreak] times. The global error \
is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(287.33008235642313`\\)\[NoBreak] and \
\[NoBreak]\\!\\(16.933767440589204`\\)\[NoBreak] for the integral and error \
estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.690311365234871*^9, 3.690312499056579*^9, 
  3.690505378675722*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", "0.98`"}], "\[InvisibleSpace]", "\<\" \"\>", 
   "\[InvisibleSpace]", "287.33008235642313`"}],
  SequenceForm[-0.98, " ", 287.33008235642313`],
  Editable->False]], "Print",
 CellChangeTimes->{3.69050537869932*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.690311365234871*^9, 3.690312499056579*^9, 
  3.6905055638799763`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(2000\\)\[NoBreak] times. The global error \
is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(690.8173671570225`\\)\[NoBreak] and \
\[NoBreak]\\!\\(41.15947333048637`\\)\[NoBreak] for the integral and error \
estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.690311365234871*^9, 3.690312499056579*^9, 
  3.690506058178919*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", "0.97`"}], "\[InvisibleSpace]", "\<\" \"\>", 
   "\[InvisibleSpace]", "690.8173671570225`"}],
  SequenceForm[-0.97, " ", 690.8173671570225],
  Editable->False]], "Print",
 CellChangeTimes->{3.6905060582085733`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.690311365234871*^9, 3.690312499056579*^9, 
  3.690506242665655*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.690311365234871*^9, 3.690312499056579*^9, 
  3.6905062426964197`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(2000\\)\[NoBreak] times. The global error \
is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(1213.1406849200987`\\)\[NoBreak] and \
\[NoBreak]\\!\\(67.91516035292456`\\)\[NoBreak] for the integral and error \
estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.690311365234871*^9, 3.690312499056579*^9, 
  3.690506756649969*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: eincr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.690311365234871*^9, 3.690312499056579*^9, 
  3.6905067566698227`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", "0.96`"}], "\[InvisibleSpace]", "\<\" \"\>", 
   "\[InvisibleSpace]", "1213.1406849200987`"}],
  SequenceForm[-0.96, " ", 1213.1406849200987`],
  Editable->False]], "Print",
 CellChangeTimes->{3.69050675669878*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", "0.95`"}], "\[InvisibleSpace]", "\<\" \"\>", 
   "\[InvisibleSpace]", "1821.1029029697452`"}],
  SequenceForm[-0.95, " ", 1821.1029029697452`],
  Editable->False]], "Print",
 CellChangeTimes->{3.690507447331653*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", "0.94`"}], "\[InvisibleSpace]", "\<\" \"\>", 
   "\[InvisibleSpace]", "2581.941026130142`"}],
  SequenceForm[-0.94, " ", 2581.941026130142],
  Editable->False]], "Print",
 CellChangeTimes->{3.690508164511216*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", "0.9299999999999999`"}], "\[InvisibleSpace]", "\<\" \"\>", 
   "\[InvisibleSpace]", "3731.7241704149237`"}],
  SequenceForm[-0.9299999999999999, " ", 3731.7241704149237`],
  Editable->False]], "Print",
 CellChangeTimes->{3.690508882680582*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", "0.9199999999999999`"}], "\[InvisibleSpace]", "\<\" \"\>", 
   "\[InvisibleSpace]", "4841.88663600355`"}],
  SequenceForm[-0.9199999999999999, " ", 4841.88663600355],
  Editable->False]], "Print",
 CellChangeTimes->{3.690509610446253*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", "0.9099999999999999`"}], "\[InvisibleSpace]", "\<\" \"\>", 
   "\[InvisibleSpace]", "6225.666307017342`"}],
  SequenceForm[-0.9099999999999999, " ", 6225.666307017342],
  Editable->False]], "Print",
 CellChangeTimes->{3.690510341435875*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", "0.8999999999999999`"}], "\[InvisibleSpace]", "\<\" \"\>", 
   "\[InvisibleSpace]", "7791.533220178874`"}],
  SequenceForm[-0.8999999999999999, " ", 7791.533220178874],
  Editable->False]], "Print",
 CellChangeTimes->{3.6905111068439083`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InCyl", "[", 
   RowBox[{
   "x0_", ",", "y0_", ",", "z0_", ",", "a0_", ",", "b0_", ",", "c0_", ",", 
    "x_", ",", "y_", ",", "z_", ",", "L_", ",", "R_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v0", "=", 
     RowBox[{"{", 
      RowBox[{"x0", ",", "y0", ",", "z0"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"hv", "=", 
     RowBox[{"v0", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"L", "/", "2"}], ")"}], "*", 
       RowBox[{"{", 
        RowBox[{"a0", ",", "b0", ",", "c0"}], "}"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xv", "=", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"dv", "=", 
     RowBox[{"xv", "-", "hv"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"rv", "=", 
     RowBox[{"{", 
      RowBox[{"a0", ",", "b0", ",", "c0"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"hv2", "=", 
     RowBox[{"hv", "+", 
      RowBox[{"L", "*", "rv"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dv2", "=", 
     RowBox[{"xv", "-", "hv2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"proj2", "=", 
     RowBox[{"dv2", ".", "rv"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"proj", "=", 
     RowBox[{"dv", ".", "rv"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"norm", "=", 
     RowBox[{
      RowBox[{"Norm", "[", "dv", "]"}], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"ArcCos", "[", 
        RowBox[{
         RowBox[{"dv", ".", "rv"}], "/", 
         RowBox[{"Norm", "[", "dv", "]"}]}], "]"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"proj", ">=", "0"}], "&&", 
         RowBox[{"proj", "<=", "L"}], "&&", 
         RowBox[{"norm", "<=", "R"}]}], ")"}], "||", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"proj", "\[LessEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"Norm", "[", "dv", "]"}], "\[LessEqual]", "R"}]}], ")"}], "||",
        "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"proj2", "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"Norm", "[", "dv2", "]"}], "\[LessEqual]", "R"}]}], ")"}]}],
       ",", "1", ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"-", "0.6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RegionPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"InCyl", "[", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", "0", ",", "x", ",",
         "y", ",", "z", ",", "1", ",", "1"}], "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "40"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Green", ",", 
        RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<NDSolve`FEM`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mesh", "=", 
   RowBox[{"ToElementMesh", "[", 
    RowBox[{
     RowBox[{"DiscretizeGraphics", "[", "A", "]"}], ",", 
     RowBox[{"\"\<MeshOrder\>\"", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stressOperator", "[", 
    RowBox[{"Y_", ",", "\[Nu]_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Nu]"}], ")"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Nu]"}], ")"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Nu]"}], ")"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Subscript", "[", 
    RowBox[{"\[CapitalGamma]", ",", "D"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"DirichletCondition", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}], ",", 
        RowBox[{
         RowBox[{"w", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", "\[GreaterEqual]", "h"}], "}"}]}], "]"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Subscript", "[", 
    RowBox[{"\[CapitalGamma]2", ",", "D"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"DirichletCondition", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}], ",", 
        RowBox[{
         RowBox[{"w", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", "z"}], "+", "h"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", "<", "h"}], "}"}]}], "]"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"uif", ",", "vif", ",", "wif"}], "}"}], "=", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"stressOperator", "[", 
         RowBox[{
          RowBox[{"10", "^", "6"}], ",", 
          RowBox[{"33", "/", "100"}]}], "]"}], "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"Subscript", "[", 
        RowBox[{"\[CapitalGamma]", ",", "D"}], "]"}], ",", 
       RowBox[{"Subscript", "[", 
        RowBox[{"\[CapitalGamma]2", ",", "D"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v", ",", "w"}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", "mesh"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.69030900240982*^9, 3.6903090428890543`*^9}, {
  3.690309158159541*^9, 3.690309163424261*^9}, {3.690309422250782*^9, 
  3.6903094246777163`*^9}, {3.69030954184472*^9, 3.690309553259087*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pr", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", "=", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"-", "0.6"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "pr"}], ",", "pr"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "pr"}], ",", "pr"}], "}"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Brown", ",", 
        RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
        RowBox[{"Specularity", "[", 
         RowBox[{"White", ",", "20"}], "]"}], ",", 
        RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"Q", ",", 
   RowBox[{
    RowBox[{"ToBoundaryMesh", "[", "mesh", "]"}], "[", 
    RowBox[{"\"\<Wireframe\>\"", "[", 
     RowBox[{"\"\<MeshElementStyle\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
         RowBox[{"EdgeForm", "[", "]"}], ",", 
         RowBox[{"FaceForm", "[", "Gray", "]"}]}], "]"}], "}"}]}], "]"}], 
    "]"}], ",", 
   RowBox[{
    RowBox[{"ElementMeshDeformation", "[", 
     RowBox[{"mesh", ",", 
      RowBox[{"{", 
       RowBox[{"uif", ",", "vif", ",", "wif"}], "}"}], ",", 
      RowBox[{"\"\<ScalingFactor\>\"", "\[Rule]", "1"}]}], "]"}], "[", 
    RowBox[{"\"\<Wireframe\>\"", "[", 
     RowBox[{
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"\"\<MeshElementStyle\>\"", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"EdgeForm", "[", "]"}], ",", 
         RowBox[{"FaceForm", "[", "Red", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}]}], "]"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", 
      RowBox[{"-", "2"}], ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "pr"}], ",", "pr"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "pr"}], ",", "pr"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "pr"}], ",", "pr"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"FaceGrids", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "pr"}], ",", "pr"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "pr"}], ",", "pr"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "pr"}], ",", "pr"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"BoxRatios", "->", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6903090673369904`*^9, 3.6903090794408817`*^9}, {
   3.690309119516202*^9, 3.690309138797133*^9}, 3.6903091994145813`*^9, {
   3.690309295136969*^9, 3.690309302023919*^9}, {3.690309470822199*^9, 
   3.690309470948166*^9}, {3.6903104627993183`*^9, 3.690310490769339*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ElementMesh", "::", "femimq"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The element mesh has insufficient quality of \[NoBreak]\\!\
\\(-0.004823333822825857`\\)\[NoBreak]. A quality estimate below 0. may be \
caused by a wrong ordering of element incidents or self-intersecting \
elements. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:FEMDocumentation/ref/message/ElementMesh/femimq\\\", \
ButtonNote -> \\\"NDSolve`FEM`ElementMesh::femimq\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{{3.6903090518817587`*^9, 3.690309080649802*^9}, 
   3.690309140629162*^9, 3.690309201429162*^9, 3.6903092445743*^9, 
   3.6903092839987698`*^9, 3.6903093473331337`*^9, {3.690309450828602*^9, 
   3.690309472333811*^9}, 3.690309590054637*^9, {3.690310467647703*^9, 
   3.690310495673365*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx12D2KVEEYQNH2BycT3IHC7EAwEuzAYBRRMDEZBMUBQUQDI5fRmLgHAyPT
eYK4BzEQNDTURAxG6fYanKIGmuY7vK5XdSerSw+f3T06vVqtfv39nPn7+XT0
8uPJyd7S9+Xt37fjW/eu/zjYnB38+OD8xc3+qcEfvXj7+t3T38f6ze06Pwd/
sH3+++CHW/88+Gr79+Gq/nz3/DX9yW79we/s9jP4493+B3+/O+9av73rM/i/
eeZLXe2s11mvs15nvc56nfU663XW66zXWa+zXme9znqdJ77Uz856s15nvc56
nfU663XW66zXWa+zXme9znqd9TpPfKmTnfV+rzfrddbrrNdZr7NeZ73Oep31
Out11uus13niSz3srNdZb129Wa+zXme9znqd9TrrddbrrNdZr7Ne54kvndvO
ep31Ouu9T2/W66zXWa+zXme9znqd9TrrddbrPPGl89lZr7NeZ73OevvQm/U6
63XW66zXWa+zXme9znqdJ750DjvrddbrrNdZr7Pe/vRmvc56nfU663XW66zX
Wa/zxJf2a2e9znqd9TrrddbrrLdvvVmvs15nvc56nfU663We+NK+7KzXWa+z
Xme9znqd9TrrnUdv1uus11mvs15nvc4TX3q/nfU663XW66zXWa+zXme9znrn
1Jv1Out11uus13niS++xs15nvc56nfU663XW66zXWa+z3vn1Zr3Oep31Ok98
aT0763XW66zXWa+zXme9znqd9TrrddbrojfrddbrPPGl39lZr7NeZ73Oep31
Out11uus11mvs15nvV56s17niXf/NnTWua8bOuvc1w2dde7rhs4693VDZ537
uqGzzn3d0Fnnvu6/b+5/Ody/cW7p2/76q928njw/eHO/c329eeaz/XsPyfPD
fmZ9fO+Vr28ubPb3lr7x9cR73nXWevubre/+e262/8l7hz48P/zfZ/v3vX8A
NlVZUA==
    "], {{
      {RGBColor[0.6, 0.4, 0.2], Opacity[0.8], EdgeForm[None], Specularity[
        GrayLevel[1], 20], 
       StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
          "]]],
        Lighting->Automatic]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{246, 1, 242, 227, 16, 31, 46, 61, 76, 91, 106, 121, 136, 151,
        166, 181, 196, 231, 248, 211, 244, 236, 212, 213, 214, 215, 216, 217, 
       218, 219, 220, 221, 222, 223, 224, 233, 249, 225, 245, 237, 210, 195, 
       180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 229, 247, 15, 243, 
       235, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 234, 246}]}},
    VertexNormals->CompressedData["
1:eJztyLEJACEURMGPVmIl9nAlCBdfC5ZsanZGgtjCLDwWprTveVNEzFWOvX7+
qJxzzjnnnHPOOeecc845v/0H/ZUifQ==
     "]], 
   {EdgeForm[GrayLevel[0]], FaceForm[None, None], 
    GraphicsComplex3DBox[CompressedData["
1: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
7x/5b+wYvJt7vmfu1Wo49Ac9y/T1wDfF+/9Mvy/YRxTOuuixzvs1XPsn5O30
7f70nITvgev8xdW3LZoy45f58UaPb+XHZ+zJ9bsnpH0v+MG6Wo9YV/sdPb7I
L0xYlcl3gGv80KnxxOhkv5oe4FruMf5rPOhDLG4QB4v6jdPS875InM3o+e/2
LVM8mT6FzjewCy3ved4P6P6RGe/9RkY/1nn/IOP4O8z7hwwc+yK+6/ut+AFt
x8hX+3slX6FTx0P2pf0LfljX/4rO4jh8a1rPFtX707JwtS8b4ZuN8C3TVyX/
idBjIvRknofQ+lB0jjVhVYb/2O/v6vWE9LxR26mOt8Aj+8qcY2Ev+E34ovKQ
TH3LfOw4Btd0sz58QJ+0v9R2wt+I3luNp0gP/wcPcPRDx+87fJ2VuSeh+4no
bQTPH9qnwpN53gY7jcDFD0GvrlOA6z7dNb6+zNyXB4688LPa3+t7NtSVEbiN
5YUazt9Ynabh/CUf/d3+7LSmzP51Xwc7jYzP9IGwF72etkf+4lfxI8hd4y/K
Nwp2GhmfuW+Ov9Lr4k8037E79Iq8TPdTgMf0gfHaXuAH+qTzUg3XdYWOu9T/
us+k4bqOoI+i9Fbgejz9FS1/4NCzi5tXZ/jLfRv38d5CnuL+o8R0T4afV2O3
TBzQyEIcTP6W8zzR17YhseMRa3x+WrXcbu3h8n3bZL2L8jYht+MXVd5eeuaN
g7+93OyZiOnT5ULP1Qm5C+ba8L3dPFlvEfrTZMYmfzt9Jeu4/d1T5+vpk+rt
dclCvZv8PcOLmuypiaMZPy/gL7GfJmq369v+nlvbcM/jokbfz1udN+CFHlcH
1TX4eyrrqgx4L0no7DrHvOfiymLr/ORva0zCjlOeKpf9Qx/8nJow4LV6f7+u
xcQp7v7S6Frzz0QR5tfahxP8Z9bZSZ4eodv1849dAV8EH98Hen0++E29HZ3g
+XezOSoZfmyD0MO4SzyfkYOFv1MuTP7rKYO8GMc81td03Jfc57k+3JP8d7MN
64qc1iSNTZvKBXr2SRT5iWbZp7OHkyqRq4xDvoxz/qtloV5TfGhMBPBxtb0q
ofulhhgeE/gucgj8F32CbsYfXfi00+t5w3h3Tn9zhdl6sy2Pzg1aal44e9bV
B35ZYc++7e4rh/WsthG5CL/5Sx+b8Q5+TM7fr7m6Qehz+vBak8wD7uhts0b2
h146e5yZF/iliWAWrPT3FQ6cLnRgb+g7cj074cfaNcIH/sJ36IX/4PtT8vff
q5Vc6kSv0PN1rj//paxbktjlZdWiZ+BHn4NdiJ3y/cUJ2qHLZbyzr1GNtvtF
bj3hP+vWe39lgr+SfUEv/g+/F8GTWZ9133MO7hvxE+B1/frjVgl/r0z43jMn
n/GLwR8Kv7DLYI9C57ber/r+199W2Ah+setfvdz9c+KXlfk+zvpas1GiRv+a
J3oFX+CT9htunbarxA+A/3O/74zewz/4ht7enNCda9Z64u9/f1dn4Q/7ZFzY
r+wz8N8Ee5Fx/vypWvZ1d+KfJi02Lo71SeHYA/YB3glJP2rbZjM50befU3kH
/+77Wr+ldudeSHBps+gTfizED+FHiCO+D7Zts9Dh8qTfKmyz95PCV/BvldA9
p1HsHnsRe03wnvC8qUwQ7NogdL3k9dkemDQgWtYIf5x//jb1p+BBj+A/ePk+
4DfkA+MS/zXsTaPxbOf9gMBZj/WL/MZFqZ8i7rDPIBcT6Lc9nH6stsV6WSJ0
QBfwCJ/NWO83RR913sI64PkisZe/f2Z6+DggcOfvdlxreyToT/1G4t0yT4/P
X0Y2G63nyr8Z8iro136JuET+ENE37NMofy77hx/wgThN3AbfP73/Fz4DD/bg
88QeqRywZ/gJ3Xyv8XX0cSSTx5A/kU8xfjvPZ3Ow57Psm3jJfPwAcRA//JbP
00zIo4QvrL88cV//XGj6J/XT8Q2Cj/jKvjQ/jvZ6kuqzl6PIXeeTKt/WeaLk
J8Q54p6Kszpe6HxS4h1+H38y1/t/c7e7J03fflVGDu5e5plr7XXufuxnJpKn
id5jB+xHy1HrM/sgb3T+9O5ULsiLvIf9MY94w77AC9+xPxWPzPNeb6WO0HYN
Hu1PgKP/2FGRP/0fO4IP2k9q/6fyDROxUwvdxCP4qfer5YjciEcfen4azU/q
EJUPCx3suzjPykk+jx5Stzzh6yrhA/FYy5/51Ac63yQPLYoPvzaJHSXqs+iG
cpnn+t6zV5iQ/4vekL+HvN2SX4FH5yeqLhP4Td7PCX/d+d+l4l89vX8qNz19
/u3r2a5zbLEfSO3rbm9f8FfyjqK8sZBvqfrLoq/oL+PByzrgj9QdYj9BnpJ/
wkfopp7CP+IvWRc/gl9h/ctmPHZ+x5pG8/V+l56616C5dnjHDx6+4k9lmXpZ
+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
9Cvwq4OTiV1Xiz/U51CbuecCpsk5Mnju930FOXeGrjY+DloVj6TvdX5Cb3W9
fOb7ABe8rBPwS34d8nlDXyXI0ffRDljpz90uk3hqL/L7K9bPEZVy3wH80F10
n6AQX+AX84FDT8irTcirLX0W8IDfnQOcVy1+072/8H3JwwVO/yqSJ0i96+6R
raoQPkAHdJHn01csOr+qqhV507+B/9ABvYFOmQ8+5Asf4Sv6AB72R32h4ybj
0DPkVpT//E/cIc7qvgT1PnTSN+MctsjPHZvW+ZcnenNV3lCXL07s5o1Z9m++
jhA46/bzft8iH9cfW7TMv4+kOa3b9f2icP5PPza9L+nv+4h/vtXfCxH9pX/b
2fsp0Xf0QOdp0PllgrftKv/7Wt3y1r2ncrf0+Q73Psc/r5RzH3X/VOjmfA1/
S9+V+op6CzmyvvM/g3L2E1dXpPdn/PuW0vvc6LerS95qlHh6VBLX18yVddz7
cR4oNecniDqkcF130z9E7tABXYEeuT+wl2Pws8J/+jX0b6gHd0zw35UXet1y
d4Tnigt0q36FxZ+wT1fX3Vbt7faHsszzIeE8VehA7jf58fp+qvgH9HG418MQ
9z8V/XR9h47VXs7d5gmcfQ30+xf56PvqxLWT/PNB5gCXLleI/qH/Qa6iL/p5
GdbR+4BPgT8CV3wS+0Ev4Q/2o+9VYyc7ebnZIC+BB7nJPrBz7B59Rr/cPa+j
0v4hdo7dsz59RvqO8Bk9U/wRveU+KnwA3i6Z/nCalzKO79ErxulzYvd8QuNS
8Sf0z8/y5/oCx19xHsBn7oOxf/jBvvQ87A5+Ovj8nMdzzgrpo6g63eIXlB6K
nJTfkziBv8SvMg5/qfuBxA362EX1Sjs5BxS4tj/8S9G9yz+lz7GFe39ybgg8
yEfwjA99Z/pr6CF+GX1CXtovF/F9fk76XYHPwh/kX+zn62yx/Eukf0Q/CX6x
H/bBuQz7Kbpf8z9+CT8U/I/4HfwQelB0bnH3CqETOPfQoZN9Eh9c/vNgqcCJ
D9CPveGfoJO+sNOXWenvABAv6Je5OvCWBukHbp/Mv6HW+9s95PebBA95F+PI
S8nrXf1eWi19VfJA8tpFHk/mHgVw8EfuJ4gdFr3v8zDpJ0jd6u6VjkvfO8v5
MHrr9PCgBjvIn1OI3bIu/XZ3D+bOKu+fZzbKuQb9SeLiF94f+nrJpO+p4hxb
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
2svf2+LtGwYulHND1gH/dz33a9prZa2Ztvmm08c+njfTh+6/8QuvLM34Afyd
9gPA9Xj8lB4P/NMX5m999yd5U/3xuIZDWtWZi37c59JNzi212q7Br/0AcD0e
/Ho8cO5pUd+gz6Vdn9h4zbVNttd1d//co1etnbDuqz3WnVNpJ3Ts0XLJcXXm
898uPP/jb/Nmdm3/sVedscTs5PlrJnh+mws9n81/zKCOp99cZ+/Y9pbdur6T
t/17nfXmt5OXmIal9ds98mzeHv/ZBS+8c2Sd3e+dI5+b8EmpbX/mvIPvLc2b
GRss/femXevMiL2Pn75r9yX26q9e22fWPXVm/PAx+x1eWZBL4577b3FmiTmr
bMtDHjyi3ozZZPK8x7/Im+Ou2/bF50YsNh2+unrCMzZv/9R65pMPPVZnO0z7
aeTcdkts12vnlZ69Y7WZevjmG+87vMnsOXX/m2rOqDJ97ZBua77N2+7Vqw99
tqLO/tJ52wcPWZP+Dr16r2DsPYT2hD67//jchU3m4s6lX8/qucocOLhNixOf
WWg7bND9vGfHNNl1bc9ZuHW7GnvpqS+cM3p1pd1sxzc2uea1Ontw1cL9/lVY
/4tH+2yy2VUl5sbFb3e/uKzGfjJgra3+Om83PWWf03f/b5kZ/vyUeWM75e0R
E2be2fvxevvg3L2P/XxOqYk8f2Eiz1nYqR4v65jNPX47uN+vV5318HTbecql
N3/ySaPpPmXrQ8qnVNjK40oHjqqsta98838/vbMgb+8ddffSl3YvNSOvPuaC
zavy5om/1h4xeUSdmb3z/SPHnlpiF77U6pOzl+bNvCMPHv7LD3XmysunnLjF
HYvtbWN+vmtigb+zl78895oVebus9S3D+t2cvi9V/U6EvAdf/Q6F+Bn1/knk
ot9PAh79+xGCBzjrXuLlZ3t5edrOXo5G+1XsSPth4Ot+PnjkxZ81mtJu3XYc
/P10e8DUaRP/Nb7CrJr2/vpNq/P257dHNbTuUGdffWbkIa/tvsTmNv/wqItW
Fuyi5fCbx19fZx86srHq/iNK7JAbrjtqi3/W2G07DG337rK8bXf8jEW1Jy8z
kf6S3caPM2Geae/H2+sbRw8aOK3Wtn6u5Lq/92qyj3b55aZ9L6i0O5edNeC1
i+eb9wcPPejFxwv2MveaV15YVCGf+T7A7RezL37x5jdK7F3X3L16Rpca82b/
m784+NlC3hrsd69/HPzhuTfVmi+OrN30sPJSe2ObfkuWjag1d3x0eecP5hfq
0TG7znhlTfpeQ/in/KrwW/lVGa/8qowHruUFHi0v4EOeOmxuj6tr7eklh/51
+9l5++ac/VvefdpSU3vkP/4yYbtas9mFi5a8W/A/H426+fJ545aaO7w9mmCP
5qFgj71nrzqs19t5m7+2R4eqC2pt/6dmHDr1kDKxW+z4YT8eP2uWeL9rgr81
W5//7EazLlxiO5u9Xrj64RozZmCnIc/n03vp6j0kNvKeGRO5lxt7j4qtO27W
zNUdC/7k8AXLHryuzr7h5WtP3ve1ni/lS+xux8ye3HFBTvSh28Jhb69sX2Ft
78/ePeyHKnPltjNfuq2QV+/a9NylD5xfYcc3tPph0qTl5ouy/xu4plWlvJ+I
8xnO3yPnnob1WB/93H7Rke99fHyFeePXFZ26t6kS+KWzBp01blapOfboLSad
/kHOBnpM1zYN5eP6lJj2Zx589bo1ORvoMV2nHz3PNNbYCU2tKobVN9nyba8+
8penKuy+m1+4+vkTauyUQ7/++bKT8/b2e2ZMajIVlvVYHz6wHuvDB9Zjffjw
/kZfvf/a/FLTeFufy954Iyd5ZvUOUy84btcKe94l11Qc9XOVxOW+4fzCPY+y
vta/N25OhX35vt2Hlc/J21Yn7dz/jKdr7Rv/fXRYrrLUDj3o/w4+v1Wt7fL0
6s8eqcvbBQd+P6v7yKXmkZoNSk+dnerzjUMW7zfp5yWix+j1mKCfrMf6YV2z
ifcjJvgVE/yJ6VLScr9jly8wO2w05IHD5tfZoLf2K+8HzY/eL9oDvT+0N1+y
sMsO+1Samf946s4NayttSfmI6r9vW2mffP7P40+cvMLs9NXt20z4S950GXr8
k51bLrcttu47YmVd3nS/q8uWN02tNQ2Dtlm48/Il9i979Fy6+d15+1inTj2P
H1Jnj797/YJe+VJzho9rZl8f12yIa+bsUasPHtm+zrx41BUb3XTMArvPuSfv
8Ul5hT13SP8HHjimxo696sWTLm1TYgLcP1d1R7UNfyWvBu8/wjrEzbEXXLrj
jE7VZsMp445v2T5vVpVs26F3faX581Ptd5i59wqzTfOJ6zZ5tskcdOPAi809
VZLH8RwS/Z+bLjqox2WP19pDz3h05jlXLDRDJw244eUFFWb/my9ZfduiGlNy
wO4Xd80vsgFuj9jksvlfDK6we73c6YgjPlxuNnx+5Ltnblxp+q4/pWf5LXl7
9Cslbfs9V8gLbpj87PlDS8wbB9U2Nz243DTNfrndpu9V2KkXDT5qbUVB/39/
X6a3x2MCHvP3gOdAz38T+G96Bv6PnX/zCz3Gr7I7Nj8zrOcJefvWuv2691k8
w553/0n37l9daWe8f+3LF3aqNH3OXfHLh9tVijyQD/zX/n8XV7++m4kXwPX4
X9wB0buZeBGD93HyeCKDB/iId+7/+pLjSszKLXfZa9ehaV2vx89x8eiJDH7g
yKNfkE8fz0972yvThtxzV405pee7M/66Wd7stPLtXc4s1Kc39j7NPv5Vzg5+
4d0u316ft7l+3Z9/q1sFcjV9gnz6BjyuX3L4cn9e93Wt/M5C+GzC9wJHfsjz
BC9H+3Xvpzb/5F/V5vZ9T/p22m4F/1A+q3LT8soMft43r/EDd+c0vVapPvbE
KfRffL6awiePz7X9oDFnpm5x/c67H1hl+4zr1KbbX6dDpz0o2D104i/wH8Fv
mC8v/vvffnqnxiyyp7d+u5C39prVsn/9JWXy/CTPX+rnVYE/kdD373lm8fm3
vnZqIQ/e+vY7avedUWOrO/Z+oH5sWVoHJHXpmjKhf8/gL/Afer9hvMAj53Gx
e03m89tuueWN1jVm/favbHTA5XmzpPOXB67fu8KcvF/Xlwddmrcbnrdj5yfa
1Nit/nv2Bcd0rLAtJ5pO391Za46evdV3bz6cNy27lD/W7qMy+7KPf8RDE+Kg
v88/eq3wBTrRe+wAOH3zMV7Osq9TvFyFT8ADPbaHp8duEOjhM98HuImcM2by
PexL53vAkZOmB3kgH+Ajlu7wU5e3F5m7vhvc7bZJNRKn0OPNE/R95goe956I
UXlT/L6MiVMWl98ydfK4GrtJfviruzXl7d4fXHTF+73KzFPdOl89cK+l5t2/
jx5/7yVrzUrnl14wO1za9a9bXbbWfD/1kjkt/1tq/rn0lFc3OPFVf743Kn2+
WvN/I0+PwEf/7fDn/lbTZLvW/6f/lSU5+4+yhX2Pu7wy06/Av+l+BXD2U+31
QvYV9MA2er2I9ifBo/sSwMGr+QZe1gE+84YnN954z7x5a4dzBpbVrTKzmw+u
mHrwTHPJj7vlFg6pNjNOeLBDv5Py5sD5iz55+tpKM+qa1/NVuRpTv6qpi/kq
b+4r6dPi0YllNsBtg4db4PAdOTzj+W9/8HC7o4fbhwKcz2GeHRPgms8qLgg/
gH+v8PcNcv922VvXdh+11OZavNii9cVr7cDRfZ7+ftCATP8HPJrPwDWd4Acv
68wP+LUdETe13QG/b/rEkgdOL9Qje249+qOCv71zr2t/mXfkMvNyw+Leiyrz
ts1uHff8pH+NffOqtx+89dhlvH9f/y6h5EPF+VG92JuOI+gN9id6ckndBtuW
L7fl7947teauQl5y1aph77xfZbq8/MlHL+1RzV975Ull+yzv/6V58deXXr6q
R5N57cvOi9cOWmXe/WyLNnsdvsigH+jLvV5PMnb6dJB75H0jNjz/a8NzrnJf
Oty/tOE+pvjLyb4OMaEuMaEeMUc8cOHsk85ebmpuHjz+uZol9t5Rjwx77aIV
9rdeH0/6rrnG7nrvDs1zN2my110xZ/a6h5bbDlt+uOT5F2vshddcel3fB5rs
yt1vHz3ymUrxI/gV+IYfKT7XnjjlqPXr9vztxnozoNPHvbvfOMO2n9lxpz2G
VlniyoYhzuC3+548p8fO/5c3PTd8+rLxH9eaVjP32X5cwd9pvUV/tN4C38Xv
x4T9mbAvM9jvx4T9mbCvjP/Hz2i9Ba5/h0W9f0DsTOWfYr8q/5TxKs+U8cA1
H8Cj+QBc0w9c7xd47tMV2y+/vdoM2HfdHrf1ypv23w6ZfepVlfa7jd78rfPk
eju56Y6JO7X7xvTrUPHPbf4Vfjfzf36vAbu6uu2sva9YusqsXzTvjFZ7580e
d/Wet/qCmTby3mC7ZKtVs0deWmMa+9/+5MaL8+aCksn7rj99Wez3RAzvmQp5
mcQB4Ly/4nmfj9kjx5Vt+dULeVPXc6Nvus2vM0u6fTfjzF5LzIbHr3u27toa
U9Nr+m3l7ZvMs5Mn/dT/1eXmpC8uLz9tt6Vm9b+eHPt4Ic7O2XHLzrbHTXZ4
6y9HvPta3p43JV99wJR6+8s9P1b3a7XYBPptk6ffQv8dfrwJ4w3j+Xxn+H6D
ex3crvB+Ff9tOj3o/err3r/Y4G/sR97P2PPOen5V20HV5i+HfLHp/YuazJE7
PNX93huWk1dL3k1evfPW13+986eVtk/7Pe7a8v5K8/1jw4Zct6jC7n1D67nD
+9XaB67fff2JPy4UOHk5eTr5P/u/K/AD+rFz7D7Yuznk2BVXvD92lt1jhw1z
Z9fUmuevarzyyYErxB/hn4JfMk9NfmPjHd5cYFrmt+my+xM19uC+d1W+uNty
8+2jg2o+2yzV2zu7rfnPoGnTxe8cfO/6NjWXVNkz7uxz0tz/Fvxe5ykLd9iu
2Wx7Ukmv+zvmTP3C3Q8f3bfcvH7a1V9c8bf55tqHnlq75ur0PbEjfig7ep8P
qkynMS89eP7h8nsCNoLf/vme4Y+cMW+5fP/Y+aOHb7FBpfl/SvDVbQ==
     "], 
     {Opacity[0.5], EdgeForm[None], FaceForm[GrayLevel[0.5]], 
      Polygon3DBox[CompressedData["
1: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
N+d2z2zUTTvkutjmU6FfYi6Ncx53s7/s1kv7oYn6e0Kmq7IbMn3ITCEzhswQ
0g85uZf9kD3vHP9V5/WfkJlrH2Ou8XaeKXm8r8SE9kD855mDPN7rcQ6PjNO+
cOxZQ6bt5rxh/lDXz94b5Wmx3VaD9E9mq/oN47yP7+c3hDwW7d/pZd+ea5g2
3Zx1zsYqY9Zc3bSl94/97uzl/HZ4L8dy1z5HN+czNv18ob93StpGF/RyzJin
m77C/N08jwW6+R8f8D/9nDe2D/0HsT3Hau5u+kJ8Bfb/Ab30Ad7fzfvk/5zX
9NG+SuhvjNPO0i/Yzeznx/v5rD3nRWObCeNpXN/mvbTj/xvt74T8MuSekFnH
+ew9p4VDFqzzuCDafzXOee0H/fSdfhLH+J7z9XxDP6mb86Xr+nuUi3XTn1u8
mz6J65+3m/OiY7ETr6gxydjk2nq99E/eqT5hm2vH2ef0tzWqnywR+hNNbsun
WTrqXx6kj7KMe99P+2y50JfvZtuDg3x2Ww3TNr6lybHtlPjP38X2U6J9S9tH
/ZgoV+jms2RLPhj7vTtO/9a1uI4Pu0exz3Ox75/6aU96f9y/zUNe1kdCdo7/
Xc1z7qcP5hz0ozk9E8eN81i9mzbs7FPSZl2jm/87Z+yzyyDfY+VXB/neev8/
3s2xZ80oPxmyVsg6IWt3c+zly60X+roln+6m7b1BN+cN+6zaTZvW/2/cTbt7
Q+9fN/1CbTeOczvbfKabY4D/mKefdiX70vvkXftEN+eG99b7t1mUn+tmH1g5
5AvdfI9W6uZvHwmZ0s0xwD0bV33FkGfGee92HeT/uCfuDZ/0Ae9uP4+3RTf7
9rz9/O9f1Vh6UtTn66f9+M/4ff9e+kvTjfP9us7zDJkY53PfKuRLxP0ep03n
/K5o0pfetrbZJmSjbtrp23XTX/14HPvCXs6zC/WzP98+zn6qv/44ymvds+gv
c8Xv13lHQnYM2TVkF+/FMO3dQ+I4U2KbLeI8DhqlrcxmZuOyS1eL89lqlOew
Zzefl2e7V8j6IV/vpt9Av2ucNhvbze/sFL/f1Mv/+kL850tRX4VPWH6hvvqx
btoJTS99C3bADqFv2Mvn8lF9JcovRjmoMZBffGToJ3ZzLLu8l+OFc9MP2bHO
lc2qf30jruOsOMYormWR+k/HXLKe6Ye6OXfOGsdZqJs+1xeqH+k/3m0+m3F4
yeozi9eYA0v68Tj9/Q/GvVwq2tfs5XbDkNPHOb/5//8b5TlcbIwZJy6xX2xz
UegHdNO+8IzMi8ZF4xU7bf/Qv9lNrOPe2offfmA3bVnvyLrxn7v0cv5eIMp7
+Wi99DX+E9c/e2zznZCDu/m/343y8JAjQw4q/VuuK/Y5LspXemlXXxrlWvHs
joq2Q+sYF8ex741zPieu5Zhx+utHw4hi2xM8l2H2e33uurKpbwv9Pb0cVzfr
pa8EHznDveumfbVsP/snTObVbs4rsAnXulw/5wDv1bVlK/Z7Ob7+pcljHFPv
zNbdxDh26+a1sMOO1w+6afOx1dhsX+um38nf/3Evbajl+/nb0XUc76u5ckrN
Qezp5+B2IT+M+gnd7If6/bd72Z8+EGU3jnN5yCndxHZgPGeFfLif9xwmtEJ/
Kp6iPDXaT+vmeMme9XyNs6eHTOP97aVf+Xn3oZu+rnnrm9E+S9TP7uaYe1rt
w248J8o3mpwDjP93RnlHyAzj7Leegb4Ll3I954bcPM5S/Vvek17aj/t000b2
P0u7HyFHh3x3kH30Y3E9H4k+8VL8z5n9fHeO7+X7A0+7MPrFGv3E547oZh+E
rcHbfjLO/vdK7HtBN8fLi6K8sJu259o11l5c/fDY2s/+J1RfeyVkp5Cl+onj
HdRJTPbqfs4lb4f8X8js1Zf+Uc+Wb8Kv+Xk/n6X/MMZcFuVcvRwX4YewQ2Ow
86I7t5vifOedknjjTLH/jOaKXo597tfe3bRpjo97dOIgbao5e2lXuc7n6737
cjeflXEeznB5N//3+tj2hpA5Bollw7TXjv+4KOSZbuISZ3Szf/NrYKUw03Xi
9+cmctx2TPjsT7qJ17IL1+3nObGpHu/mvfxUtJ0XcmfUz+qmz3JcnRsf/fS6
Hs//62X7rlD213khH+3n+/p8k/fONXgHV4/z373+++Um7aSDBznmGftuC9kh
9Ev8Tzf9O37ez8bZF4+Ntpk7aaNu0E+/g93OfrffItG2YT/76KNN4hP87vf1
0/fmk8Mz+Fwwokt6+e7wt/nlm/TTx1yol/7vZ92zXs493iX++tfLxtOfnf+j
0c+nCfnDMO/TgqO8V8fHsd7XS7+Lnw4ncT5HRvtavcSNjaWz97IfbxLl6b30
K23/yyb9OvMknMZc+Y0aCzwDmA4MgZ8Lw4EjssnhiPvV/GUe5Y/zy38Q5/XF
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
fuFHd9R9+kW1mYO9j95L/vUMvfRFL653FkfiuX6jl/2WLzBNL30hfs24bAxz
oZgQcyN8ADZqboe1ii+FHxP4cYu/Gu8eKaHDlcWRfpR9jaeId+u8uKZLR4lB
wqzgv49Uqa4frDbIfuF/4bH+25gKo2MnX19jLBwaXgnXu6SfuhK2Kq5MTP41
/Zxrzbnr1bV+qa739CbxaWMtO57vwIfwDuA/xHIbo2CwD1e/eKjsNnb9fXXe
ZJ1qYwPCw9mk01X9qU7ijeJW+yWwbW36qlg0/sLJ9Vw8H5zi072Mmzbe4riN
G2JvHumm/Q77htfD6levZzNjlTOUvnoc97LY99F+xltF06RPCqc4s5djo3yE
03o597c5A6t18r+dA24PXyYO8Pfd5C/huQ+Gfn7cvxWGiec5b7j6yTU34OXE
uhtj4XvsTO8afJH9Ip8BLw2XMBYa99kGs/SSFzM+8H3g6k93Mm6bru3R6l+D
knWrzb2+op9YOqHD1/UtsXqnlsDmtbHX5q2xiz+An2LbwP3hyd+o6zCX4mlg
wvc3ifcpfxLHeaDJPvdgk3Hjv2tS/1I/Y//g0fw092SfXo6XsCyxDZMxDv3E
LfFR/AxzznrDxLTg+XB9frQ5U+w3//SFfuKpuCw+w84ldHyAedp8fWDZ2/PW
/7L98VD8D6U6rmD32m+/Er6mNng9zuDOKvV5+pfqWYoXJHR2OKzc+HRVP3Wl
ezZdjUXGpB8Ocp5dv5/183qJt3g35ZV4P/kcfAs+xqFR/23oWw4z1muil7gG
mxz2y1Z8vZu+35a9xD5hoOJvpme7iLdokpcQG/VybWd7fqIx0XPxfIxTf+jm
uHVmkzgfvI/tzM5lS8ImYBTeWc/Cc4A/GIthQPAfY7H45nlKcBra2LDzdZLb
IHgObeKexM431b83Kx2WeHU374/5DPfBj4EVHzlMvPjaYc6vN3ZzLMGnHF/n
KQeE/p9ucqC40E8N8n32Lhvz4Wtw7qea9B/EN7Cz8EH71vhK14ZvNG618zId
hzLqZZ4If0Jcjvgcsebi589iK3RzvLm3n2MOf+GPTcaDK2+I9oeifDH6xT/j
ev4hxi3qiwwzd8I+7biFg3JMx5ZrdWM/x3o+BN28xmfhr/ATJ2OP2Tm9HI8+
Us/aXAznf6iOPXle0f6JXnKIbH0+4nw1D4rR+2X1hU3Zr8N89nOHTfTNQfqG
7qc4QlgZX4JPMfc4bTW2DRtn2/htx9j+h/3M3cIL3j1KuwHXi0/je4mr/lkJ
7kcbm+vhJmO9lTdH+yNNvaOd5IIILkgbv+6qXu57a/znleyBXo4T+HCYsfwQ
8y47bJIv95/91JW4IzlX4gm8A3ijB3qpf72e/4wle1cbHPqrvcSip8T/Ht7P
mKTD4178A1ZRGDX+jj0IlzDn46h2KF08/wKdxMja94WOg/Iuw0h2jXKxON6u
IRuM0wdzj81nsD/cPSzQPfTOwALIkXVf8Stit9jpOCo5fXTY5rU1FsMZ4Y13
DDL+fpFRxtZOZ4zuJ3ahhG3TYT43dRMHEruAS7uhm3Ek+p48Lv68WNaVaywz
psHS5W9NF+dw/DjxHTiPHJovR7n/MLEfIqfGb9/tpF/Kr4Sjqv+yn6Jt9zjX
JUaZGzhXjUVyLmaNY503yDycPdiosc0Hx8nxsLHv7Sb2fk83n4G8P+PQj2qs
ZuO5vpvq+XmOxnKY4G/7yS3dX6U6Ps45aJMzAz97oF95BP305cUxrtdL29N4
bozmM8E3t+jlvPMvdsQ48RXvGUyMr/9yN7EQmAjOk1/Gj5HPILZaDoFxCdcD
zxTPB9dnEMnnxH+8CmuAp/QzTvKp+J83uukDe2/EZ3p3bu9nPPLlZVfhBvHL
K47T72DTwZBwxIfVdYk/d22f6eVz8cz4JHgDPggfRmwAHkd+zLzDzJF5n9jN
6A+/jv94MuQbIf+O57ZlHHuFeGbLDNOekYOwQOj78lcGmYPChoM/sOn4b3xc
+B1s8NZO4oN8a76HvCb4DP7FubDN3hmmfSZe/vnynbxbYquMZ+Lf3HN8pjxF
+Yqw+WdjPPrsMHFY1+za4XSTeYajxNrlqC7RT1tTLAdb9nN1n2/p573+eD99
RnObvvkJ+MwwuaRh+V3GQ7F/fILLy5afuUl7y9zI/vIM/uvYo8wLFYuCR5Ur
s+Qw82XWiN9ehtFF+1/ZyiFv1H3GK7rXxlU5NcvGPlcMMv/n4PLvxBHB0GEl
+gxfQ1y898V7c25s+8du3kP2BU6QjcHHuGqU52gcwHfgPcxPxgpjhljaZXrJ
p8iPMZ69v/R/9NOGVGrbfpT2NRzMu3BRJ3Mldq6xGMfrPZD7sfJwao7LG9H+
ZslhIa8OMhfyY8OpucL/iva3vGODLL/TT/5XrhAO+JTS3+4nH+KZ0TcdZS7j
xqPkzKbr5TzpnRGbgTOEgYsJEYvv/PGJcDzPWV4SP5vfLoaYHw8/hB2uzz8Z
5hx3asjnRpnXteQobZpx/RfbhI3Cxv/LKPmynZp8R1bv5Ht8RMhTlUAuFw52
O5mjaVzrZ7ygeBQx/E+Fvvo4ueb3jtIWvKfefTbGcdXPtojfNhsn18zvk7f4
6WHmaR4Vv183yDxq9r686o/H9q/E9tuNM59V/CCedOZB5tXuyaaJc98Lt1E8
4iM1nm3cS7vqsSbjh9k/YsnYJZNxFN3Ma9uc7R3/t9Ew43G1HRPncv0g8wVh
6dMMMt5i2irVPzfO+i86ycPJJf9EJ4U+/SDvh/tCP0d7/NfDoW86zL6o7fvx
XzcOMg8YngZLY+fiDOE58JXdaq50L80d8mrFc7xS+nsHeQ7uLX2W6ldsWfEU
B3cSE5q5lzk2niefhi/BtuZfiNH1n3+L85g9jnFcP3FmNjab/Np+5rTIw4eJ
wJPNNdp/2k27+seD9Jtb7Fx90drnp3WMU+uY7HfHEKMIi1u5junYxgrjhDwa
QndPYEawo5VK6MaZuZqM7f9OCZ1fwB6VOyzOZrZxcsmOB5sVk47Tlft+Zz9z
1tkl+5adohT3iq+eEn1smpDb4jru6+eaCdZOMO+b8+ELM5Sdw96Ru35zN+1E
sn8/Y0+9d+ILcK8fKl0MjmvnE8AsxWyIu3rfIJ+b5/ftTgr9kLp3t9ZzObX0
+Trpc7X+lr68ZdWXiGd6Ylz7vHGfPjFKfYEm515zMDyeXfXBYfpw5h5zEL4K
V7541d0jWJA42F/3soRr3xVljy81zNxrOjxMbI54RzzF9aUbC37pvvdzPpff
ST+j7FvjxloldGPJ3+K/ftWdmt+rhDvDT3Gp5sTlYcNxXYeE7DZInlWuM1+b
Pca+FofxkbLn6EqxlEvVu9Zy9UtXnZ/9sUH62nLFdx5l3KD5DIbWLRHPxEZg
I7GPYCwEZyBmCDY0yel0srymfLTJ2J9urldweOlndTJ/VR4rn1Q8k/rva540
X4pN+VfpuOlbh/mb+VSOOl2befaSOLFPNpnfLkaUfaE/6p+v9dN2NLYbE1au
8XOVEnqbKwwPlNfzq9JhhGJNrGvxJ+cQx75+mOtnsKHEYMP6PzLI/L6nuznm
wmJOKqHjYtjQ8K0nSleyn8W+sMGuKHmyno28gO36Oe/Q726yr+Hf5eD7Lzm9
6uLKnIfzmbXkmXr+f4vfd49ntlXIDYPUXxwmfsYWlL9F6GzCZ5ri8iZS6PAq
PCW+8qISOm4KXvZCjSnKnUvftfw13PY2VfI9/Rf/88X6byXfTzyZOGz2hdg8
8Wd/7Kddz74/q4QOd3wgruFv3YwHIHRz/eXlG+AtnyidXbRLnRtbdpcq8f/G
UPEAxhuc0RlVZzf+Kp79a6UrzVHWtuArHFt+A7+cPYlXhh18v4QOW2HnyKkU
j8XnWH6Yfgd/h69zWh379To+oWv3DrIt4dmweLj4FiV03MNl/Vyjhq3Er2G3
s99hsrDZI0vouO09og9fx4YdZG6y2HXxrGv2EzMybv29n3kSfx9kLjQ76Nv9
FDwSG1J+sjxl+9zmmMOMp7xllLY3LIStu06T9i6OC+e4dSfjE5Xv1Lm9W2MC
oZ/ZyVgynDgfndDFSFovYYEp6T/TlTBCfvzNvfTlpx8m12osN+/d1c82eZzs
TfGNctv5EbAFQmfr6auwrM1r3BmU/8gu5Yd8Ypg2J108qz7HzoS7wMJ2q7o1
BvDjcAdCh0uJpTb/s1NXqbLF4uBwYgQIHQa1+jBxUryNdULY1pMcTjdtabFS
M5QuXs6cKCZNjvyxpZvr2UnTla9B6Gxz9q74MeskELrxEHYrNvLTpZtj5EnD
yMTd4cQJ3fiGD8ZDiQtZrnTclHF15v85/sxlm4kvg/u38XdfqDpODjdnDYP/
lo47MAfxTfGbuM7pq+4dwMOJRSJ0uchsGvF3+9Z4RG+xfbi+Ofq40uVkwCM2
6CWvJp5GXI285gWnpJ/err2kVLfGFM5avpcYoRd6qYsNxGWIoSP0z9f10l0j
3hn3i8vGS85d+xE6jMD9hFe08xTd3AXTh+3jJw4tHaehr8AtxeURujEJH4AX
OKiTMn/5BfIE5RXJFbRm1js1v4vrF7MKmzQGW3PAOIwTgsvK+cJPiDu+o5M+
OV/t6ir5bldXH1+kfDFCh9/gEfh6+IOFSuf/ee5ibMQiEbpYp9MGOQe03Lu6
WG7xfeL8Fq93Fc7v3b0e/uW+9XMdpcMHiVPAMcRC7Fjj/tOjjMWBdT7dZAy0
0homrS6exXwI91iq+qTYLPlv1unhc4nlENMxWz9zw/ntsN5tO5kn7t3k48P6
Ziqd3y/OFMfTqWc9mUfeS7wZ7iwG+Vel4yDYiDiINauv0mFp5kuc0e2dFPov
Oil0z8haY8Y9/vatVYptw/e5Ftfk+lb6n/eOLu7JXAazFBdjPbP7e1mXnwS7
ts7EdqW360189H/a6Xhd8dhisVs7B/7tfXq+l/H47RptSrERsDJ8vVzRdUr3
ruDqcHbw7a+VbswVu4e3adckU5eLow/Iv2CrEDr7hS0K94effrd0YxuOH9cP
lxuXznYWsyRm1TpabFj6WdV2Us1dYiTER9xdclfZbIs0mU8tr/oMMSux3TnD
PE9533gnawXBvqz7Q77WzzhDPhNfid/ELzq73vc5holNPggHGmZuoDEJlgqD
w4MMSofFwU0ei22PGuS6aHMPM+bNeGfckwc5mQtZGC2MSR42PIHQ5enKn92p
n9wK/fEmbS44BM7FHAeXgEk8XvJYbeN8YBTem68Mk9P88CDXiuKX8c/4afw1
MS7nlg47xYVab2H7QZafrffnH9aX6yU3QeCNcEfrcb1fXGyTdgP7QZwdXWkN
KP1qs3oX5G5avwP+ss0g12AItfOzYdrW7Ao6G1n9wCbzFvpN4pCnFxYJs4Zd
i0cg8k/n6WT8AZ7zw1XiPelsQLi3tdD01Y372UfZgHP3k7N8rXRtsB2xgzgo
6xzR2ebWscFtiZGQz6JUZ8Pjmvm7xPoT/CM8CfywxRbV5T7e7f9hPoNcv2yG
4dQ1yfAQz5duu+1rHLSNNvwEnsJzFLOE7z62+s4O1X+UfqObj+BUcnZhGmI1
j6oSLkOHIe1c792JpfMxrWM4yS/1U57pJG7J15U/yPchdLaSMeirNW7hqqyz
o+74k7xZL/PVHH9yrZmJrNP5D/BV8YawX3GeS1Qpb4aOKxIHhzsS9ype3xp/
Sn4o3Rp5cD25PPhjmM1GVcJw6DAg+FiLC9HlP69dOowAnwXrhnmzB3DZ3+mk
0PHbfCWxJadUyR+gW/NHbGTL49PNyWJrxWm38y/dnAyLZCfKf6ArcZ3WuXiF
bTBITlOeANuIn8PfaXEDOj/mzE7mubR+Mf2gmgvEiE7Gg5S+Tb17HpMYll6V
s9W+uNoz65j0FlugG8fl3YnfkocHQ4d3wP7oSjEGMAS4IHwQ3gH3aHUl7JB9
jnteuWwavFKLD8AY2baHlc6uNXfgm8RC7xTbPhP3Z6lBrm+44DDfcbwMTkYM
1COli0uVPy3eR9wP30+JCxD3Jv4Nr6NvK1frZH7r4v3McWWbmcfb+fzoei+V
bDa6NfVsu18/BQ+Pb+JLf7+XviGZucYxPvKx9c4+XnaOcVtMjpw2cc10pRxY
8Yvyo825HykdfvmZ+N8T4tqv7GeMjXyPczvp44g3YzvtWrq5y5gIG8fDEvEx
uFlCN17Dx8Q5i3deS15EyDO9zG2CNbaYo7o1OeW44KTwcjhm6/DIHaQr5UjC
ZHA37TqSSvVLcVJwt2FyS38eZK4p7BfnzKcgdDamuVLsNK6G0MUmyBV8tpNr
TbDTnius4+i43x8f5vs/rz4/TL+cDSB2QgzFi70sxUKIg9An7yyhy9OdbZC4
1KylK+Gr7uk5de2Ebu0Yc45YGH1Sibujuw/ic4xD1g7h/9HF2OMRxe7r1/TL
ax99m45fvLVTa3b2cq2adj3Tb9bcJm506X7mAhiv1I1hbGXvvdj67aqEg8G+
cW3t/EU3p32yn+uTWPdPKeeBzpe+rO7J6p1cA0nd2ldbD5LDpSv5nGza26J+
RS/FehjWcIXd4Otb+5duW6VYe7oYN7FuYmThtXhMfKbcFes90tmouCqxHcpn
qg/R2a3qclPYteYXOSFyQ2C5hG5MFZ8sPkE88BKleydw5eKh5+lkv9F/1OlK
cwQ/j7/Xrifxm0HGHPH76NrZN/AT8RGEzlaC4YqxMXfME9v+LNp/XkK3/vEZ
VReP/cQg318cF1+DbXWLdzP6+0xxn14aZTsMhk9yKuy5n34c/bZ6h0/HyRXv
cns9X23mSNwiHESO1jfHmSd2Ry/Xv2ETaPObvCm5Xt4H78pv47wOiN9+N8r+
cXe9QwsXNw3jfafJbWyr39xdfenz8ftvYr9TYttf9nLu+LU4i2i/J8qTov2e
XmKaL40TO2Szsd3o1i7ebjiVV4BNEfpvSui4hpazweHg1++t9+ibZV94t5T7
1numvLDa9Uv9+Lcl91cb/+3+alu52rWxmcX2tDwO/cESutgf9os6G0Y+7zmd
8oN6yfepyyH4fS/zCH5f/W7JuJeLF4f5h15y97sOU/9jL3Mz5Wh6dvvFPVtx
mNjqQ72Mo3479j9YrM8ox82H9YM43teHqT9nLuplXJb4LHbrkWLooz6MfWaI
539ck/tas9cYLA4T/8kulVe8ea39CUMQC2idUTzIY/Hb473kRnAkj1ddbLM2
a2aIxX2il/JkL9twEAcOsw2urV0dXv9UL7kCvtIBw6x/e5jzt7jb56rki5vP
xP+IA1o2rmGfuK7ThrmehXn82V5iBfd0cv2ldv81B1nKz7t9kPcHZ7TfKH1r
fBGfWymn4vkqV612PiQc64XSleJ3YFx/qXaxPPL0xPOYp9o5ivBjtb1UdXPW
OtWOyzJOGheNj+vWOIn7Yt/+rdrZuG2b5yF+0/PZr3Rt8B+Y0CcHqSvxjWLm
Ya3w1zaGni5W4LVexg4oxVJab3XdQdrSf+/lPK9Ox0X9o5exk0cMU5cXsF7U
/9nLWE34I3294rHES+Oy2BNyomBL4lRgy/DmNpadDkN7M2TFJmN68DNiT/rD
tDPFMeGtYKVioNbX78UfNNm+d/kfD5Wfx/8Ts/5Q+YKwaXERsOp74jl9Mfad
JY77f73E9mH620d9J3l2o8RH/xOy6SCF/t8SuvVKT6i6Nb4Gw+RprFGzU2y/
7zht3W3Lt9KOH3hf8QreadvYlt9lG9vCG2GMMEelOBK6fB74qj7IRxArPqX6
u9x8a54r+TNXlB9Dl/Ol9Bv8bBDlCbCnuG+7hcwT53BqtJ0Y2w+jPHmUJRtn
+SbX8IFjydn/d5XWRZR3v/Yo82Pp46pPrlHaz7avjnLM2mGY9qm1Uq2xJ8fy
4+Ncf7pdt3SafspNg2yzdgC83ZoE3VH+Npl7H+Udw8yp/+Io69OV0H85zPy1
3Uufvp9+WhtHos5vur1sHjYQYQOx9WAdcA/4hzWs7De5rrp5cpz56bAQ281U
dpL8KHbStoPUzVc/j3O7KWSWfsY2KdVn7aff1cYzqbPr5IXBcOA5LaaDI9Jf
+OdiVcUu481xUrBVGGsbR+t44qQm+3LoOwwyLwFnpd/jqsTw4KuUYnq8y/L0
3zvONUjlpYmvdx4wUBiGfHH5te+Uri/qk3OWPmf1h4eq35un5P7w8cTAmfPN
94sMErtR33aY2Io1JuVt05VwFzdXXrn8abqSf4nfx/vj+Jeu8da4az3J60NW
DplmmPjf/P30ueTfLlC68qxh4ozwxgX72XZmtfEB5O/jCqwjqS53Wl25UOk3
Vl0Mi9gVvjAsUo4ZHZeMU359kPlL8pjYx7A379p/m8zLg2UuVn4n/5Pv+t/Y
ds54qRcYZc6leJVTqj/Rty27jB0vblAMobgLsRjil/c15vczbkOpvmQ/YwTk
Hp0/zO9P7BftFwwTZxK3LQ9SbqX60uWTtPjJoZ1sW6afttHLo5RXQn45SA5Z
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
OFPf92q/ZaIUT/L7fo5zC8f9+cI4x0a20vKjXHdSXgih42fhfuIKYX7yn+na
YIp/rLaHqnyncNCH+4mF4tvp2nDQvpeJk+5VKY7xx2WL4XDYYnRtcPN3B4mj
+66KGBc55w+Nc/3GvzUZI2WsFiMlBkOuuN/YYmwzPut3o77KKONdfMvuiX7m
cLKV5G/KW/xva6v1M1/zX4PM2fxFJ7Fe+VVvRdvTxql+6uw3dfEDOFZc657D
LPGsYv7F/4v7FwMg74CtR+j4hefqN9co/v3ysvcInc1nHckVQ1YfpbD7tInD
2neYsVlitOQX0dcd5hqOm1XOJExJDqV8lwvL3iN0Nt+RcX8+OUo+2PfTXupn
7uXiw8y7tO+bg7QB2YLwI3mW8i3h4r7/+KWQpW3fzzwGtiFdmzXOFh9njIcY
FLEoYlDYjPBYa0GwGV8t3fW5TnYu21b54WHGusMGJ+Pd+4nhq8PmrJUrv5Iu
3xKfj6PCM+KsfCtrzU7y9+xOuLY4o8XL/tR2Cn9+lHGxvsEl71IepvK1QeZf
Ktmm7NKTY/sNRxkf5vuocjDlZCpfGWQe5itls7JX5Vtae1guJpxSPqZ1KbXT
X6x2ed5s+HnimP9nnOtlXDldm2vyDTA2r/WsxSfcHucwJ5ymn++yGHi6toXL
rvGdp3f6mXstLvfdfvr01jjdbJTffF0ztpltlJgKbOXZkGsGaTNb806sf7sO
tLqAn7VqfDQ2evcerrw2+LO1ueDOcrHggfKx4Mlw5LWHiev2S5d/+dQgczC9
f/qUd22dqA+jPhikDU7Xhq8eDZKzFm9C19bmT7LBV+BLhd4MUjYIfTxIG3xc
9X9M5D20RjicgD/Bl5BPeXcncyyNA/Is4Wba6dp+XeMDXbyod8X7hpd/zyDX
V5Rvae3kT3QS35GPuUa102cpXSlH89Q4zqpxH08c5TwyA59rNDVXk4/ywdB3
C33GQcojITMN0oeYqepi2OSlimOzpoO1HS4Z5jfSxM2wza2DxceAjcvVtG63
PM6PdzKX0xqr2una5MoaV+jiW8StiHsldPGvOHy63++sOr03Sv+DH/JAyM+M
f6NcPx5HJ/ZhjtJxdWIdNtNHBlni8Oi+USTPWL4xO5Nu7S/xEnPWMZTqYifm
qm3ZovxSujbxEHMPMh6CvUZ/a5j2F1uMDUYm9ZJ5BlNjKsRSaPtbvd/zDTJm
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
xGzPGcv+JK1Nyo/h01iHWImboi8xTk7c+IsH19fw4qfVeTpfXDaMCo7KrmBP
sCXoJ5V9wc7AX+OsiVgibe61e95y2mKL/K6TmUvNoWJ68NfTNmnn4rBnb/J9
f6Pmq7mqn+ljBCetbaKT+RLvjnOdDT4VHtl6QmeWLyj+h66Nje29cq3zFZc8
b73T4v3YyUoYL719/40HSnPGSqO0nY0XT9d4wWZnU4tDxxvjj+UowGDUNzf/
jxPnOm+cseT8Ye+td9a7q5/ATfHjOGW/tbqSbbYamzf0fw6ST8Wrqp87zuM6
pnxK9hi7zBgHc2nzTI192l7o1NqM/RzDzEPq8Bo4zdnVF4w/+gs++UPGilGW
YpFmaDLPxljquOJMcc+4COOv+EP+ghI3QV8xfv/+MDnlZao0dtOtAex346yx
3f3mWxjfX67xHbbK52C7/KP6Bh0XbV0E673JE8JJ05U4affN/XKvlNt3kpee
zGHp57y07ih1bbhmHC3ugphXN645aKlxzkM4atwBDuEjw5zjzHV0cTyA45Z7
hvmeU5y0Nv6PeXOV0pW2+egw51ZzLF181bCZyknjoqwbjKvW1q4XvGrpyvnL
xvFeWysWNy0+QrxMy8FsUsI2WL2u13VuNEqOXX78x6tdiatWfnaUOjvl/aO0
VQhbhf0ypXhoaw4qcdEwhC+M0r5iZ9H5bzATPrZ8Kz63sZjfTf/yKNca8B7i
nXHT/DZcMwx1y04KHZb6pdj+sWFyymy9dUtXWiPY70p1Pjef76myCQmfki8o
l5p9OSrBSWvDDfEF8dIEJ61tcXbzMDnoDavUTl90NLX9G6Osb1T7jwdTOWy+
Jmx9Y30z7t9JoyxXaKba2exu5dej3HKUvia7fKbBVM6YDwr/hf3CgI0/O3Yy
TwpH7Df6dlWnn92kLe77wDhiOMR6oW87Sp+UH0Pnq/I/+UR4XPntC5TOn8Ln
8mlbHlcdTysmjr/H96PjZSf9v0Hmr7d57OpsE74/mxQWANuha8Np+Q4PPutL
w6l5SDgwa6m2a6pO5uX00vcxDvJ/cK04V9+zFRMpnxWnZu0RurZt6rc2DxkX
p839aznYbasuz0wdTuJe4uNxvvBOfB9+r81LxrtNto1yjmE/mkdxkX8aJReJ
h2T/K/GSuEycrrxGHK8YFd9Xma7JPG7cb/udXaVt8a24VjmhStyr37XbR11e
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
L7/rA01uZz924gdKh7XyI1csnW+pPh6n7QZbpSt9wxCe2OKIdL6gOtt9niZx
yo+VflaTawFYE+CtwjDhqex9a/jDVWGq89d+3yldvFC7noG6eCHHX6DJ475V
x5wYJ24IL2zzoNTxOzArcyXcim7OVIepiaWAi8HY6Nr4bHAp39resHTfM4Uz
tbGEdKW18WA+sB+4D6FbEw52AjOBnUyuld0kpqIuhrON61SHfyzRJO4Cfzmn
yfok/lTbw2g+1EzFaRwbvgJ3WbK21QYXgZXARgjdt9fgGUs3iWl4X65ssi7u
D/YB95D75zkd0kkcAh4Bl7A2iTVDrE+4XO0Ds1Au10z9poh9xJOp07XB+drY
avf2w9XG76Xzg+Vl8X35wIdF2xlN5hGuWLpvyMAoYBVwCrgEXQ4bbOIj1Q7f
2K+b324zF/+wyVzGL5euTcwcLOC4Op9Vqk2cHQzBmpPWtFCni7Pj+9sGNt7i
4vZdtc6f0PnzMM5F6hpXq+s2f14Y+tVNfqdJuXqT8wWfnY3xu3pH3X/PAZ9t
vm7nbXVzM7+ZncIWUqqzZcTT8Xdb/5eujR3MBhb/w969sHQ+qtg5cXSEra2N
Xyf+TKwZP4iurfXr1m6vv0n/j+6eqPMTrTXDbxSLJr5NbJpcZ+tTWHOeT8cH
5fvRlfw24+UW5eOKcRXfKi5ebPcPmqm+LN32G1SbMUzb+lXnL/rvdWs7ujb+
nnVibq7rorc+4J7/g1+oH1U+IL9PnBuhX13H2LSO83LxNTga/hDfiA9G6K0f
xNdp12tQqpt/th2nTyM/xFqqYjL5KhtN5Jij5M8sMCXbP1+/6U+b1bgk9kEM
hNhD+heaqbGIX6g2dhv7DRbFLmxjLpSb1/a/K9+FD8N/oWvj58BZfOfhoqrT
W/+H70P4O/Zjv/BjW7+GT0Nn37PzW5t/MqZomLnHciHgXcbmHcq/OVj/bzJm
f9vS5cM9U//huK3NpI3N/eV6x48sXRv/Bt66Q5Xq/Bc2v+9OsPvPLN07pd22
6rala7tUvw05sUl7nb5jUzGdZUvzHfgN7Hu2OZucbc52Uaez99n+cunhuOxn
cTd8AfvbV7lr/Y+YFfvYXp2urbXX2eriLdgEbAQYEFyI/U5nv3tu4jXkq4vZ
UKqzdcVKsrn3+p+6+JLWXpfbRejsdjY92/zrtf0bpdvHMdj3YlLEOciFYo+z
0f2vebprDB1nrAzbnw9g3NQ/zQnsera+vHv2tji6b5XNb6w0Tir3rfHTdvs1
U9cJ10Zny7Pj4cnGc3b+R6u/6J9tP1VnK0/GNzRplxM6Lobt3eaae5/V6W38
BLuW0K2BKrbae+2dZmceVO86O/Hg6svsRro2eT/GPWMeu1Hep7GQ7cZeZA8q
2ZBsUPbdoVWfo/TJtlHOneZM9tth1dby1mwntpZSfVKP8vAmbSmlOuzZO+i9
ZC/JT/Je4tTYO+yeVUrXxg7HSbHF8chsn13LhpnkkZq0V+g/7aQdo40do1Rn
u+Bs5ijcT74bmwVfyl5hqxzTJF+i/GmTNgv7pbVr1NkdLZ/BNiD085ucf825
5l5YojhYaxwdX+1ipZTHVx86IcqLQq6pd/yE0s015p5La95Rmmfu7qSNYdxh
c9C1GSOMFcYPsaK+oerbyGLm4Aw7ltC933wYvszs3eSv9UF+z7TVv/QzPPgp
1WbeEA/Rro/7o+pzxkpjppgTcmr1OfOq+JJ2vdLTqs+dXv3pA6Uf2kz1J/gw
fIqZS9fGJmObic0gZ1SfO7P60wKlt/2Lfc+2P6v63nzV33DJZ1c/O7vq5oJz
qr8cVf2Dfk71g3OrD9xQuue+dPWT86qfnFfbnl/9Abd1fpXyTC+o53xjkzFx
6nSx8PrGDWWztf0Chn5tM7Vf0D33a6t+QvWTi0u/Wb2e6XWla3u0+sBz1Qd2
rL5xet37y0o+UMfzHC5v8t6fXvqhdQ/d2ytKDq/7fWbd+5+U0OGZP617dUPd
H/X1yg8493/u65V1P4+re3JV7X9c6a39ekHJ1XUfnav3Q67DTVWqr1/3qr1/
69d9O7HuiXsD7z6x9Ourvf39+rqHN9T5tud9Q52nZyaesY1rvLHOxzNxHtdU
eVH9r2cwaZ9UeXMdf+Pozz9rMudLqe57Pj+v//GtaO+kOv2TIbc0maOnVPc9
oltDPzjKs3upK9mSvjngWwO+OUD3HQK4xMsT2eY4dO3q08JXmpxjl+qmrs33
q3zzwjcw5GXRJ9sm8rtWcp3PKR3udAHMv45Pv7Dqdzd5vu15q/vOkm9f+OaF
b1/QfQ/D/7w0kW3OWRtdm29f2d62fqP7RpZ238lqv5f16zqOb1P4JoVvU9B9
r+K5+N/NJ7IN9qKNrs03K3yrwjcr6JPfsYjtZ53ItudK167um1WO79iORb+/
2p/tTP3O1QO1r+9aOb5jq9O1PdPJ713J+d6idP/rGxS+PeEbFPTf1zn/fCLb
Zitde7uN70vZ54/1O90aCOp+oz9Ux9E3fC9KX3m4nhtdjr+63+iP1LPQD/QB
30KhP1rP/WsT2XZp6drVrav/WJ0H/fKqP95kf2/7vbrvXLnmB6J/PNFk6Ttj
T4a+bifbWl25XifXwnqqye/ee6/o2p6u81qyl+KbWs9E2xIT+VurK333XH6v
tZfbNZjV5U1bi8E6t+16t+rWaLAGw2/Gub7DTOP8rufM48zVmmGc+Vp3jjNn
6/nY79PF55xQIp8FToxPFy/f5rGIobcOJp9Q3Ie1DMVN4QHxgdbj8r/W5MIL
ahdnROhirfCj/GNrP8GHfDuVnSSuh65NTiKMBdZi/JJDtXFUdw95JfQjulla
w5IOM3m1SdyE0M/HP49zHXnf/3S+r9U5E7pYBTELb5Vu/Q7fCAWe+16ob0DQ
/WYb/jwcfNnCznGWztP5XlTcE56Mbc3GhqnjJ+iL1X/JSXSsmeqZvDPO763+
0XhWz8aaAlt1cu1Ga4+IFZUHuTxfopM+hNhRfsRbdUwYxULj/A7PRcVF/7vu
M6GL6Tiy7jm7VM6VnGLxYfKMfV9EjKi8UDna4q3EXtGtkw3vh0Hz4cRvfmCc
8Zww6lXHycnAiOhiRWasfjZDPQfPw7c22LX4bfH0OEd5RuISFqjjOIZvnlo3
p1vb9eoeTsaqdKZe60JVd2/EsohjwfPMP05fUC6NmFTPG25Dv6Xulftk+5VC
7uE/jVNWrLb5+HtRLoC6GKd+q3iuTuK/sF8xtzBh9YNrzpsyTqEfVtv4/eIS
MbrazGXmsRU7KXRz3KnjXB9P/o9cwfeMM4dlr2o/tera5biIn9cuHubA2mav
+s028mFere3lxfAh8Uuep7WtPEfPU66ImHY2EaFPxrk3OYbop765NHONKS/W
/XVvxQld674Vn3b4OHEA1+qa3TN5vAvWcxJn4luxYk0eDHl0nP3DtwReH+e6
R77P4ntfvgPh21/Wn6WLcbO+LzxXzNvs1aZO5y8dXTq/Sb65fi5v9ZnKo9f3
YQ/y2awvyzcWm2pNFee5XL1r/HQ+Onx9uTp3fQ1G7P7Afr0D7qF433XqvRD3
CyNYbJzrtfBXrZvHhxX/rX/iJF+vvipeXH3+6r/uDa7H+4aTpMM5lPOUPle9
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
       "]]}]}, 
   {EdgeForm[GrayLevel[0]], FaceForm[None, None], 
    GraphicsComplex3DBox[CompressedData["
1:eJyMfQV0G8nSbpiZNhtmxg1jBR3YMG2YYcO4YdgwMzMzMznpsMOO7ZhJJsls
yXaYnjQzX2tV+ufcl3PP1brUXV1dXVw9o9LDJ/cYlS5NmjTV86VJk9762ae3
7d8H8WXH5C873A2i1LGWRY61vCMMydVDkwd9EJsyjbX+zw7HeMAzp7H9E2Kz
7e/VJlG4yeX8TS57iTrKvwixa7INs1Fksg37940TnI/neA75rd7vtzqBML6I
jY7FIU5wjG9jG/AkgQJtX/+IF56lclr/lyzyqN+TNk8csH36W5zgGL/C+tf+
XR5O47EOx8/olfANKh653/NnrP86Jsr9mgbcjxpQIlrO4/zh8HO2+XvMkm6+
7o35r27Ozx7oBMf4bvFPusQvCxWcn3r0aOOI08/hGN9had32S7eZJN+AD+MB
x+dUG/hjuNN40KMzXuL7+Mv6b9EbzCdNfoidK+iUcMgJ4BofdPGwc5Hrcjgf
D3z7VPkhJj/0TpUTfl4SzuSHNP4TOy9JN6eHw8HHRKt6Vz/oSZoe0xXr6vn/
tIg0qp5LOMYDXtT2GRZFfF2+Hr7ncHyyc5fjOd/YeCd7wsZJ+cc5cH3h+o6/
u6h6Qcus4lu3kknqL/iAdZXvCzvDMd623Jk1BspjA6Sx44e9xPifNvkRoU5w
Lj8NrMu1Lxsv+c/tQ7SV7Ce5PJzgfDz2myHUZthPOsH5+PE2wk7Eyn1CPoF/
RMWZwysWinSCYzy3M2y/evwhzgfrKjOHZ7bbDSa3ku8LlQPcJPEAjn0tsZ1b
liDifIB8iiirAGY3Sz/H7RXgz2zr5Ihxshuc/+AP9sH5CTjnG+RQR96EjnwK
HTkUOnrtJFfYT2vbhpZJeqR+4W98z+H49LKtXz3JaTz4w/EDzvHoyTn3O6D/
my1+yR0r10X8gnNDfIP4BXCMBxzxDB/P+Qf8HI7xJpu8/7pP3M5zvwS/wOEY
jzjkknqOxOnG+I+qXjjBMZ7b1VuqnZR6dka1k1KfOT2AQz5B309V7+S6gGPd
FareiSWqHMvzg7xjvCbXTnCMh13VGa+HX+jgkXDFz3dIkvR2sm3nWjJx/mE8
4PDLfDzkgePncIzH+cKvg05+XhzeS5UzamNbv42bxB9p86MbPkh5AhzjAU+0
yXfScwnX5F3uN0SVb3kegGM84NAXvi4fDzo5HON/qvQIHbnSk3/i8gY7Dzj0
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
9Ng9OXcI3T3fN7Zfr0ianmbOztO/xVKWXu0Sxr8Np0o7YybMuh9JQ05vvLep
Y5BYMrVCn2GlQ6jy1M0xz1sF0aNXF+vOE5FizKmnLqWrhFD/4qXipy00im7l
ai94v98ifq7bUODl4BARVbXy2snpwmlVmgqzdzcKEpe6jpkam99bvBlUokJ2
oxulW3/DtWumeDG2YP5uEc39xYGfg751LhAlZqefF1M0OYje/hv79OTdADH/
0bOmi1bG0sqTOe+k5nIXNxZEh4dafMWgxPDZfTpF0cGdLpacl31F17Q5DsxJ
8RFXdw3NlqtDhDCXe/38REIgfUm3dcG5kUGUJ0vc2Z5u3pRzVtbwTjFRVPNT
9/qvtsRSC8/eWwZ3tQj3TeN9utwxCktD9xOeWYNFu2rFrj8xRNE+716fm+yx
0O3QCkGv84SI1rVpYvY90SLC5+v37C5vqUTgl0I1RRC1igvoX2aphWr3nfHk
6wQj/dVpt+H8vlBae2R38Y3dEkQOt2pv5wyz5tEDV7kP+TdUzL26pG/nJRbR
ZEjLnU2HG8WzwZmnvd5pze9Klth0tIs7PbpqbjS6b6yoN3DZ1BzXfcWdDP3q
1PcxUu3jG8etcbVQ/9TFnotKh4rP/75Lvb3LTBN+9At7vi6ajHc6h1Xr9JBW
1ft978AWRnL5t1rBvEEeIiR5dlTisrM0+nxXl25tU8ThKrM3BBX0EfWC/Dr6
Prwn8o3p8XXlJw8aXvv2mxxdjOLz3dkVEiqco9kVmwzJdjlabKEZhXc396Yr
P5Yl/TPurYg/+nGy59U4sbDd0qKjn7pTdPbtxd3vBYqTzx7u2RGXIPp0a7gv
g+UVBdQ49FfSe28xvdL26UFtQ8X5rnm/Fo68QoO7nc5bJG0UPay3MXrl2Ofi
H7owK/8Razwd5JNx2gRrfj1+2JcKGcJpydysrjMrR1Lr6sb5Aa2CRJ5jS8cN
9w4QnTcZlwbVM4rdN84PWNY/lhY2n9+6V10/8aprrb/j/o0VVc/77amQwUSV
ax6pt97PILLNJ5fJVj+ePdBr/KxMsZQxc5PvVYdbRGhCjxe/FhvFm+zHvk+u
4k3Gk89qX+iXJAIzDKjet06MGH7ItUZPkz8dPBv2/WmS1R72v1JqSJ4I0W7t
i687tkZT1ve165b8FExjqlDF+n9a/WCb+xnHTvMX816mbdo8yot+5no4aFrZ
CDHh0PZybpMChOuAzpHGPLEiV0CzoY0WJ4qD/yxaXvbyCxH6InLy6LMm+tFv
UNzLrT5iwh91t2yI9aKajRssKlr1CW19knb5ocmPRI3dO2Jy7gmj1j8fl1o2
J1Y06PDjr2K5/UTLt2fbP28RIvqYJm3f9tMori76MfrwgHAxc1zeUTHrQ0SN
4eM7jdkZKe4N3TPpREaDWHiqnn+tYQbxLCypwopjJtr/ffLhdoss9KVV4Ae/
PCFU9MWPqBtzjVQn1i1qdaSZlgyIGDfsq4GOJPRcGFktiWpFZU29nNZIbw+u
cTtyLozypKVbQ1ck0da/0i536RpDVKXLmoDcVr9c9EHG4UOtfiejeXuOXEYq
2yPfk7/9venwkwehKQ8DqF/jJ79mXY2iJX/PHJ3xZhwdcL+dOd32MHIt2jDT
g/vhdOlhJnOpxbFUcMu7hsVbG2j+Wq/KlepH0byZmZourRFHXernqu32KUhk
DtnaO/yvMLr4t8uFKy9DqcjFYg9m57bajys3/hoz1UidP/d1/5QxlNp/WNf+
584o8WNkidx+v2LElk7xt3/c9RfVym7wa7rVamdem00Nc1hoTLbt4bNqvKfY
W25124yLpd69xpizPksg17JPr47dEkCbd3c697hUIpUqlDDPpWYSubyc3XZN
5cd0fVil2EnDEqjTl1fXi19PoiGG13Wi13tS0sZLy3eviiffDGN/H1LPRItN
n7wjt0dS78xxebwST4vekX1jWtwNpoQ3hsvLn5pob813X2Pdgql201vVql0/
Jw4U/bTyndW+Tzq9f4hnqQd08OaCaSvmJIm0ZSe2rtvvPb3ySp818awPvXTf
Vz7q91Qa1d5/ycZed8nteo6opnOjRbUhxyu2emUW5xKGNap9y48WB2W7s+5g
jPDZXKPg0dEJom2VUyeuDQqlihu2vj8Tn0xdPx35kDDNhwb0n2wotu2S6N1q
hXnIb2aqUrGF6VoGL1rxx+ejPQ69obw9c/d9OSSZyru92nKpYyilNiBK28mV
TvrsyZazVCxFTExbZfkSE42etHpp7wX+wu3MrEJXNlrt1+K8GbJnMlHSpHWF
htfyFCXejfr4R4NEcb7d6prJj2LF0q4Ruz+c8hFfZ3R4v/ejWZQYf+vk6jbR
ItfDhnnnDvAVb2rUr/DwRIJYllDiZ8WsscLYJu+YUZnuUJWqmav1zRsuohdU
HWgKCRd5Yn0zvLLmdVUG/548OCmKqt46cufHLQsdWvzKo8a32+LKkAoN0z5N
IJG+bP2kbYn0Kt+3hhnLPhDpXcsUXRwcTdsy5rkqvM1kPlZuQ5mXXqLPZNoe
9TmYzvXt2DumqpHKxS2+Lqx6NPvspD6pLSOp0O2nv6qeeCii8mz6O00uP1Eq
opPl7JhEYV5Sw3PHtys0ctHHUp8fB9DIHM0alnKNFStrpN4MHX+CfH7sLrN7
/XlKuf+5nadnnLAkZvxRd/YjKtn46eBM5Qx0OvavJ+O+eIjH0+bsztvVSD1u
pTSvPuUcVZgyIr7DuCjKv2n5kkKLQmju47f7140wyPq9cg9q0Af5O51KWdDd
IH/XA/BWC6YNOuUdKPLcONy3UJpUERjYRHRb8Ji8xx76GnnSh2pbqp8qVTaV
JvXYdXnC7Ouybh2i4ieGX74PBnBDpWPbui10pwE+AVV7zHUXJa72eP6kfaD4
Kh7kMFzcZ7UPn176ZQgS54f+yHD8h79I6z731taUeBGVrsL2c1uTROKdzHdC
l7rREc9308oNjBOvu0zpnaWQRRiWDf7QepknvfDf3KnegFAK3dX5XrsSAaLQ
vtrPeviEiHclVpyr0tlCabckzJvaI4buZKuy9f12P9F8X+7XmXYl0aQ5Xumr
XY6jYUOjpnje9hdZvuVqNG6HhXacfFK1wrYY2p5ux8Zay0JE82yF4w7MMdOq
/AX88xSPoR5b6+fPPjNcjFoyIvvXSRYaWfnKjuN9o2lB36F70w4NFJ+L7J76
0NNCLqePzS9fJIpGPW+/wdA4VKzaubD35YMWOv38UanXm40UU67SPtdfIaL+
wLbj6n9OEtVHfzgRac2bArp8rBL63UBFb8RdDgyOItfZw3pmLZtIrhPWnH7k
bxBNF069dysiih4VG7rHUMlMk7adq9K8b6hYO/Bz4st6d8jrTN6/StSNFufO
r3vzXYSIoqeHzjn/1ksMvPiiwsC3XnS61/GajU8aKe/1q+VWlfQX35feOPPp
QCiVu0/Lg1pE0q7cWVf2tebhPcr5vDs5OY6apPw23aWRhzC1+GfyE6t8PHBr
UcrNJ1DkrTBi3PKBeL/yBwH5kueuyR/kEfCLt29/9FljFI1KpF5YtNMiSvwY
/33721A6t31Aq4eDo0X5ipYP6yabRcC+Q0VXFDPQu9BhrV7FmITxVseuPYZZ
rPa6U0X/sBDqfD1oeN+3T0S6HV0H3egbT0OLvfr4YHaQmNt1xsKkFp7iep+9
J/ta6c8SOOvJuZ/e4nue19d2p/UQycemp/e8GE1Nnoz/3MQ9QFw6ua3+3u0m
cbjSieDAtj40ZunZH9d/D6He61Lfd0lrFLm8SszttCyAfn+a9VmaogbyGljv
T/cCPmLy4VwPM7ukiLrFis/ZffyecI98/HvDyRaRMrvRnDQ348SzrYNXdMvl
KYzn03fLMNAiOldy2dSwRYzwvTAjzdzdd0VJ8c246IxZVPPYQbtmJoj59Wq+
jMnsKXLvrzutVNck8XVqdKHE1omi8PWa3/3+uS/qxc/N49IjURxaf/vpmoxG
8YfXUu9fkZE0w9KwsLlKnKh6+1zPkN9M4o9CK3pcnRtFnSre2p1npY84GzNj
5bzcu0ThhuuzD9nrKV48v9s5tymGlrac33XnzsNiW11zjTRTw6jZt3OFjlWK
o3R5J7cK934m3k1+MXn32VCqU8ctnblZHB1a0b9ljTgPcfJ5moZ9uvtTjftf
Q6ode0+v70z5mOdpjPiW/mf5KbmCxJwvAzqWGv2e+oWPSFuuXbRYeOJW8Rp7
vGj5H72/FUsfRtWz197SLiRM3Fyc9luJVC8aurl85rRpwsWlc2867ioRRmWP
F/ULuvlGVO7cPTTucoh4dm/M99unoihD5xKew6z5xQjXd6d7t/egveZKOX1b
x4mxq982fzDeQC/Grf37cMIrWuP7sOHnK/FiTeL8+vU6GahhieJ/PHn8kupW
Lvbr1dkE8TFdRbeIVX50YrlHYEANaz77s3vHX3cT6PrEc497pY+gL1matB/a
IIrG1pt6vdXjEHH6Z/XkG99CafQ/6cJbeAXTmsExrqF3okSp6/Env6Q3UMqe
c6NPPTWKCruyJVXytIhV4QnZTcHy9+rV5zKnpMjfPTnRZ9G9/R1NYuL3Tn77
3Cxi5fd01V2vBYtcOad8z/zGKBaIGrl2xprFz9YeYY33hYoWAXPuly1jzaem
vw3e3iVMTG2/Yef+PwPEBM9dMd+ORtKi0647roYFiy4bEx8XCw0QN/r/s7H6
sDuUo0vtRVGrk0SxUd4n52f3EykBnfcN/uhOwz8/3FVwbLx43OJsX/cMwcJc
v96Ct5FR4lZo3GnvGiE0bet0j1kDQsSBzHna1bgfTSNzZTvVY6K3uBif0q1i
mwCxr1hc2qEPY2lY+gqZJzX3FCM+BBs+dQwWoWsDj/gWN9LDsWHV4/sGidd9
f1WIrxIoWu/++0vLB5Hiy0iPSl1jQsgl9+lOJ7uH0PlkvwPuLtZ8eXpKq52N
31PngmUPL54RTlXrrH/ROatFHKubftu440bxpPHjwn3MoaL8pdaVSmy3iK1L
Gxf0uWsS+cueyrDvV5CoubuoaVRPI6U8XPHnzywWKlgpV1CXoFBxpnH+vj8K
x4mK5VdGdWvuQUHPfvZ6kBys9iEnp8jfScXv2pwuXa944BELtd3a5/Cjnib6
0v/P13n2BdP6dwXTZL5noZuHF62qVchE51Ln9ip1PJQio/rc6XbOQo3mD/+4
+4CRDq3pmafIZAPNLby/ZLrbZkrKeyTdcGs+2PiCy9l6iQZ63m/V3hslk8Tw
XHdL5MhkFJ/ubc91Pn+YoMPZEy6PTxAjDjbwdplnFO5fGpYW1nM+nLnLinou
FuH/x57Ks7aaBF2bmc0wPYjWfkmqPf2oRdwf3fFUtl4mUb3Lkk0xm0PIGvhX
KBtuFiMmTxoZNt0o+mf3aT7MYqAFI270f3nMKmeLtrXtF2UUUV0K3JnbzkB3
Kx98O2eeiR5l2dx74WMLrTsbNuFysRCxxi9LBUMLE6W/vi7b9SAL/dGpdrcl
C0PFtQxNF+yPNVKBvoO/tX1pocwjDlUY0tAgCr1Lt6jM9xSx4Vrww5V9A8Uh
37OTp6x+IPJsLPTxvZW+Gve7/euRJpBWbf4y85rbe3HhzNvW65bEiQ4Tzo6Z
E+RBM8pO/BzdL1Qs7n46ek6aBHGt9bxmT0u8oVz1/921xi1EfHs5Y3y2+WaR
5mLVl/VzP6UfeXN+rfvFS1xOl3NS5qyh4rVLpSEvp12hztVMxfOniaGdpf/J
lO+JUdTMH5NjbeIt8XNtxzd+k8PpSs5Zw26+fiWytc5hCvk9mq757+7kUSGC
zu7IPz+8hoe4037TwdNVYmlW3met9lv94bCNrqm9a/qInJ9jus5qaxRtTMXP
HRsfR6Piw5dVaR8hMs9tt3qCT5jY/Xb6pDoBsfRhQMnsP2oG08zh/frVT2cU
Z0fX2vegcLD4vPxscGE/Tzrm13CD96cI0fLarnku0aGirs/pNd1LxojPN7bV
DW5oEZF/j5yasOeOKFYqLN+2VjEiw4pjOa56m8XXn5Fbw1Z4iq91z+T/53A0
nW3UvMS3ARbqsPj4ttPrAqls+f5bE79GUX2PRdXX1jDT1LOVX+cdEk63jodP
r1bKTD/LHKrQ7rqRVvgPLT1yczg92OM7r/YIM9HA5EZpGsRSxdvNBzwq7EH5
B9z/GW7Vn/DKrR7cHRVNRbq0P7NynD8175e1cK2S4fShV/PW7hER5Bbscy3M
J456HL6/YOmOCOq15E64+UIY1ejcNmbFsjgqsqRC7RojDXTb+3mumIFRlKlB
qk+exfE0vPfAqhsvhYgTc9pELn4SQXtGVPr6OZOBvk6/YHZ/Gybe9+kU0KFd
GP2yvGxUb0gwHX/a+urNzCbxLtD79d2O8eLKy077ruwJFWGx80sFBsfSlXt/
Bp8caKGqqbndur/xofq3eodO2BFPrm02njj1y0zvCiROqrDIk1p2T/O0wcc4
CnzT03d4VBIZmh4qf+62L60Zlljv5JhE+qfC0efp3htpw7/7ykSkj6Rbhtbd
izyLEQe6j5w9wBpvXNh27NX7977kcXLr7bKbrHnIir1/z+pgERsul9j6ZVog
bWjTY96wBXEix4cxt561TBLjR9RJeZ0vkLZ+mFXbo08qTb3cYWvjpz50Ma33
+Yy9bohDh5qnGVsnhdx8ey08HRFKz31feMQevCLci8S9GxaSQj0f16ieXDaI
Rhi+j5hU9S4Vy1N52+I5FnGvyoXG/yyKEb+Klg8K2+0rGnY+VL5CV7N4n7i5
/uWgeNFhmrHc/kn3qVjqgHF/vUuiM8aoZqXTm8nj14s2iy49EJXLtf99/4Jo
8h7lO+jgCAvd3dk/8UAjP/X+6MwIwif6iTMKtTXsbGKkKb6164958kK07G7u
fD45RBwr9Pav3Nb9erqOiRt65j6d3Luj34uEcAraeys2aWO8aJFzYopX+1eU
vU1M9oFlDZS4vNihwBIGEfHGLbGiZ4ook7wyerZhFW253rftzq7WPO9mxyJt
hqeKo68+bmiw5TG97eLn9aaEgaYdvTri3usUmlVzm3+tTGvoSL516fp19qa2
wTOmd+/kLSLv9ndpNTNUiG132k9uf416FL/8uU+jUEGBs+ZO+hwq2n86drDA
XzHibtjgSosWWITJ50qejb89otkXIkJauiaJztWv952yJknUGP7X302vPKLJ
75/fq5U3Tiz985y/12aL+NXJ71Mx//dUufCh04tPWePQbt879ysSJBZnulT1
7pgw0eTb66oe6yz0IKn9b5X+jKXfJ9d9XOqJr9jRpvWyA4uteUTY7XPV3GOp
4/Werh06Wf1UsUbvWj+0UF2vv97mHRpDbeY2zZplsL/IW39Th0H7zdSh07wS
FfdHk0/d4b/ulg0Vcxp86H92soVi87f/vO+LiUaIr7nLNwoRz2skzGvTyizG
ZS9ZJnW2Ubh4jv04tkE4fX039J/yZ43UcvNfJR8+SCDLwYFvFrqHifmJkS2T
rf6xw9BlZTf5J1Lc4yb5uucMFzPavqj8xxgjJY/cH+Gy0uqvajbc3XdUmGj2
PqHL4bW3qahnai6vp7Hiz5MeSy4+MoicPcv7+r4KFJcbuk38a7WB9k3pPOXj
1CjyvHXVa+A1C+0645qQPj6OZg3dWOLOfU/R4q93f79pY6GPS5qOKVsphu53
6ZbQuMod8bzAlBp9h6WKRqunv6COPmJCm+tZZ895TKWCy1169z5F1Dv5+uAN
q7xYStfLlfPncnpa4UnGK6Zokbg3w9NPe81iQ7e95mrdw2mnmqeJrGreJrao
+Rr9XTNd/uQ3D8Wwne2vfaycQL7dN65tN98g9pzyzXR39htxId3nsn7/xpPf
sQFfltcJEWm+rR+xq6Wn2Hiq6N9j78eS96ldVY5cDxanZ3V8Xa1HoDgx9k7d
0j9SxPGXo4KL9HsghhbrG9cyj1k02tX2S5sq8aLwhMTdZfd4i4R6P0MydLGI
ZrdbT3hVJ0E87z3xYuNWnuJHt+WbP95LFL1XXTlb2GAUf6ZNf7mnNb4URQKz
bVliu++QdLD0+BviQXjKy+ReEdRuY9mPD4vGU+U9wzb4lHkrlk3MLfZWNFD5
fKtivv4ZQNNHFX49Kq9JlBgdGpU3rR/RNrejOf0jKMEyOcuV2Qbx7fOrVXmK
+tG1+osyfXpsEAPP3ry242cEFfu+sFXYvfei6JyQP+fNMFIN91Nxg9wTafuc
ixUeB0TQSLfDw9rEGkWmqe3WDjVZxPx3t6qG/GkQ4z2X3CzQwiTuBv71V9Fg
izifbfiaqmNDRd4XAx7988skGvl/K/myt0W8G32lQ5WdfuJBq/3CtMokcrhf
anI1wSL2Z6x4YPyaEOE18U3uHilG0at5g0HdPc1i2tNHm/P+FibS+BVeuaVK
GBVsnH30/QkR4mrOjtcCjUHCpc2yiQ/mR9HiyEHNWtcJFWnzu+VL09d6XuUa
dDqTI5wmdTvTuGKZIHF/0ciNF1cGiZ1rvHKk62eizPnK7vrtaaDwWfNb2wpV
rXHsqdubB42IFNv69LtM+ww0pOnyk1fTGajaP4sbXe0XIT5N7da46FYPii8+
KOZer0ha1a9yU693ZlF26fxBA1Ybxb1+Hwq65wkTWTYNvp1rg0Ucn+J7sc30
aGFO6vDtaZkAcarr46cdgmNF59sTy78M9CKvf1s2vRwUSguKn6q70mChvKVS
0vS+YKIeny9+rF8hhCaHXgj7EGYh8/ZRJTZ2MlG1e77LRn8NpQZFHnxcGWih
ryVLnkoIMtLJ4ec3jxthoI6NB/2YfMVMX3puT+fxwkh3U1fGLc8UTuOKV/vp
uixJ9Pw6NGOor9UOnE8TN7hAuAhanLbKjSJWffhVpsjgyGjR4WDlHvdv+lL4
nPqF+3tY82e/dS7vR5nEomjhtWdMKB2ceCHfs1cWUaXRpSNdPxjFojM7M01d
aqCa7bc/KzvRRK1+rlk99IuFck8LaXajWago9TH2Z2pFE6WLbPvKPd5CfX4e
mzuvpEHUmn1gfI9FqeLxpZoDk8b4iFPTV2xqcPyhyPdh46pDfV6L0g8COk2M
MlLMvVtHk2pGUc1tBw+nL+0h1rx57VJ6QDT1e+3dxHgjgo6drX2v2F4PkS18
y6be7+KodFKNEvdTQ+nDm1I3DlX2o/rF2pQ41z1KzO8X4dHsRLCwtCl7Y82K
99S/viHPsReRYvbJIrd6PQ4TRYOW1a1RKo7y1Dn4aXl3C62cfX5G66AgSnfh
aPGbbWPIremgd/8ct9DrI3t/fQr2p8j3j9J+LRBFX05VnXXjsJm6dttao8O6
SJr08NallVZ9Cd/m9bW+9RxKbHMP9KscTiXPxy6MOplEbw6O+nfTABPl2uZ3
oMqMCFo2a1pc6yMGWpm3yLl1u6PoTr5meVOKJpChwSevLbVMYtX4qS36TkwU
ga82/7v1hEGEFMrg/m1uLK3Yf374/fsWOp7pvfHkUl/KlmDufbVXAoWNCPqy
d5CFKi/M5LIk1pO6lMrYZWj+JGoytIWraG2i+2s3+mbZEklF0q6OyDYzVuw5
2WVR4i2LeD5/nueCWb6U8mjuuHKj48S1Ke/2r+5uESebTg+/0dyaR9Tsszbb
rRixOHb26Ta3LeLPjIXfXyrtT15nzk2q2iJGhHUoUaTdIYs4srdOfMffrXGm
7/UcPduk0sLUAhd+dAmiwVc+tPzkckP8O2T8+TlnLSIsuv/7NxNjhcj9wvfy
aR+xaWOrokvaWkRHlw0/q/eJE7WHH81M14JERFLZOXFnLKJ2wqpauc/HCPcD
/4+uLw+n8vvaTykUFUmDUiSzQkKmJUVoIMmQoihJSkoqNFBCCoWSCiFRIUQy
LfOQyDxzBpyBg/NIUUq/8/2Vz3u9n/f6/uU66zz2s/c+e9/rvtfee+080rP0
ThT5luiouI4BErvWSQm/JWCPZYxs7NxuFLmm/nqpGme8dQurZDfXYZNinlK1
MwXbhcitLa8Z0Ldd6NqGY/Uom5iiqPykFxda7M0yKRpCuLft56aWXFgY0xRy
SGIQ+ndSFFumh1FQvsRWqYxA3gOfBvZdbIbpk8EvJV8RENPv9vihwTAYlQme
Im/qwumLnZr0OgL0kmuGbCOHQUT7zOniwA5MXbdiS14xh3fqhy18u4ajg9+s
C1bR6MTlnlK6agvY2O6wf215Lg1brjLvvDzSD3Mc3925dpoGDRa/dgqljkHg
TEVZ8TIqituuPRvBmQ/lI2W5O+XZYPg6XuhWIwWNEltL3SzKIFTt7MXbMsMo
8Livuja1F8Xqvu1ad7wXQz6RniQcpICK69izp3v7Qfz2dmy8xemv6MKejXOG
QfXXUb9ucgsKp7yI7NVhIDlEckGdBIFmKQ/S9idQwPuLaPwN90JMd/Y9X2zK
Ak0jx8TINRT0Fj6vnXq8DW/5pcbPucHhY/e9DqW9LsFn5CcPjnwfwb618zYX
cXDm3Nz0teFzaKDeHL59+voYxt9w4T9kQcPHFyYNVC8NwFD52DZZGxY4ap3D
+z6FmNGUeOzw/gEYN46n788cggx5yUfrhJowzEhYctycDLsoClRjYxqo/IxU
4BdgwyBJgMuAoyti8q4+17akwZWHF7l3KY+AhOZW/krbQShoP8nW4PDS6PXP
l6xPGgXFn6cq1ssPwg86j/8rBTqyGxvfF44R+OZ+xeXXG8h4IOFHsaUIA90M
32fPvCBQsGWPEvtkN87c/d5Sco6Oegx7k4W/CDS4s+nDM30S0l09PjeupGOv
9/UFp93Y2J9hW6dxh4JkA7nJM28p0N6/3GvXyj4s4srTOHGL/M/5xoq/eahm
90vfc2oOu3hlANXUgrnLqc3w8kby8qyzg8C/d8vFGzYD2GcGW3q2tkEgN0vH
gqOvhpQi2qwk2dgab70ewmj4xTy7eslqyj/neWfPT8zub48sjTwuN0KAdF/3
SSF5Osh3CGpkABnubjInf+Uah8yoF0XBxnQgX2yT050iwdvVh44Elo7iRCZ3
wqseGn6tPHOCZxsVzWZY3QE0AvcQp0bEDtCxxyTBToXjH2X+//1p4//kM5s9
R+a2d/7u6F10UFbKPqvEeU9vPHVGpoKEF75PkF5tawP9bO+83qxBjHq27Jhv
EBl9UEOykzYEvnfIl39w5ln3lW1Xzsx0gZUs15OChkHoWB25wIHJhmte2xW/
POoHy4VH1IPD6NiuOrNggeAYGl3nczL9SUH1uAVyyYuH4GDohhytDAIytdV/
OQh0wnjo53OvjIc5PHf3QO5Lji6r73mzTq0LLlWzvToeDuOTo+OG8+sINK+M
/3w8uANKhgwGwlWHUfe6xq1jeQQuqZTiDzZu/2c9Y3Z9YzZePbueMbu+MWs/
tvGe2pKnBJ623b/K9Mgwql+3teCz6cK5CpQTD6oJDCPmJVnGDKNji/LinKgO
jFUuSOgs5uDvh46OgnVD6Lq8w3qeXQdWadxUfuLEgJsNmwOctzSis6aAUlcP
GbVez3M3zBrG33bAjLcshg8jznFzrQegtftKxUkOLoksu9GtEDAEKnE/6d3G
HZh+NyJUtYAG/KJHRsKWscEhadl27d1U/MB4++Lep1KoqlpkbqbOwsePtlU/
E6Tg1q4+t2gOzlasOTSWJ83xs2JpgS6VHNxeO354Ey8bu1LXED7JNJRSr6/c
t3wAVG5FhDVU0aCr3Kdf5tEYmB03PfBdfwA0dJvjR7xp8GsnKYi4wNHdFpfp
qvP7QXqVxnZvIzrGDH9q+jJ3HE3rTVsb/zNOXoSEx26i49NI7Stnfo/hOodd
H6dzKWgl+Il3Qy4dIveHyda+7sElFBMpo04SnlA46mkcMojKJ/j03vO2wfzI
y1XnQvphX1OI42KOXysTfFzGPdYCBluME0V3k2Hpt2etItzjqDJs+iRmDx0l
VjvsFPpFgrmlLw4EjRJInum7PMXBiSVMvjSh7WQguRzNU/QeQvVUrtwEJLDo
SFjZTGsHcPuVsbwKv8DgRYsdt0TJUOoaZK+yMRLW9C1d+amdwGMxESnzIobw
+omBmwGV7RimPGH35Q0NeGOnZwjtMZDKPEphjQ3A1+RM0al8Ar+ftA1apTGM
Ca+J03OH2nCpDBxJv0vgr1+SZ5I/D6PM1ICG7tsWXBp775OwOQ2ufdEudjHs
hIiyjNyh9GEwORzO73CfjY1JTtnH/rPvMtU2ulKoEWa2zj89X+cVpsjOny5f
xMTdHeL9fIkkEF5L8l0o2wk3Jg6tdTKhgdn0q+inBRTMUPGkXp3fjRLr1Ndq
ptGwIOucj1MGCz5K71wc7EPD78fnhBvpdeKm383c+stZsPiaQ1oSx7/dzjBQ
jvSk4bjzaWv93xQsSl3ffv1XF0xJyvj2JtAg0cNumOsOFb+Ep0sZ1jTh2a1i
a5uP01A3eqReu4WCV5V0Cg35xvAsKyq4+3MSZjo3P1/0th09yWLzT2b1Y4jK
74M/yTXgIDM0LKLWjl7XVk5kej0A6hMFGdu7LLjvJh0RzdsLtoxSX+leBqjH
WRQI3qoBZ0avtNSOAdjhKiKkIDuA8446PG5fPIweZlEDXN/6oVcrye4Zsxqa
66Ju03mZQOF6fzRoovOf8zWP//N3Vef/zsO/nf5/7PYfTheridAwn9/h4gPl
NlzjMppO2UTBb9N7JN21adh0a/rKubhurJ3/oPpGAAWfpj5sdoqiAakg6WN2
IgGXfY8a0cdI4PtbNPZYeAGsVpx5RYjRYNfK/aod9oNw/7q+u8c2GtAqI/ST
J/JgYbvVjqiaLow/t6LK4PcQKJIf3g8OJaBDRsqtcWUNOoiadTjsoGNOwPk5
+kQzUK2b6AyNGjin/SvievEgmEzV3NvX3Qi7NFyyN5uR8fgpKwtVLQrqPn1r
FKBFgRixFCvRuBoo+MpLfnuKhnEppQJvu5rw4RWuEhJjGERtHfdu8CrEC3tu
mqeVDaLYYq2Y0qYerLHnnfcg/i1o9A6dDbw7CkIJGxi74xqRT1pYhb+9H6IW
unDfXv4Rr/XeoVWmUoDH4ClkjTfCt5ul0amvODpsq8hFtiAFRFiG5ZvLOiHf
eQWYmndhyLvfzfvuUkD8cuoVk689qFRdtN9iEYcfOJUvPrKiC88wX9t43+vE
OccXSAjP5fDx4JDbmop9WHf23eWD8YPQHPFbI6S0A73Kyh9s5KXABhLp5NTS
Pnh9fYp6cJKKUlx3NLI4dsl+gYuFIhRoyn85FChEQe1T1g46xvk4KE/dpuBW
BYnvmL4pEqN49fmaLRlHe/G9hxBkGfTjxXc3x5zf9cEWQniLk2EffneKHvum
yuF5p+K2+Wh2wE6r+6T6U714vqG2/z20QXmq7E6DuzQ4b95Uq7OKBTxm3qIS
OQR6vAghx76ioV7od/lcPhK+Pe7AvvOIwDIP9yUHfAfxmmBhl/YCCqxL/zWO
x1vhW/CUKbWVgQ7UFUSoeQFG8dBPewiOwJuHGlcuVuSjrFoKd9GNYhBbsoy3
iuMnniXpuDysGsHirlB+efUEeDKkpblEuhRVfuyQZYezoOH8zwTXql4IV14h
kk+jYNev4PYzDf85L+FQNFM0DLcvXdzUdncET2sGBMfLjeFmlUMXz29vwEDN
wPT3R6LxbuSTwJKJDpxaez1sBfcgLCgNu0mVGcD3CxgfuT0oeHu0bB1/OAVb
b1/jd+fvQtfD7s+TWXRwTWObL+wlwdPxoLrqmWGwWy5xkkZng1+l+6gdUQnv
ZDf6v/MYBWLx+QUtDmzQWW3U57S+GUIp+41MootRX6RL6KINBQrCxRv1FRmg
2mljJ+VIAU3N3tYlO0tw8cqaJE9VMnLdjLDmzusCs303ApjuE2C/ZV23iGE+
XNZY8XZ+EAPjux9mbW7g+FXMn5/G2w/M6g8LX/iNYkfik4TY06XgrH5y9CZP
H9wSK7q6eHs+6hgV2fycMwL+Sin+YfEl/zvfyar/uef9L278H/sbrw7+Mxy+
GriAdDBIrg3u1xuLXQ6hYHbwnDkfOLi88Nk3N1p4N6y4aauuUUlBfrv8YxUf
uoAafm1y9NIE+JXfuTG54z3aOZM1Z4zZoHt61ebQ0ywwvjqz61l1G1pcVfFJ
CxiBPenurdcymDCypP9cl3YP/vzaOaheSUDNalEXdwYdyqRdWyXKelBy9Jb1
sloC3AaGHRI4+mnZhTcBIxu68b/kb0GpPzzwf+f5ViT9tzwt+Lozb1owpglP
pbpxW8Q0gZZIn3lBMfOfPNSzvHKWT7I2b/qszuGjAV6hhF0jgdSE4gU7E3ug
5O2WafpZBn7Tc01JnUPgwKvt/M4yZBg9sC7hjCIDnVXnXN77hsD3y+M/f3zY
C3fDL69Yt52JU4WPvlW/aoNF3N4Kil4kCJvCVdWhNLy5TO9WOE8PRGtGhyyo
JYP91pYZ0jwCt7783PZAgYV6t/J+3lpcjq9iPvvti2HjqrvBH4dZo3j2nUDG
FYd2lBWNGhGc3waFv+M/5rsN4YPWyaSk3D4cOq9zUUyPhHPqViTwsKiglz3+
47FfLzps+TZ4xqoXlUVNWir3c3hZSzV/lxIZ9Svk/MzWkNHlVNLmPUkDIJXu
VWDVQOLor0S1LpFGOO5EZG4JYeHGvvU6R7U4fEbUibp2fjWYHZJ9sH45G1X5
A04KyLZD+47rpzbGDICt6FNN7blkTI8eI+Y3kqHaSe3zbi4aTLl0qdNye/Cg
IEUjKp0MDfk+JeG8HWAa9UDPv3MQT4kmvzxcQwYT+wjjj4Ik8EgY6swRHkST
c2/mEM1kUJNxXtdb1w1qrdGP8r1pmDPt1eSTydEXj0R0flTRcNOO2N95mQTO
oSYn2Fwmo0rt9aOJRvXAviPzO15mBI/4s48/ppPwTQYzX2nLILofWT1sc4YE
yUkvBnw2k5FvS/NGs+c0rL04w9is3AMxPrUB14tIqPGqUmOohgHdhyViXsR1
4PzK9eGPjvWi+m1Ns/PWw6B1yvji6s3NuF3aibFEmIyademmr1toYBov0PCB
l4DH7T/r7CU4usk9UnrFPQJiL1psbDzKgPdypz027uyBlLIjGfJqBMgU33+Y
kUeDleZPY5R+k+FrfhdFJp7AjMFP+zZfZ+CL1UsViwy6gc/JZf+uAQJlvyy3
9Mui47v51jNVin3An9K6woLNxjt8rd6r7tCQEsw/uLCHAmsWUMRHK+kgu2zd
OuEJAva/fSN3htmLSk9ks58toINPdze7mDPP6EZ35xHXyP/keZudZ7Pz67i+
su9gJQ2Iswz/nuMEsF8nnNOyIKMdXXIdKYOFi3bcCEl1bgTxe6EfjK+RcL/U
oqoPSxqxhueOtGoyE+YtNnqe1kaBXVJrY0M29oC0XWHqwtc0LOzdP7X9Cwlv
qPjvDRFjYZsOT7DuDzYq6nkdK3EqxxZDBbYEiwkV/AtrHj7m4Ien4vyE5F5w
icu+nPWSAeWSIoWvqgjYoZMpP5LZDVwRg3u+nWKD1b257WPCdDhhYTvOWMTR
77bVPaVsNjgO075kc3jkybhnOdTTVbDnYdklRRoJl3c/4fpxdwC6hf0shUs4
usru1b6KEipHD4nWMX5TILPlV/NYNAmog1rFj06zcO9ziztLd7JxtZZa6Mcf
7eDjkkk33z4B7bSVq7ZxeHzeA4M0jYsFcPz15VCPpyykOsYLGNxvAEF9/85R
aTL4LT7Y9mQpC1cybLZuZlZCsuhee43x/7nPaXa/0ux5v3/vl5u1//v52XN6
/35+1j684LN7pR0ZTh1sbnCNmIArXxU9eERe4mD+xus5h8nQ+dhTmQjntGMy
qCzwbCrYqpw4YrmtGd7cjp0TptGMVw0Y827wUbA0oXVpQAkBtKLYkS0LhuDU
dxlXHvseNKfU1lBWETC3yf+cmA8DMug9b6j3STi3PObr07tsXPC7x+V0Fw0J
dW3xmSwqnIsPYK3/xYalI3rrHdexICXS/+Zjo3L8936t2fb+e3/XrP3fz8+2
99/Pz9oDG53LU981os/FjWUq+iwwvWP+bA+1D0OorF1rZZtxromszTerYWjn
OeZymOPHa2eOHZTjJvC50/tGO95RXN3nY7f2SxNe966/Ivd9GB7sVxbOyypD
rhHy5oCDVDCTvBtavZUFCg60O9yZjXhjtGxRtjYZmmILI/gn6KijLjdfm+Nf
ks+pvv4h04uLt/0OEcujwGn3jt7vU/24Npd/YaQSR5/SwpcULeXYlYU0gpsH
EBoUuLs/kJDX4ybv70aOzpin9FZTmYwO/tfZ9ir/k69+No/CbHymRy16/sRF
NhpfCpjWN2ZiylT1+qkjVPzsp9Hm2klgTb8o8SKHgZRVr7a+UurGnZlBIDtM
gIn84OexYDpMbTn59OWvPtA4blDs+YXAn9ubvi2LouPUvFvpa5eSIF/LSehC
TxPeKa113Ks6DJdEFZ+++EyGFGn9ud07h6D8t/PxomYC6pnWD89bdsPqP/4M
Uv74N3D+49cgCk5IH7w6hH5C18TUOHhubXworTmvGxiE7aGjJUwsclKayS4n
cMtndTLPyS4Y6R1eFhFHoEGZU0KmzhAqZOo8TynpwY02TSp3egio5eo9tlBt
CG5vMKhZq92NuaN76UdmCFj4MXlGx5MOItSA0F93SXCh+rVMXdAQJN4KV9hG
5eDMqLiigE0XHOpbvCVMcxjCefKaHnP4y85LQi+e3+6EKx6ZGfTAIXginbb0
aT0BGqcl3/8I74CeYu+dm6uZwKfQM0VweI1vpfVdkyVdIFV9ISWGo+eX8356
cv/REEpV/AhslOxGTdddJF8ygULWS7Z49zDxrZT/mwr7TlS72NRzeBUNirfx
z5e/xQbxYkVvhuUA0EfoQaxfBPYOmscEXaTjFwe1ouhgEojVrLWK9OPM5297
1nFbk8HTydVyYUAS7kd3rYlmArVpX9TjKEP4U04obAtHb35NMuYinF6iJ+t6
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
     "], 
     {Opacity[1], EdgeForm[None], FaceForm[RGBColor[1, 0, 0]], 
      Polygon3DBox[CompressedData["
1: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
eqedc7tnNminHXJL7POV0O+M//xKnPMU7ewvu3XSfhhGfULIxCrbIZNCpg6Z
KmTKkG7I2Z3sh+x55/ivOq8PQ6ap3xhzjbfzTJ3H+2ZMaE/Ef17Yy+P9K877
sIlpXzj2dCHj2zlvmD/U9bPpozw5znerXvonM1T9wwl5H0fD6Rgf8rto/24n
+/bM/bTpZqpzNlYZs2Zupy09jN890Mn57ZhOjuWu/dPtnM/Y9LM7x0lpG13R
yTFj1nb6CnO08zzmbOd/fNb/dHPe2CH078f+HKtZ2ukL8RXY/wd30gf4TDvv
k/9zXpOifbnQ/z0x7Sz9gt3Mfn6xm8/ac54v9hkxnsb1bdZJO36ROMdFQ1aJ
7auGLDuaz95zmidkrjqP6/XNiTmvfb+bvtOP4hjfc76eb+hntXO+dF1/i3L+
dvpzC7TTJ3H9s7VzXnQsduINNSYZm1xbp5P+ycfVJ+zz0oTsc/rbytVPFgz9
pWHuy6dZJOrb99JHWTT06btpny0e+hLtbHuyl89uq37axncNc2w7J/7zqdh/
XLRvaf+onxTlUu18lmzJbeN8F5uU/q1rcR1Lukfxmzfit7/tpj3p/XH/Ngt5
Rx8J2Tn+d0XPuZs+mHPQj9aNe71PyNnhG6zUThu2M2XarCu3839nit98u5fv
sXLXXr23+lk7x55Vo/xyyGoha4Ss3s6xly+3Vuhrlny1nbb3Ou2cN/xmhXba
tP5//Xba3et6/9rpF2r7aELuZ5+vtXMM8B+zdtOuZF96n7xrq7Rzbpi+3r+N
o/x6O/vAsiGbtPM9Wqad274QMq6dY4B7NkXVlw752cS8d7v08n/cE/eGT7pN
bPtMN4+3eTv79mzd/O9f1Fh6VtRn76b9+F5sP6iT/tKso/l+/Sf2OS/u/bnj
8rlvFbIFif+bZ1LadM7vhmH60tvWPtuErNdOO327dvqrX4pjX9nJeXbubvbn
pSdmP9Vffxjlze5Z9JeZY/st3pGQnUJ2Cfm296Kf9u4RcZxxsc/mcR6HDdJW
ZjOzcdmlK8b5bDXIc9iznc/Ls907ZO2QvdrpN9BXnpg2G9vNdnaK7Xd08r82
if/8Y9SX4xOWX6ivfrGddsKwk74FO2BHfbaTz2X52H5nlJtG2asxkF98fOhn
tnMsu76T44Vz0w/Zsc6Vzap/7RfXcVY8g0Fcy7z1n465UD3Tz7dz7pwujjN3
O32uTaof6T/ebT6bcXih6jML1JgDSzptQvr7n4t7uXC0r9rJ/fohp0zI+c3/
/3eQ53AHfVziEgfEPjdF/eB22heekXnRuGi8YqcdFPqB7cQ6flm/4bcf0k5b
1juyZvzntzs5f88Z5S/5aJ30NU6N/5ox9vluyOHt/N/jojwm5PiQw0o/1HXF
b06N8i+dtKuvjXK1eHYnRNtRdYyr49ibxP27JK5lvwnpr+8b5ZKx7+meSz/7
vT53S9nU94Q+oZPj6sad9JXgI6e7d+20rxbrZv+Eyfy1nfMKbMK1Lt7NOcB7
dXPZit1Ojq+nT5HHOKnema3biXHs1s5rYYedph+00+Zjq7HZvtNOv5O//8NO
2lBLdHPbiXUc76u5clzNQezpN+B2IWdE/fR29kP9/shO9qfPRtmO41wfck47
sR0Yz0UhS3bznsOElupOxlOU50b7ee0cL9mznq9x9vyQUe9vJ/3Kb7gP7fR1
zVsHRvu0Ub+4nWPuefUbduMlUW43LueAsfE/ntuKIQuPZr/1DPRduJTruTRk
yolZqn829lmok/bjvu20kf3PIu5HyIkhx/Wyj34xrucL0SfOi+dxYTffndM6
+f7A066MfrFyN/G5Y9vZB2Fr8LanJmT/eyF+e0U7x8uroryynbbn6jXWXl39
8JT6nd+fXn3tLyHfClm4mzjeYa3EZG/s5lzyQch/Q2asvvT3erZ8E37Nz7v5
LP2HMea6KGfu5LgIP4QdGoOdF9253RFjy7xTJ944dfx+KnNFJ8c+92ufdto0
p8U9OrOXNtVMnbSrXOeb9d5t365n1U6c4fp2/u+tse9tIZ/uJZYN0149/uOq
kNfaiUtc0M7+za+BlcJM14jtb4zkuO2Y8NkftROvZReu2c1zYlO92M57+ZVo
uyzkgahf1E6f5dQ6Nz76+XU9nv9eZfsuVfbXZSHLd/N9PXmKvHeuwTu4Upz/
7vXfj0yRdtLhvRzzjH1LRX/bMfRr/E87/Tt+3lQTsy+eEm3TtNJGXaebfge7
nf3ud/NG27rd7KMvDBOf4Hd/qpu+N58cnsHnghFd08l3h7/NL9+gmz7m3J30
fzdyzzo593iX+Ot7lY2nPzv/F6Kfj4Y808/7NNcg79VpcaxPddLv4qfDSZzP
8dG+WidxY2PpjJ3sxxtEeX4n/Ur7PzxMv848CacxV+5XY4FnANOBIfBzYThw
RDY5HPGAmr/Mo/xxfvn347w2jXtxyiCxQvzA17qJa9Jhm8/qc7HPFv3ENfi8
/M6Luzl2sGv4k+vU+w8jhQfCBY/WH+J/j2jnO+Ddvi6u4aGov93Nce7qGjvY
BMYzvuyYT9tK24ItCNeDX369m2OcsW7VGr/43/oyLOnbcR33t3Nf2CSMEq5+
ePkF+tmNnZwH+FonddJmNtb8O+TCdmJs+o9+9L5+20kf2fwwQycxAVyRd987
g2Bin06R6piNCxvGX8CWYcznVj/btJu23MrVT3A1n+mkXeC+PTZMnM5vfzXM
e8gW3L+Tcw2siU+vD+Bklu4kfjlb/OEDIbd2EyPbrfquPrtU9dtvlu21U9k9
cDJ4GZ8ZLvGrsif0ET4XDBZe6Hy+p0/UnAJXYdcbM+GOR3cSe+TbuB/ebbbc
XNXP/c/d3fRD2IKwY/b/VtG2dTd990O6eS1frfHKWAWLgQPCg7eJ7dt2E/8x
t8OVZ+rlfWfT/iTkB+20Yx5rp69uzDOfw3LgLK/VeMWnHl9zJVzU+DWp/gdm
C69kN8BJ4CU4QGOLMcY9eXqY7w7f8it8tEHaTR+OS05ptla+88bIz4XcE53l
zAmJk/6hnc8Fjnx6N21s8wW73dwBozK386XYXYd00vbSp/QtHOTONW7Dinbq
JobGRtY37hnmOcP4vKvf7ua+fsPe1b//1E6exHgII4WVsmfYR3gnYzjcmu3O
z9i9kxjSrnGs3bqJ0w36aUvDcOFxfD6+3Igxu56j5/GtTj4fdiicj982f80L
cPX7zBWd9GXhr3A5WI/zdX3G5G8MEk+ZZ5j3ZKdOzt34PRzRxSFHeFeGySdc
GPJJO+8bn3rbkB276bPhGfAN29Q4wJfCy+3ZTc7InOq9XiHk2W7ibm9WP9im
k/cY3q4P7RXbt4j/3HKY9uS+3cSZ2cXX9JK3wFkcFtunGiYefHXhHYdG2Yl7
eCoMzzvbTawQFmusvKud9gMMdZ9O3je8xMHd5KgXq3fGfT60m9wbTu/6XuLL
MNqj4z9nGiZGfUT5n58pu2WrKD+Oclb2F0BqJP1nODo8HQ/AnzkK/tdL7B5O
+pNe4hx4W/cFJsn3Z6ds3UlbxVgD84bJGjP2qPn0zG76VvNH/dW49q09r37O
fea9pzr5/r7UTkzp2Ng+9zD5rKnNU53sO3wt45FjnthNn/C3se3w2HfaYXIC
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
XOF/Rfu/vWO9LL/bTf5XrhAO+JzSP+gmH+KZ0TccZC7j+oPkzCZ2cp70zojN
wBnCwMWEiMV3/vhEOJ7nLC+Jn81vF0PMj4cfwg7X5p/0c447N+Trg8zrWmiQ
Ns0U9V9sEzYKG/8Pg+TLvjXMd2SlVr7Hx4a8UgnkcuFgt2M5msa1bsYLikcR
w/9K6O3xyTVPP0hb8JF699kYp1Y/2zy2nTA+uWZ+n7zFr/YzT/OE2H5LL/Oo
2fvyqr8Er4p+eOH4zGcVP4gnnaaXebV7Rn29OPe9cW2j6Qc+X+PZ+p20q343
zPhh9o9YMnbJWBxFO/PaNmN7x/+t1894XG0nxbnc2st8QVj6aC/jLcZXqX7c
+Kzf10oeTi75Kq0U+qRe3g/3hX6J9viv50LfsJ99UdvJ8V+39zIPGJ4GS2Pn
4gzhOfCV3WqudC/NHfJqxXP8pfTpe3kO7i192upXbFnxFIe3EhOappM5Np4n
n4YvwbbmX4jR9Z9/jvOYMY5xajdxZjY2m/zmbua0yMOHicCTzTXaf9xOu/qH
vfSbG+xcfb76zY/rGOfWMdnvjiFGERa3bB3TsY0Vxgl5NITunsCMYEfLlNCN
MzMPM7b/uyV0fgF7VO6wOJsvjiaX7HiwWTHpOF257w90M2edXbJ/2SlKca/4
6j2ij30n5J64jl91c80EayeY98358IUpy85h78hdv7OddiI5qJuxp9478QW4
18+XLgbHtfMJYJZiNsRdfaqXz83zO7KVQj+i7t3d9VzOLX32Vvpcjb+lL29Z
9QXjmR4ZJzxb3KdVBqnPOcy51xwMj2dXfa6fPpy5xxyEr8KVL1B19wgWJA72
0U6WcO0Ho+zwpfqZe02Hh4nNEe+Ip7i1dGPBw+57N+dz+Z30C8q+NW6sVkI3
lvw5/usX7cn5vUq4M/wUl2pOXCL+c9O4rrlDduslzyrXma/NHmNfi8P4Qtlz
dKVYyoXrXWu4+kWqzs/+Yi99bbniOw8ybtB8BkNrl4hnYiOwkdhHMBaCMxAz
BBsa43RaWd5UPtpY7E871ys4pvSLWpm/Ko+VTyqeSf3pmifNl2JT/lU6bvru
fm4zn8pRp2szz14TJ/blYea3ixFlX+iP+ue73bQdje3GhGVr/FyuhN7kCsMD
5fX8onQYoVgT61r81jnEsW/t5/oZbCgx2LD+L/Qyv+/Vdo65sJizSui4GDY0
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
bMjXkG9pjUx5mPJo5GLK0dTe5GXKC5WbSZ+xnzgufEG+sJgidbgCfY7u5Bgj
YzHO1Pe9mm+ZKMWTPN3NcW4e88L4HBvZSksMct1JeSGEjp+F+4krhPnJf6Zr
gyn+ptqerfLjwkGf6yYWim+na8NB+14mTrpTpTjGH5YthsNhi9G1wc0/6SWO
7rsqYlzknB9S6zdeNUXGSBmrxUiJwZArbhtbjG3GZz0unvFyg4x38S27l7qZ
w8lWkr8pb/GjxlbrZr7mv3qZs3lfK7Fe+VX/jrZXjVPd1Nlv6uIHcKy41j37
WeJZxfyL/xf3LwZA3gFbj9DxC2/UNtco/v36svcInc1nHcmlQ1YapLD7tInD
2r+fsVlitOQX0dfs5xqO8q/kTMKU5FDKd7my7D1CZ/MdH/fny4Pkg30/7Y/d
zL1coJ95l377fi9tQLYg/EiepXxLuLjvP54dski0vdPNPAa2IV2bNc6OHc0Y
DzEoYlHEoLAZ4bHWgmAz/rV01+c62blsW+WS/Yx1hw2Oxbt3E8NXh81ZK1d+
JV2+JT4fR4VnxFn5VtaqreTv2Z1wbXFGC5T9qe0c/vwg42J9g0vepTxM5bu9
zL9Usk3ZpWfH/usOMj7M91HlYMrJVP6ll3mYfymblb0q39Law3Ix4ZTyMa1L
qZ3+drXL82bDzxrH/K9xrpNx5XRtrsk3wNi81rMWn3BvnMNMcJpuvsti4Ona
5im7xneePu5m7rW43E+66dNb43TjQX7zddXYZ4ZBYiqwldfZkL20ma15J9a/
WQdaXcDPajU+Ghu9e4dWXhv82dpccGe5WPBA+VjwZDjy6v3Edbuly798pZc5
mN4/fcq7tkbU+1Hv9dIGp2vDVw96yVmLN6Fra/In2eBL8aVCH/ZS1gl9il7a
4FNU/e8jeQ+tEQ4n4E/wJeRTPtTKHEvjgDxLuJl2urZHa3ygixf1rnjf8PIT
erm+onxLayev0kp8Rz7mytVOn7Z0pRzNc+M4K8SzOHOQ88iUfK7B5FxNPsrn
Qt8t9Kl6Kc+HTN1LH2Lqqothk5cqjs2aDtZ2uKaf30gTN8M2tw4WHwM2LlfT
ut3yOL/UylxOa6xqp2uTK2tcoYtvEbci7pXQxb/i8Om2P1B1emeQ/gc/5ImQ
nxn/Brl+PI5O7MOnS8fViXXYWB/pZYnDo/tGkTxj+cbsTLq1v8RLzFTHUKqL
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
Cf32aNt7mDoc1to0ci1hhUq5l83ahvi1Bwcp+Df4obaf1T507bbjo62DIwdT
H1KXl3n/INdlx73R76r+pn539Tf6XbXvPf3kiJ4qG1tfYmfDuvbvTo6JVpfX
BpOAIUxdpbp8vXmGGT/arJWgVH/c9YS+2jDlgX7ybtoeqHZY7nGTEs+FH8Hs
cEu46IOKz71ikOssXD5IkTvYrL9weW2TTySXSIyA/EKYDh9CTNKa4/Ob0H/t
Jz+CJ8Hf0XF4eDn8HO6O8AW0wUp8wwmOQpcDqo4jgx3gyQj9U3Uv3VP8G67X
d29xb+ryC3Fy5nz32f2+dJC2qTXU8XaXVNszIU/zUYaZ7/RonPsL8Z9X9ZJX
sR+uctOJ2e9gDb5LNGfpcmrVYfcvDBLLtx6bnHN8M5/Z93X403S5nup8Fz7I
OlWqs21wXng7vBehw5U+HmQ+tLVllfKj9f0Xovxd1N/pJ6chNtRcjxvHx+Hg
cE5KHBRfjc+1RpXq8vJwcHg+PByh8/9eCtl6mOsIbxXls2yoQcbfvVsxeNYb
frmf6w3zL/mZDTeohO2/WseC5eMCYft0x5BP6DjyC50j/hA38/oguRrl6/1c
P4Sv6Hszzbdm5Eyr4+lwdLg7XB6+D3+H25P3hwO0HgkuiI5L4bs9Xz6cuvxB
PqG1xfmL9Ob7GzhFvCOOkdDhI3w/a2vyC+kPtrKOe/S/Df9I18af49c13KP2
dj2/1+u6ieeqbf2R9OvwWQSfhdfyLnmn/lrvlVIcjvfNGGvctaab91G8INy3
iWEndLwZrk4sCO4OFm+NC7zP6+3k9f5UYj/c3lmx7R+l+86Quu8OnR/yvvdh
kHOh8p/9bPtnteMU4YwzFueIu8I7KnceZmwGbhJX+WD5pXRt+K3Nhrmv8j/9
yTE24m3E2cD4YH0v+k77IK/FM8VZynPEYVq7w7WKe3ENdG34w4/6uTYk2+n8
iRlLbr1wXCUukw+uTseJyn8U2wNThafiJul4QjkDdKWcIfmR7ndz39X9p2fv
meoPb9bz1dapd/mNweSYb23mOXPc+4Pk7+BMsOTToq03yHmX36XOD9ugld/6
FJtHfjrMtgNrXQV5oXhOfKccS7ELU4TsMcxxUJ6mOC917cacD2s73tNaDefU
eITv5Pd7zve2k9/8pGR0MPk75MZI30hVp2uDrTRYy/GlP9TKddfESuNBCexF
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
DixfwO/9VrlL/Y+YFb+xvzpdW2Ovs9XFW7AJ2AgwILgQ+53OfvfcxGvIVxez
oVRn64qVZHPv/T918SWNvS63i9DZ7Wx6tvletf8/S/cbx2Dfi0kR5yAXij3O
Rve/5unz5FNMylgZtj8fwLipf5oT2PVsfXn37O2xb7eUzW+sNE4q96/x034H
DCevE66NzpZnx8OTjefs/OWrv+ifTT9VZyuPxTcM0y4ndFwM27vJNfc+q9Ob
+Al2LaFbA1VstffaO83OPKzedXbi4dWX2Y10bfJ+jHvGPHajvE9jIduNvcge
VLIh2aDsu6Oq/unSx9oGOXeaM9lvR1dbw1uzndhaSvUxPcpjhmlLKdVhz95B
7yV7SX6S9xKnxt5h9yxXujZ2OE6KLY5HZvvsUjbMGI80THuF/uNW2jHa2DFK
dbYLzgZ3A/eT78ZmwZeyV9gqJw2TL1H+eJg2C/ulsWvU2R0Nn8E2IPTLhzn/
mnPNvbBEcbDWODqt2sVKKU+rPnR6lFeF3FTv+Omlm2vMPdfWvKM0zzzUShvD
uMPmoGszRhgrjB9iRX1D1beRxczBGXYqOavedz4MX2bGdvLX+iC/Z3z1L/0M
D35OtZk3xEM06+P+oPqcsdKYKeaEnFt9zrwqvqRZr/S86nPnV3/6bOlHDSf7
E3wYPsU0pWtjk7HNxGaQC6rPXVj9ac7Sm/7FvmfbX1R9b/bqb7jki6ufXVx1
c8El1V9OqP5Bv6T6waXVB24r3XNfpPrJZdVPLqt9L6/+gNu6vEp5plfUc759
mDFx6nSx8PrGbWWzNf0Chn7zcHK/oHvuN1f99OonV5d+p3o901tK1/ZC9YE3
qg/sVH3j/Lr315V8to7nOVw/zHt/fulH1T10b28oOabu94V1739UQodn/rju
1W11f9TXKj/g0v+5rz+p+3lq3ZOf1u9PLb2xX68oubHuo3P1fsh1uKNK9bXr
XjX3b+26b2fWPXFv4N1nln5rtTfbb617eFudb3Pet9V5embiGZu4xtvrfDwT
53FTlVfV/3oGY/ZJlXfW8deP/vyzYeZ8KdV9z+fn9T++Fe2dVKd/OeSuYebo
KdV9j+ju0A+P8uJO6kq2pG8O+NaAbw7QfYcALvHOSLY5Dl27+icxDtw3zDl2
4Xbq2ny/yjcvfANDXhZ9rG0kv2sl1/mS0uFOV8D86/j0K6v+0DDPtzlvdd9Z
8u0L37zw7Qu672H4nz+OZJtz1kbX5ttX9revbXTfyNLuO1nN97IereP4NoVv
Uvg2Bd33Kt6I/91sJNtgL9ro2nyzwrcqfLOCPvYdi9h/upFse6N07eq+WeX4
ju1Y9Mer/fXW5O9cPVG/9V0rx3dsdbq211r5vSs535uX7n99g8K3J3yDgv50
nfPPR7JthtK1N/v4vpTf/Ka2062BoG4b/dk6jr7he1H6ynP13Ohy/NVtoz9f
z0I/0Ad8C4X+Qj3374xk27Wla1e3rv7v6jzo11f9xWH296bfq/vOlWt+IvrH
S8MsfWfs5dDXbGVboyvXauVaWK8M87v33iu6tlfrvBbqpPim1mvRtuBIbmt0
pe+ey++19nKzBrO6vGlrMVjntlnvVt0aDdZg2Hhiru+w6Gh+13Ox0crVqnyt
lSZmztbJvsM3PvmcgyuPRT4LnHiNipdv8ljE0J9e30oQ92EtQ3FTeEB8oPW4
/K81ufCC2sUZEbpYK/wo/9jaT/Ah305lJ4nroWuTkwhjgbUYv+RQrR/V3UNe
CP3YdpbWsKTDTKYcl7gJoV8e+65S33fw/U/nK0bBOZOZK1ZBzMIepVu/wzdC
F5+U3wv1DQi6bfbhz8PBfz2a9jTO0nk636uKe8KTsa3Z2DB1/MQP6/s+/ktO
omN5Lp7JopPye6v7xzmuODGfjTUFtmrl2o3WHhErKg/ymZDpW+lDiB3lR+xR
x4RRbDOa3+G5qrjo/es+E7qYjuPrnrNL5VzJKRYfJs/Y90XEiMoLlaMt3krs
Fd062fD+7xfmL35zndGM54RRf1Trw8CI6GJF9Df9TJ/zHDwP39pg1+K3xdPj
HOUZiUvYoo7jGL55at0cPpL9zq97KFYlTvH/r3Wbqrs3YlnEsYzF3Y+mLyiX
ZoOKR4Xb0O+qe+U+2f+t0B+J//r7uJQ3R7Ntdph/lHNG+d641O8Wz9VK/Bf2
+1FhwuqH15z34bgU+tG1j+13TEgRo6vNXGYeW7qVQjfHnTgh18eT/yNXsD+a
OSxiSLXbrq5djov4ee3iYWas39rXNvvIh/lr7S8vhg+JX/I8rW3lOXqeckXE
tLOJCJ1PYYzYt74L7JtLi9WY4p1aqu6tOKGX9KXi075UOIBrdc3umTzeres5
iTPxrVixJtvGsQ6fmP3DtwT+NTHXPfJ9Ft/7OrS+/WX9WboYN+v7wnPFvNG1
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
9w==
       "]]}]}},
  Axes->False,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 1},
  Boxed->False,
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{600., 600.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-3, 3}, {-3, 3}, {-3, 3}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewAngle->0.41261728374241846`,
  ViewCenter->{{0.5, 0.5, 0.5}, {0.5313290619892125, 0.6126319816273537}},
  ViewPoint->{0.5805818686929534, -2.751771639954389, 0.30112710819143607`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.690309054487357*^9, 3.690309080673381*^9}, 
   3.6903091406430807`*^9, 3.690309201442593*^9, 3.690309244597858*^9, 
   3.6903092840219183`*^9, 3.690309347368487*^9, {3.6903094508534193`*^9, 
   3.69030947236478*^9}, 3.690309590081745*^9, {3.690310467670315*^9, 
   3.6903104956955347`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvQeYFFXWPl50VXWaSM5hhplhmBlyMGJAyUFJIqggSlYUEQkmlBxEsgRF
wICia1ojYljjmsUEKLJGVFyRnMX7P+fcc2/dqq4Bdvd7/t8+vw+e597pru6u
PvW+7wk3VNNlwOihg0YMGD3sygF12o0aMHLosCuvr9P22lFwyC5jWZGLsdWx
8LGwLNV5//piZx45eeDkgZMHTh44eeDkgZMHTh44eeDkgZMHTh44eeDkgZMH
Th44eeC/9kB17DLErt27LVt8tXmzmDp9pti0aZPVyHjnn+abvt6yRUyeNgOb
lUa9La4dOUrUqFoZGxzD3hF5NSqJBpUT4owzThdHjhxpaJzve/N8//jmm5Tz
XTdqdOB8tsitVkm0qltOnJlbFo5hb4suDauJBZedIeZdejocw94Riy9vJdZc
3UbUrZgmnl/7ovm9b9NjG79Y7NpFzUpSb4tvv/sOvnw6NjJjOhy7fvSYFDNy
wIwz65b1mdG5QVUxH824jMyA3hZ3gRkPgxnQ4Bj2tnjoqjbivqHnYYNj2Dti
FTxfDccLKyXFmkf/Ypr7yDHM/f6HH8SU6YDaVDJ3Kpo7esxYMrc6mVvdMzfX
b27HkipopM/cRf3PPAFzbTJ35ZDW2Kxq1NvigeHni2vOry/OOqe1Zdp/p8/+
XdjI/l1w7Mcft5LUTPvHjBsvalarIqpXIfuroP11yH5kvRzZXw6OdSiuglz/
x/a3pN4R9w07T8zue6oozq8jNn/9dQPjEkbxJewOuYStP/0kps6YJSbRJUyi
Sxh3402iVvWqYHwluoRKcKw2X0Ir4xLaF1UWc+ESQDVwDPt/7xJ6MAUPj2gr
ame74q/PPGuZ9vdi+/84elTbn8b2P/3sc2i1z/7xN90iateo5re/aiVxBtpf
l+yvi/a3rV9JzLn0NJ/9C8H+h4L2X31s+69l+x+E6+xQUhXwu9Fn/2ls/1Gw
fyfYv5Ps30n2P/vcC2D1NGxk/zSURof20gUM+xvWqiDOzi/P9rci+9sUVhRz
LvnP7Z9luMC4jg1Eo6ZNffbXkpFOGvzyK6+KSVP8Bnfq1BEMruQzuAEYfE7A
4KvPqy/uAgNNg+8ddK5YA8T/KwY/ZGj+jj6niJKCHIjo/ygxbI6YNr/6t9fE
RLR5Ctk8BW3u0aNHis3FNVNtvqp1YYjN56TYjOCtCtos7SVr3zREXlgxIVY/
/IjFBm81bf3b62+k2NqrVy9Ro4rf1qIQWweelZ9i6z0D/3VbvzUEMbJNfdHq
7HOUre+yrTvR1tfffItsnUi2TiRbe/fufUK2XtkqD9LL8W19MMzWoZ6tf7AW
0NbxnRqKps2aYaYuluY+Zpr71tt/TzG3T58+KebWr5Fq7oAz66aYe/fAs/9l
c9Owj9Bb8FEGI30/KDmnQpp46ZVXLTZ9njJ9J7z+93feBYOnYiPTp8Kxvpdc
kmJ6IZh+bsD0y88IMf3Kf930mmwrvmfVsPOxWRHq4/Qe9ArVVgw+Vyztf5pY
0u9UfBzBg/DRFfASf5w/6ndsIdGR34MFRUcIp2PH36gwGc2RdO++fQgMgZPG
EC24a7GYONkP0WWX9TshiPqdlvs/AlFTBRHAw5DIcIE9qGVhn+ZiwcXN4Nqx
t+n57G4lYkr7XHg2tUPdiJjcLicCj/LkczGtY56Y37spXp/+BJ4JzylRdeib
iJCh1OwQYPcFQnzjps0UphczpvtCMF20eKnEdDJhOhkxLSkqRCShVSRMK8Kx
UyGznp3nx/TSU3NSMF1WKqat0Vw4tioF007URz1M4eoX9W0hZncvEVPb5zoI
ky0mta0TEZPa1LboIaKIzWI8J7fLBZzkwVxuOS6+0yasXThTXTH7wmLCd2Gf
ZmJBn2aMedTEXIpbqjhMwNt9melU0aAgF8caRRLqMxXU+/eLHQD1DoJ6B0G9
eOnd4vYA1A1LiiXUlQnqygR1TnmC+iyC+iyCenJPMLrfmWJBP4Qae8l0sBB7
8KpjQ32lDk5QH64YfI7G+k6JtUZwCqA1hZ7nEsJoQ3t1uC4+a4eCls/zsAET
0LtiSoc8m9+DJ5jSjho+o56oaZsDzCB30NuKpLpABDsD0kKNiSklugw9P4yh
H1Ly8BqL6anD9OwPoWfpPcuJntuJntuJnsYNG6D+ffScgvTk++mZ1KM51cU+
ekAgQXowCZD9ip4JZGtCR1yMqsv6ny4W9G4ipnfKF9MgQCBaiHYmopqOIBO+
CDdy0z4XqcG40j6PWIJP4KeAgQj1tnIHBNqyPZ+wAe58+KqmYiFFLPCKyL/u
EJsDpcRZUEow3I6C+8CBFLjvvndFCtxNGzdKgbtlCNy3d2/278G9hGxN6kgT
hJsU36Y2SDUH5Zqdinge4ZyGKieB5xkuAT2pPIKUkbYjBHkUH1KsV41xl2i7
KWjrcBiAen2gEmomK6H6Cu3bJ0+BTzRv2oRQrEYoVpMo1ilPBY+J4oQLm6ag
eP+JoPiUIVozXlMM6cBxA0L0FAob8IxwTFKQcKDPl7h1oOaoqJGfwKdR+ZR1
C28jPcMzR2uZdEzAKnglrHkyxIMRnIQjpGtHBhNQOTKtSxXXS6qqwfW9b1Rr
+ZXScWbG0vCelYew3XpBk38Ptg+YvZVDzhPLLj8DyoJiVRDUiSFMWQhTHAFw
EA9HhdK8GD6N41OXQERk8sHL80mGSQWjoT58C4HkBdo68EYM4VMhxCqWEKwF
EixCaOnxEXrDqN3qV07DySAPoVKu/Cf6jEsH0eXm9GioYhLISF05XSqKID9q
uhddZT5Gvw75LmPAaEQ1Gp5OIqVqx+W8U0e2NnWoKJOlWCwUDhaMpdKPV4ad
Z72spgTAF0ecX0izSoxDwGv3GFeP3o3qnAbBBq8+Db83SfHDMb0CW1I7RVJd
e4GNj7AzgHLZseQVoy7y9CdLk0Ud+soI5lv2H3XtFItkxKc6YS2rFkmdDfVO
iZx9KuRLdWg+Al/EOSAYYu5U0YsQOI8khVmdCgss5qZgwprSgej2lRAd0CDo
o5pkfFoQ1xeDb+5QoBWBr+Zn4KHyfm3EGB+KK3CZca5kgPw2ORyL84iC+Rc3
xQsO4/fZwJTV088+Z6mLjolqlSqIVvmVRP/TcmgYgc4vZd/a+o35vg/OtAzK
Yy7/KRyiQbkuXavNPNeli/E8PqavPBsfVcRHmuygAFz+RPs8dT6ZkeiL6mJB
XBfnGOiywfUROYqRDUjj7O6+637K8O8OPDZT150Q23//XcyZt4BGpgXVK4pO
JVXERMjGBgbWLyF6nyoVYFw/XWu2uhrJMl56AVx6x3rl+Fo7FhDL6PwFdIX5
jFq+laXDAIko31+HKmFxJRQlJBKEAqIBz/xIQDxGJBCBJ1jx6Nk3d20kGjZs
KA4fPlJPgmDTn4T48KOPxchRo0WjBiU+JPBT5ApDVSUqkVg51OcLBhJRE4mO
BXhdBS6CkKlAqOe9kNRKiGjFJLWCdDWCLUbXHPOuGQ5P61RPezhe6+NGvsuj
fLfO4gt16U+SRo10sdfLiz2rAGR/eg6tHGi/H9r6G3WtpPozKJ74VE9OH9fX
ildYENU0o/UFMbxWi56zpxdQdpMgOHi8rE8J8i3pyjHy0gkJf13myNINsKCk
QI8sl1CZBt9jovGXlNz2mEIjbqAhHeBSGQQKQoPAV2Ex32SeLqGuCgGWF9/y
5dV3LJAZr5yEaWonuvx6CS0Owi9dodGxnv4Y+k9Bho4fATRcXcgeF41HjAx3
bZsi0erssxUaaewEv1M4mC/6QDioV8MfDpQTbOLToPinlwpBnpXG+UqqQmqc
tQBXjw1cHnsYvHQqFFM718cG9GLPx/h99AwuslOhYyqqUz39rF6MsOKEIuVm
KbcywY3oCJXG/saDARl043A5eRRNsIWg+LARTMZ3hpK9eTMIJocLJI6ZZjC5
/gbRqKSYcOx/em7Qv6xPzSIKTj6nZ0Oq5+TMRyl4qiChpOKYeGIjqNJCcM3A
3pFATu1SH7rO+KhTYTzESR3tpFE8nhbipLbOY1k8jGp3TPU9ZM6blk+Kl1/9
m8WoZdOfGPni+k8+FQMHDYbBYgUaKl7cojYurYIXYCryT358yKdc0u80SEj5
YpKcM6ICqUPdpK4fXPMaJE6orUKcROpUmMRD5UzVMWI24kRyjNG7+bMdqZFb
1kMA60XYkTuSg8rM57KuSPc0AGqXJ5OWBKdTAU2LUKIeet6DRpy6oFF1ce11
oxQ25TlO/f77DrHsnuU+bAKJGrF515jxxZPf2b0BzajlOlw4G4rCxwkNEhGd
UCChqDoSUFZMg2SjZmp62EBDtAgZFpN0X/li50J9OEaQ8Xk7UKNCPZ8O0Qv1
+EsL8As5fzhcOrXPi2pQowSlI6GELHjHhcUYiqi2vd+IcGNxzrRZc4VjJRXh
dkgccWoir3oFcW5BBXFbt6a+CPc2+/gqTvH4FVBl0ig2XZd0MSPhGRfB0iLU
Ehq1bIQlogWFj4pcfBTFYxJAJT6L3udqRdbXJ40oHXYs9B1DHWJlBQakyUdg
VVTXnVGOee3z4gweahABZPDuV3OgcMG4PFlct7bYuOnLfAldFZ0q95N7Tpg4
GeBrKPIBvj4ta4tlV7QSq4fL7QQA3+smeuCZmKkUeq6ZFjmuecVvTBcOrka0
0I9oXEW2zp6fZnNkYxxZfV2KSKRFhHccj2Uy3hJCfB9BKwOl7Au0CLUFHVRU
5Jre9QtTjUwpa+C4E3tXA3wnjIxVBFylRyBt9DwmQ1xdR8D9OgLWq1FJtC6o
KC5qUQtn5UMj4EtqCgKwXsJYg7MT1lGdL2xdVMZUBS4160jtTOtMSi2MhqSN
slq4hKb3iCBM8lNWdIbK4N4JdNbRpNXzY67SF4VU1m5+UqdqLncUvlFGWY0P
VEBFQS0BV0WcVxpRYCTUOTiByTjXYilvh2i65G6MpoNwWrK0aLqOz4QjCQzZ
eu6Byl41gyF10skra8gl4Y3TvLQMGEMgmN4ZLmpGF3zUBTLr9M6IAJ54umzw
Seixg+pwOgXWaR6MUBdzwCii8ItAdykygY7R4ajhBNoZNEdEqMt0dy6UPLgU
u7ji5DiGV8BRu0M9f9o3PFjKHXvApF0+H5cNHYMcAf6COlcGSqfmzZtj6ZQn
qckxAvRSoKZJIxlhzi0onxKg1zIvONqjeSeeIaqbpqMzggUm4MQstU75iD7i
LqZB1prSuQhafTEFkJkMQWZiO/CDie2BGXiE/tuuQNzcpliMOq+xuB7a6POb
Aq43tG3uiNFtm8NFwEMxpmMLMaYDNVvc0KEFvqNDS3FDp1PFmM6nydaxpZjY
oSgqJnVAviZ3LhZTupaoBkx3Rb5mdK0vpl9QJKZ1K5ENH3dFx+qKHtdVUl3f
pNvVnueqWGdEvmwOekyycslO9RS/PAKZ2lFWL7LgY6/K59FEO1kYoM8RkeBp
7XCE3VCVLfcaJV0dLOleedViNusGcsZtk6ZoRjFnqGJ4tZxketYgdJJJqBpH
4XzDNGr5NMuVb5UliU1qXyBbBzkeuKVdfXHdWfXFqHOKxIiWBWJIUR0xvGGe
GNigUFxS1EBcWlQiLi1uIC7OLRTdK+cC092rYN+jSq7oVqWuuKByPrQ80a0a
Voc9ahTDG2oUQ/HcvWax6NugubikUQvRp2FzcTE87t2whehd1ET0O+0M0a/V
OaJv41PFJU1OFb0Lm4letYrB0ItqF9vQlcC5etcqFpfUbyL6N20p+jVpKfo3
aQFvuKppMUSz4c1KxA3FtcSEvAriVmg3nlIA9UtLAKCQ4h+V5+CEky9oADrB
AgF1Y+NjeFSIipZFg5ZBEcmAYgWVtgmtBaohqFZRuZTHUWoYYMxJyUc4jmqf
T+RPBG+ehTXD5WegAJbruvV8cUFjWbeyAAp8AvhEXDnQi7R9oKbHjSMPX91W
Rdonjbp1NuRMXymfB2FBCWB653xqU8GhJ4GWb2+bJ25vU1dcfzZCNepsjJJX
n1EkBp7aQAw6rYHo36ie6FM3R/TOzRVdytUQXcrWEJ2zqotOWTXhea7oWj4n
Ii4onwMXCQ/FBRVyRNeKdaHlqr+2uAC7CyvigKx71ULRoxo1CHjYp4vu8PzC
qvVBSfVET9DPZWWriyFp5cS1TkKMiyXFgAq14T1F4sLqxaJ7dYjdICsHuhK4
wh7VS+AsxapF4I0lIIgLqjcUA5MVxFjLEjdAG10mIka7UTHWtcGIsW4E+5gj
htUvFMObY4l/VfMSGCFe3bKBuL79KeLmDo0x4kArApSKxERok7uUUJCZAQ3l
AyIiwUwjsRjZHmv9QiybCtVwsWM9rv9pyMOD6gIeXk9uj5XRRBXnIQnfN+z8
ewKVeBOoxFkZ9TnQ79ixkwI9KiO/ekVxbj5W4ioHkzKsxwxZ4Jl1XMCpA95r
gWqY3AnDgFTCqLPyxZDiGmJw/epiQEF10b9mZXFxVllxYbnKomt2FXFBdhW4
dngElHeB513LVgFVVBGdM6uITunwN6OqLbpkVYMv6lquFvJO3EeoB2oqQZQA
ZfTJriqGArtXJrJE9wp18Dh4ObxHyiIJVNcX3aoXiV5VCkTvKnlicEZFMTKW
JsZHbHETcHoLtJstXMqhafex8BIq5cJaDTHkeCpxRU+Qii16gnxGwJtAEyC9
MTRtjdoYEssk+XSr2QiiVCPRI6eJ6JXbCE7cO7chRK6LcxuKi3MaiH4lzcRV
LRqK4S0bius7nCpGQ7uhwymgjWLSx0TUisxPYA4HmC5eJRhXA5LOXk2e4GBi
SoUGPa6e5YzyVMzkDgW0mjGpnVwDmte7GdZVdweGHiV5tcWGjRtl/uAtbAnx
MUSQ240UorSC8uJhh7WGzlRBj9r07Cn8nQRfeHtbqY2RrTAtVBd982oCplVB
AxUgIkBLZoveTlwMsMqIgYBr97TyomtmpYjoklkJ7O+cWUl0yqxMf7sClV1A
LhBIXJJKjAIHS8WQSDUxNJoEJkZZOP96PZx1uBsXfeGjF8j3WRRYXJJMguSC
0aVX1QLRr3xNMTy9nBgbccR4cH+Wi0XiAXndCs8ncgMFidvLlBFXZ1QQvavW
Ayk0QA3J/AUSclhCvSAKjY5ESDwJlhCGmOtBkpdVrCN61YRoVKex6A6tZ+1G
lMAaYu6q3UhcVKuR6MkS657TFP0ht2lE9AClgUxzGkJabS4GNGsprmpWLMOR
TeHohvZUAaHOoQRy4XF9ktq0rkWy7qHcJYtdKIhxMELSSjMHDcHxr5qHgfxF
WSyq5eZyUKJJLFo9g7CAwWl2j0b3GAOwWlmueOa5F7hQ4f3jSdrn8/H6T3Dl
HcTWgDaHXBysV4a2fjCgNYxDmKFubpsvBjepA54H2qpWFcRSnrTVIa2s6Ait
S1q2uBiCRj/bFYOAsCEA/mBoA+Fx14wKEVQXMKN01hPePsCJimHw8pXw9yLI
KiA30Tm7uiVjFEQcEB6KTcWkYUpwtrjOYulFg7IT3SBPgdIiKDkQwTFiFLx6
E8nOEBycdiIpejI8vxXeawgP3i9TG0hO9AAh9i9fS4wpUyaN9FaVU1oZcZ3t
iMGZFcUQaP0r5Yg+oL0+UGSh1nrlNBUXgQZJd9BAi6DJJqIrtAug9YSGeuxV
E2Mlar0hhb9uqNGcxmAshr44hD0IfXUbi0HNmkCNVSxGntNMjO6oQl/LCIoR
Z0Pa40CgGDJhfRidFVLYwxDYWU/ncHCTU13GxHREj2L1SI/mKQxB8lTqZJUq
bSqk7uzRiCS0TFVQEMi6NqohRkIFxZJsYkhS5UncBtKSJXnPwLPNCkrOLmSK
lbhbbMi5MLqpJ65rVVcMgDTYp1I50QcU0BH00ym9LKQ4+AsN//ZIZID8ICgM
QVoHU2xBWV4K7++UVTlVixjEoA3Dtw+ntytpds2qSrVVl7I1qXjqBmlxMKgJ
dIgyjImR+JnrKH8NhdNfnFWFCu6LSHkVxFAId2Mg3I1Dc27C996Ib72F5Hcb
nATldjtlS9lj3LsF5HcVfLhndRgaX1izIRzuDqrrBtIYnF5BjLMgBY7Bc0Gu
tEiEYjTaAx/DsHc1XP4QuMzLK+WC/BqQDPvWKMJjCAe4Y1IMhiqhL4RTfA0l
2QMlWauBuAjkiuGyJ7RetRvJaOmQYntRpGwsutVpAj6W2xTKRAiXomduI9E7
p5HoW7eR6Nf0FBBmY3F182IMlxA3SzhgtsAAaZM4bRoySmGi0HCSQE4Z+OQW
0+tpdorcJrbFQZuU21JzKbRLI9GoUSMcgudKxTVXldlOrMzuIcXhUihuNLqd
h+CqMpNjvwy5IAbDwZvaAnZ5GJrKgcwyRT/gsVc8HaRTTsutS0ZZcZkThXA0
mDQwGMJaD8i6HQF/lNcVfnk5YijyNowC2FBIgZdF00RPCH9XJsuKkcDdaHz5
elLHBPjIbbLBm29TGhET4CtudRNiBkrqDgxZM+n9s+C1RbLB+xfhiZbSC3Ph
4BzZ4NkcinJ4bD60KRC5x0CEvC6jAo41oI+K60F6A6Fs6wXRbhjoDRSLmrMx
zlF9ZlPcs2UZLxt82WiLX1ElPl5JxIaBO+dnOo5tDOVn+ASLdXB2ZXE1GIIC
HpJZIRg/HXwAHFIqp3QO1SCGy9qNSZgXgV/0gJDZrUZD+EoImjioqUlhk4Jm
BOtFCCMYOi8paSEGN28irm5RIka3aylGQyqn0UV7GKC1rweBDIakneQkCk6q
TO9cIBXq0LQejylxfOnoRTheopssmxU5tlLl3ALeUvfC2nUWy/QUVRRSnp5K
mzq1TLs39RWFywyZ4qzFmLwqopcbEx3Ts0CWWSBHlxJwV4iKnTLKmxER6BtM
LGFy7pXMgjAXw4GWinu2uFaNzujZaJLSOK7sUZBT4IOz4e8d+JFZ9CZ4KO6U
DRzgTi25JdCW0rElqJvF9AIK9G7Z4IV7SNQr4PlKaAvlSZRE8bzTQRFz4Cvn
weO5pKg76SOzjUpxIn7kdsrqNxsiGytVqwQH77meVZogcTpakiRHFU7xosuo
UIoFLvQ5YhRk9qGgyqGQNfpX9sJqb8rkjXXo7Fm7oQyddVia8JxkClm8B2Zz
iJ89oBLoBu0CaN1RoiDLPlhsFjUVlzU7RQxs2kiMPLsxSRMlOgraTe1wQIzz
eBAH20Dx37G+mNwVp2OmdpUDmHo0XTulE69Hn6gmlxjTHYWV5HYC1uRpKfWj
1CXWjzTfxZuqWJeL+c6SFYPOFePrVhJXAqoXpmVoSQ6lBAwyBQfvnswU/R2X
5ejqCHktc3Yr8XOLrtEmyAbvnEDHJksFogzAEWYrXdjiLji4WDZIT4v1MRUX
EyS8KApPLOd2D78+G7/zDvrIPI6O80ly8/GFBWQS65DabHznTKoWZsBTeER/
b+GwPU0mdnp+o1SZUtgYw8kcGfJv4EcUX60aRhgtQzldhspMytvXQP2Bx67C
0JlVSQyC8NkH8juWmkqUF4G4sKTszuVlNy4xe1PMZEFCfL8Q4uYFdRrjyKcJ
fHk3GGj3zMHQCVVm7SIxxgU/qAQlRx5OMNySWw6cdtwpBeLWdiWgw7owyAYd
wmB6WucCMU1OkTulSW2xuRvxPLzH9VwltTN9dSFm6YF0y0FLlhrWhWu8unAB
R8AHrmkrpp1RIK4AoAZB65KeKXrHEzwEKSN6JtJFn1hCD0uGWl6gg5gnRsgG
x0aoAEFDhAlUVkkRTuCx6CQpuQxJe6ra0qh3TLVhi5PgbFNw8HXL6di9HCTv
UGE0oLx06tPo2ByjodKm8vsWcdxcwAFYBmWH1DfB0jMyNPSxtQYjLL3rvQTu
ic82A6N8qxSuC2Ex4lPjkKxK8NoQqCgdMQhCIzxSlaVNSdsFoTUQPbBBsYkT
ziA2HGdD74j+FWrSd40x3SNDjC4DJrgOtYF1C0Q/HIG3KBaj2jSHPN1ATIL8
TMKjVXe5wThMcHcZ8zBzaQm4ltiwcZNclbHO5pSLdxstYc15laF/f9Bcjm33
X91GzOvcRAyLuSS4QSCyi+KewIbA8ythHHwNhZoRvox6oxaV6xMVCwvYNpQ1
N0VZblBZKB0pryjpyTX1RMXgHKIP1FOOhGRr8SygFxZyPrbKawUt5NDGsVVM
t4zJGI5rt8v4TDF4amqMk2Uhi0gVhzb3qmC83icsysQ4XehJActDWT0mtdhw
ohDz8kgAeCDk4itAaN1rQYmaVhaTRpTOUpbOMhpOfAmM1C7EyhBScF9Irf2a
NBdXtDpDXNMWBsu4ytWxOQxHCnGFTEzlVT0cwuJy612BWZVnX1jLi3lWa6NS
w9s4VaXW95Q6YumAViAZVamdZ92hBAjHUDZDow7KJsJZDzPiMKN5qnFINQqL
G3lujMcELBqeZbU1WbNJD7PxzFJE8w0RJUKSoc09akbVZC72cRKUQ4JaypK4
06clh04yUx5H6cQ8OSV8cprDYryDUyKPUqT+4Js4cNHxWSypiZYxlSxnarCy
Gy89yaew61lNto5fERlKRusSD0WHuhldpkzc0MgNOEEIgwwMTj2xdIMA1Qvk
dBGMZy9pfIq4tNmpYtD5Z4khbc4U17XDyFNCk7y44X4V0LooOM0xapTSyPm8
9QFv4fpo/XpxBYSW+rWq0MYc3Py1qH/41oepSi9wyoXdW4ghx9bLVVovrk8v
YyR08FrpopkWFE00RDTxENE4IaJxQpJczEhyy6UWZHorSwJy6YRzWUTzOSil
eyqyST0zLDVs1S/EjhWt9NKDilYT5TdEUFd8+BZuY/xKUgVZDPskhzIUyiiI
NyAQOEfPWiVgIooEh6IoGBROr9owFihqJq4oKBRXnAapqs0pYkJnTEHnolAW
GvMTN3nzE/I2P6sdVz47du4Si5fdI664ciDdK4yVD96xR/f/epXPFLV7A4rs
sbUr4KQ+y8OmBMTS4CkGf5UT5YSEx0ZZKrvL67yFg/qt9L5U2dghsolhHwuR
TSxENm6IbOwQ2SQ59KxgVcyTLZtEE9O0c71OkUOJJ5M05glrlvGaEZ6cYHhS
49iZfN67lN6kT+joNZXxmKAWLGRUuslSkx0UfMbiN9yAdngKGg4j7R6gHVKQ
jQIC18IhY+9qhZQPR8Lwsk/VHNHvzNPF+J7nihWDWy8yJwsqpIkXXlzHt4Za
HVXlsmuXWAKaoe39NaByyStPtx16lct51kR1Gqhcpp1OpTI8G8yDroBCXEMh
OME51lDI2OMoxAlRSBR7NSWw0FBINEQhUVbIMkMhkRCFpLFCVlpy6DbfVEhc
E6vaLBYRK8EUSVBAvugzk9+wwB99olo9C/gNXG1FsCDCtSAOPJM4tE231PRE
Gh0PTk+o0EM6SSOdYEriaJOkaIMlzBXlqusCCb13SEa26Hv6aWLqJa3FA8M4
yshxvLrljeXSmUMMZaOP19PvpjRuKCXTt2UdulHwAT2O59t9bbH8irPFiPQ4
JqDQEGNjH2PFXG0oRs0OjjMU44Yoxg1RjIt9ImR45WAfwUMJ5IHKlEyue1EJ
qyxZ+86VdFtZJIeoTw4qMMzmQT18hfGypB9Oh8dm+FXDsnF8ry1AuSlhROht
UfqAykczvOBBs7MOHoFqe7LlVdIIxmig/aIa9UVvaPgX6e5epxHJQVHOVbMY
kp4lLj3jDDG7P/7+Q2trQcoNEOco3i8I8E6ppWplSC3lYFDt8c6p5SYzUsCg
+koVKWgCO2oQfS0T7TDR4w2inRCioyGFKk3hJUOItkNnbRaFFxnp2NsoAP4E
cwZ8pfIbYX7vMLgN5o45bGLqa07wtQw8HJHcz8TXiWH1CDwDv2dimYgYh7Pf
EOCHZVYQV+FyUJkyaiguK9dByWzRD0YmKyBeLzCqhXGdcENhC3Ho8OHaktLu
HPnx96dwzOpRalQLI+Rqxvhj+LFRSUo/hn645SUC22B7hAxQOqGZbNshbMdC
2LaxTwthOxLCdhL7sNogw2TbKBAk2y6XmPO9qC7dnFwz47jkO8FUkcEnVGFj
Bl3cLOxm0qfUqBerAFVAqYpgPId3NcMyMC1bjGx7JpT25y0wMnudcvKuEea3
l8mvkdnxpzZwL+/q4d7g8oZj+qsVPsNlEhplQm80CI2EEBoPITSCfToR6pqE
UruLPHORitoqmyOXWcaoYKVscK6VmmrFaAY+ijIBav1qvuI34NjJ0pgPfV/U
VyAuCOebwzdcu/JqSb2Ywpwr3m+V3MtaEM59oxGvh0KsvqMXcT7ft6uwhrhm
5HWK897B9Dx1OvGOPt23ZW1/eh7SetQJurXDvaECbBGUgBwGu2bVr6bZ8U5c
iyfCFdsm10adr7nOCNT2uKqTzUSrtR2TaCNXS6JjjLwqxkojOsGOqhiaI4k7
HtfGW31lIMXtpCzeZuoIcBt7783sDY6cPx0n/Qeqrnl9WuEv61jzjNR7Q4cS
0aR5C8VpX4PTJcuMOF2nnDefPUKP6q4JceWwkkvW7DHtxarh66r6ivFkmsnt
BEWrv9jK5MU0xeldsmUG6FxeCp1OSN5NM/1W+dlcpZxQOm09BXQ8/zbfVzrn
3vfOpDgk58PN1ZmbOXGZPjvO8srxKXUri1XDz5+XcgdRLbFx0yZ5v4V1mQ7V
u5niK+n2FhWqzVR8dWk+G0fq7JBRVzwwLp9Al+JRqNZbMwPDb3OGxhioyHER
r06EhOMwWlWCnU/IpqLtBtCeXwrL8RA1OMdQg3rfnOOoQXm2x7Kth+lebeIo
xlVTnjzejogl3Vsg0dqTzbuYmObLmeaPPv6YftO2YQN592tYRh56gm4clRuN
UkdO8cDIaQLBMgkPTbR4GEnXp2uqdIJTcr1ENum5so4mEtfQWR4mMB6F549z
ewj5X6Ej8n2yAYcr6K3L2K2Zs3gIFRS3YyfA+fwT4PxO+X3HzfA8qvJxPtmy
vNXiAOc3ItaScxxMTcmt5ONcDpzkr0sy51cw5xi98a5n/Ell5P0UGDjhgHmh
l5Gtwcd0bQBT5V8sr6/x8UzTRMQ1Vlu38w7EKJYYcEK1wCfXauTgconlrVir
wng1Bt2H6CNPwtNnZYOTP0vHnofna2WDr12L53qZXngFDr4E7UWC8kU6/zr5
XDf84JN4rifoUp6UYhIPQnvAkrnfNYLNvGMwaMuEO4/HyGE6KPWFQGl3LIGo
Fa5ZlIs8gXDol8PTCMV92gOq4z41B4YjHBLm+sZhDUSL5s3FoUOHakqFDNL5
/QAE/7vFgCuu1Pn9slPqiNXDzjXvuRvAIsF1oGBgMGu2qEwHVyGsNyid+EzE
wkTNLC1UwpDoc0kt50NscmVH3A8H/wLtMWiP4PvXINsP04eegmNPQwOJQCB4
HmfmX6IX1jH168jMdWiX9wIK6jmy9Wk69lepQRQF1rfUo0BUcUg5x+WoHxh5
JbUoSi0P6NWw0KEYV4udsyyu5Xh30BxLL00apPuTvREPVDh4gAdlr7z6msVk
D1WZfvducdfSu8WIwVeKtsXV8OebKQUsu/Isnen7G3dXXpOZ8MJBTMb8oZba
7nKNYcct9C7p95NZrTKuyx5hw3W4+y1mNoERO8Lh+lHmGNuj0kUlxxGkmCl6
nonOwD6b+VQ+LoPDOvzESzpqqEgSNSLJc0x+hHqb3oMS+qv6HpbVahkhEE/y
NJShuXStRoyyjpDZQZG7QEYRSitm5adKTHp/mhEXwthXC0u3qKnHuB6Zm640
ztYePzd43xeM0FgAV7EA3vvwYzEFcwH/AsZZeeVSaoBLlKvDsQXdmoshrs2u
7gTX7yJyL+hw7EbShY1l3aodRvNU2nQ4rqptdfdReFul/Nw2NQBn+4s+huH6
YSP/PyXJUn8zkdUsIt0x1YAthoKwWRAvGIKIYZ8mnkGLpTSe4TM+ZflF96iO
Czo6UM66y+KZnwhnj/neRcMxT/TBemKBFag1lQ7uNOJ+gnpXRwFsE834L/df
q+LAE4MXDeb6hnbFoikM7VgMI4zQj8WBEgSGfhyuL+x/hjmrerG62wvzSJ2K
xoJdVOsBSwNVBo7UC0myFJzmeYTcCWTJiZJVsslI4ISowAlRQYx6V6vAUIIM
DBlGoGc5wLOgGNYFxZCOCkhyQniGX32GrvQZX5yQAvmrT4qPyMBmc8C439ID
UZk7mPZjDUVihjzuKEUFRkTQIeGW0JBgy5Aw7Pw5gf1DfB9XDSmEkYYQFnMN
gP/lAgphco/mYtkVZ5lj/J50srgODINtkgFtI1Lkj9K7F8bi5XgLb+ri07z6
ikr7VQSIEQdWsdf9hVDxFPAwK8ClPupTgKGCdBRBeqAMWEtMrOUC0TVSBFMt
U0QGPq0YEMGzRLg/SpjJAktKVT1EAlFCz/UEAkSp5SUPJOb5FCDXcM3tcxwL
pAhioWFgMoYBiOZzjYEh7gPCn9pk+q/npLB79x4qAWVSqKSTAlYFahG2O50m
RtyPq0Or9jQgvJq/+iYy5Ea63vHSOrqy+eGM+3zeZDzBjD9iMG4b1R6zzS7o
HXueZPQ8flsq9S72rlkGvhBKfQ5S74Q4vG1kBHZ2sOABlRcU33IiOcITFUja
DG4z8WtmcXnPWVC5cpQXpJUbKwZvTsbEvVecrbP6cDnvindzM4E3KP89gIH8
IzFl+kzRoKRI1KtZSVxyKozy+p3Bozz60cGuRmJfiIndjnA9J7eP3CS5ZB7l
MslkS60sppIYx94NITGNw7ci8SH5mov4hVV0ceyTIRVdNIW4dUzcMz7iSshn
46bPqgBu8mhz3DZcFkmM0HQBTQbpBfU7LbVKMIO3Zivq1P4bb6kwRs8VbfS3
DPh5q0IYLbWx5hjDMHVzDwzD5G/LWON8FH7sC8G4H09RyCFY/4b70NZifO0K
FH5VDr4JMZTMYQbhOBLqfjHsoyHMZbD7rZHPCa9SaYthnwihLYa9g1zF+dXn
DH+jkisTn56CxMgES4N98mYYqONYL4I2SSWRju7ltoJDq9pZo8rnm4ksNVQK
cadbMpPi3oHnzDVGSbgpZe26l/h3fqybmIvde/bwkPgKzcWkHs2C6bA9c7Fi
4DliRCLKu2flsOhmvHR/NJwtOQlzpGiQjgclBvBmL/89JrHRA5eUaGiHUORS
L+PdS7JpV0phjI+ts4xxczwkYHoEnuoRKL/3MTbckRQ+waU8xXP44oc8z6Jl
qNukH9EkMcUbLhbm+HzHvyWEybpVJS8gC2uXBsVFckRTtxytIyNZKnm1ZaaW
DzhLjEh6TF0nqTGZus3SszRhTLnYx0KYSnDIU/XrUxKvCOOPmL6qOSmFLIff
vNYgywlJZwmuZwyysCVCQiS5VZb2NZupwnj4OFsexT5K3kZZmYbp2Jawh6kd
QrxrGq5JEmU4lTUTEXb5P/JA2HE+8qxzWyu2bjPC3AcffiSmzphJjBUCY5eq
TDVcZ6rWxjT0zLMLeQ5CZqrRlpep4hzvplh6X0MobQ728RDaokiWDDUuIfIs
84FYv2ApAl3C+hVuCLCeOXJCiLRDiLRDiEyGeF1aSMS0/SyqCuUJw+Fcj0VH
r04yk7QhLUJT6lGalGX4TFdT83v8n7IQk9nMp/mz69n84+O4oZMGFfS/7Mke
/9O7CRc2EXVrVBGffvZ5NUn9JJN6KFJkVK3qz3DDdYY7W1EPIpp2Wp6P+nEG
9TQNBpetwutUQwJpIXMNhEoiRAJOwHORyOfwO1/0wqfBPrzwivJVMwaH6SAS
ooNIiA7SjqEDFXh1UZqND1ugDlw++GQw8MIxNZP2qMX6jlAIplJa6QJOsJRi
/90c9NS9HLTomiU9+zQtjNZaGI7xX4mpY0k+hh6cIhZImosHtCKZZFNvk1jw
N/5PzylrlaXepv8XrznIoka1KmAb9raoXaMq/Srkli1bLFbUVA79ezj0Dxhw
RWnDVqsVj1swSV+bGdehHycsWE6+cQuuY0yTAS89REUknSQLaqWnorAwgsyp
GYhYiJBsFtJaSxeonpBcU0gqIukgYqbu9IB4XtLiccxUILOR0k9z/MZoSDY4
If0s8+lH7ndFlCZbahOpLJPntqoHg402wC+QUP5Y0QTYWgLJ2YsmMDa+7HSx
qN/p9CypjkGsuKh5LZ9o8H8BLYBRKygAzleTRIPxpVnTJmLajFnwPuxt+s8Z
V6y6H1UDV469jXW44H9WVSmuGfQnKuuKpbKuKITxFNUV3ZtFUOCW/38eOJXL
i5U4Y54e0xrDNbPxGHRkkkLPmh5IUqa2IqitNHqY0NpSs+JPsQpeYpZfoHeV
Jiqbio2XLLXO8RQxaypqrReJTDFlhIgpPZCR5KyYUlIzlE88JCPZXnRVSsJm
s47w6Up59T4dLZGx3LJZRxPLptF/t4RCyTL+2z38/zLnXkLx5BKUBv4XoDhp
UZo0HJZGQa1qojinGj1LKrlUr0q/7RmUyyeffkZCKctyOXjwoJZLCymXWZzd
DujCZhZJRmW3Bb7CpnVLc269a1MxjObWZXbDapRncnRhMzVFM46pGVRMOikm
RmCuNkLPy4ZS0kKUEmWlqDz2pKWq0ihlFM6DahkNP5ttqEPlM6kOWSAZoYbq
lrL4qKkpkCeNUHMCAuFCBt60FDW3jF5YypiY0WZK1BEX51ck3jOZ/TNyyxIN
yDH2VeFYg5JiMW3mLGxwNdjbyDftWkOOHWYavX/X7j30LA37/pLuO41iBqMD
ph78H14V3YFdUc1UMTOijZhxVj2eOvfqWEW3Wczcypd3rFCRxpyvYidaxVy9
zClHjs6f0wWEcm/byyLib7LB+/6mj3nDBm9Mvs6LOplG7cKnBSzWqVHKMfJN
ExRBwhgo+kXgzzduSKlimwq4u5R8M7nPJcDpHRAnJLPIEDK5Z89e8uG9cAwd
VfnwZEnqvEA9cTmQqkO+f9wPF+JNwNyYW5EmYDDW4x6JG5TfunqRexq3uQaR
OIG72DIGJjGaSaSrJmyQwbegvUGB4HX6EDwW70J7jz70Hh37EJ5/Ihu87xM6
9ik8/0w2eN9ndOwLeL5BNqBwgz72Pp8vwed7MyWPOEpNqsWQxyTy2Fg/MiqI
x0+AUVU8pDA6nyO/YhRLsacul7uX5H9+bS3k5KwibQkn51aSKZWc7zOScwkX
gJiczbE/Jmec9Byvoi0tVLGfqW0gctE/ru6V0E1tVsDreZpTK7vQy7LBMW+T
Crra2+S2H6Cvv08vfAQHP5UNvuFTOobMfSEbnOALOobMbZQNhL2Rjm3iYxvo
sx6jn8sGzz4n6z/1FCLWQ3uTzvuGZltVCC72jpwh+CtPp6aHhOzIMbg1Ezr9
bA/tv+L9qzOkt1LDxYvZtWo9Kim9KzSB1g8k0PNVAi0y16BkAqUJ0AClUQ6r
KqBOk9oiO+Z7m06WcuxcaXlbex+0ApUvX++zHC8drK0S7CRvsRu9T+T8+8Rm
M7EbjPdlUO/SZz812id0dD29/2N4/pFs8ps5LLzJ4UORba53qsWs5yxvgYOG
G3XCaH88hPZHjk97jHLVLIN2DIeTs7LE93//u3LnpYH1x8sHDKBs2gK4vyQ1
m9L/lFZBTTLJIYTv/4J7dFQHccdZhb40i3cv4EDvRjp2o5q+iuvt79jUfDn6
9T0W7zPyqPeVtOaqNOa5V4mq/z05rKfU8jGqvXRN/B2ev86asLl/TTq/N8MU
poly+DQjJMyHaSJKvUM765Z6zeVAMJedUCkCp3I+XLmSxXAP/YnLLLxUiqF+
rUq+CV0Qg/rf73D+ALc0QwO4sLfF7L6nifMLK4rT6mQDJNhDFQgf7101m28p
HkokXG/pXyXQd75MtfTN/RGO/Wq5Adu9HBHS/1P2Y/8DdFdBjmP4MMr8vvPv
8uviU5rLh4dPePyqSQ0wOmzeyJ+15V3rXtZ+5OKLxZ9Hj1prJLMr6I9L4R2L
7ZKi+pS1z8wtC2KRNOXUqELDMGg4iq+OxXrtmjXETbdMENNnzQbcsY+L6dNn
isGZWRTzsfa6hmmcZFBne3dUuLRWdK/R/mtIzD8BEh0zcGMjBmPe5I1rxmnN
WYI5Wy7jMrHlclheFAjLmI3vrFlTHPX4WkV/ZKn8/gcfEvI29zPvuFNs/ekn
sXcvltTYy/9EXJXU6ezF4o8/xLgaNYijUZacV8MRDd+PHPtvZ6fp8SKqmWXt
kJLK5l5tMnkqEDPXcMyMheTRqJFCZ3NcUil0fu3a4hDAzly9R39i4q177hFD
ypShKX0Mabcz3ndYat/78cF+9n8L7LOPB7byDG/+XQKrBE+LjA5tG5VbRzgD
pSCp6lBcMJoEcK2///4gku8uXky72tXOquMhuSKA5GMsglf+N5DshPBF8GEE
xxrwSfxaNZiMUJ8gKI1tkhpKFMFyjhcRvXLECwQY6GcyfNNYjO/Mnx+E770l
Swg+tVf1WPAtZ6Ye+2+Br4uET37De+zhbyrfdtAQiHo4Fn+N/eUxS+9N1Pcz
8AhX/7DLNIYA/86rV49S48P/F1CLM3avM1h637XcMpDQ6OG8pfqVpWmss3m1
aomDe/b830QKqzWafpO7PWKUQlBjmCLUPqWbIYB9dN99/3cRivL+3actvVlQ
7w/CMLX+gQf+t8D55L8EnLgG5yHLy1cYmR7r3Rsj0UMn8UnFh+5Wger1zz/+
OIlPKfjck5v7X4KPg72Dh2I8+2nOeP8/DhIt48VostklU98z2gd0rR9aas5J
zQ872Nvia3phCxz8HtoPdLYf6NhWeP4NtC8J8i/pmJp0RjgjDKo56RzH3uEZ
Lpxt/lg2VZT+NyIalwMHb6oPp+tfIzP+RsfehucfMpIO9x+yWlhlmYzjdxJD
QtDBPoIwwgs/wcHt0HZQsvqdjsFjfITH4QTb6Rg+/w3aPwngf9IxfP6TJAjq
pe/pQr7l72bg2QdI/h/hr3v+V6GNRTHfwumbU/XmEeWiEc494VjkRYv3Xlly
1vpzduMoL3OgAjfJJjUJr2xkQECn4itom6F9jcrfQm9CvH6UDXD6kcxDon6R
nCgu4MK2Y7j4HQ3YQZ/czoz8Rkb9hgte2/mRLbbRd/8ML281Gn7RFvwGKYrN
ljlpL9fozBGui30zPGQzZW+HUJay+/Z/lDK6P4/uVpN3K+rfUkAvwQVJ414q
cpA3eWHBpQGRdHaODlYa9a4Ot+gV30pMALivNChb+FiiVJJsImgnOw65RxTh
z8JHdghD6diT49jiV32Cn2SDF35Cin9G47bSl+ArP7OJX+PhLVphalnVKY2y
fJOyvxuUxZiytxg3faPC/xhlsyye54zwPcZLLf3TF3R6dRM9KgaXI99WBiXY
NhzAfsA+RHxF2Lk+Z2J+pK/4gS72Gz72Fbev6VJSSbO5/41J20nwKdIy8ZET
QlqadKZSSMvA3kaWYnhcPtSv2twbJGoWN5wIi5X//2XxRmYRh7eLLW/JEc+m
5gNVjMTnGCPlmPlZHbmVhckQLpPIpW1w+RVz43JSUlxygIyyBxo0UmBEPJGj
XYb/uUigi4cz5KNUKpPYO6VRmY59uX+HSnjsj6GU5xL/CXdqKH3vMbhLEHdq
mw7Ok+OwCSd3cOcVr3vx/K3ju/XodbzaVHoSSI8TQk+Mqy688G8kPcD511yc
wUdMgn7BAzvxko5LSAL7KBISCSEkDfscRDyOx6PMACcwYsApLYtFkAGb942Y
GetEwb/vuOC/D+DfZln65+4WMfirQsB/+l8E/wsD/GQA/K8JfC++bWUwCXSj
cvtdOYWDmKfLSJfKQRz7WGkcJLFvjBxwnfizbHDmn/F8W1MoiXA1juZjSf+2
osCy1XqEMdf7nxMBg08ggnfW61/TWeIREZG39kkiMGo9YenZvowQIuJIhBtC
RAYnHEXE914UkuDHNdpp+CgWgnYM+3hpaCewb4LIZuGjCD6isQ58jkc7uqFV
6KPrCUspfMwfGGkwqfLvS8ipTPvfABbGsIsXy5lOS605y18swx0osig2kFVb
UJ6TnIdJPIbIRkOQzTRGdQANp+adCIhCNImP4iGIRrFPlIZoHPumiGM2PXd1
DlHh6h/0XV/hS5stVazjCOojBvMN6bMRb0sz1ZwPBWCc78FoBXD89L77xCzb
9uGI99+rlRlz2KG2Kji87Pa0B2kopmRvLATTdE6pPzIaP0tsw6JEXBas2xnv
hFfPapRd7NN4zAcw4+DCA7jZ8QBOcGG9yTLXzmgc+CG9/IEEmdBFGLCyV0sV
y8NRPbJ/v1heo4b3X3BY3n99tUapM4BqxAgDj/PXlSLWUoFN4zCw1YuGClyJ
bpqGk4BNQzhJpelapYRaC8PRaTQu69N/WLqWhY95A5IvpC5lcQFn+ID1+TZf
x0N87ctDffnIoUPirsqVfWjNZ4AlJo9afJegQouaUebR/s63CAEPrvcZLhfh
Mrf6fc1wJdi3DR3KMgo+wr6u2w6LE1UE0aOpiPQQ9GJ4opZ4jkzSHKUhNbVB
X7RV6i5uwPdZAL435MVo+J5iX14B8B1NgQ+OiLUDB/Kvwkn4ELon2IWdUsUm
b9R/h6FLN8oPREnOUm1EmDzoNjN0cSMsqrzrcL9NwqWgy9CoUdmVga+Rz2Zo
1Kh+OsVE7cdw1JSzrjec1aE+qQPjaxwYET0c/D/JPrvaJ773VQCEDK1+cEmJ
b6mBnsvFkim+NXzWVwPBz0SOZvnSDOR4iovHE1J0CrkYS0+htsPiUR8nFBUN
KfBl4ssOAphlBD3fYOBUDaVjfBt7L3ybBPHLIIgq4qHjrOOohyj+jTWIyfUh
ObVv+WCEUcn69WJh2bK0EqkKnUUSRnj1UYtvF9W/R/OYB9+/hJ66HrPeiwfQ
+70U9CLYZ+HbaKSdHYIeTXScForeNyFxbwM7riNL+tLRQzVhJn57+HAh/vwz
iN6fR4+Ke2rWpBsJ1R7qRTK6wdVJGZrovSwjHkPnmNBhSw8BLhIiuyT2NF9H
80KymlFwYcvG12jKriznEAMsbKfjGTJYeEak833dDyHIqZDn091HjNiLIehh
RNviLdi+zwX2kcOHxT1FRT7k8PH9Er04R8C/sOe+JIELk1wGgUa5Qk3pq8QA
r3kKU2oqi31Zrkd46plACtPVGSZORmw7Lk6fMk62qbCPGB8TJ4x4OI5e4Tji
u4cfVjh9wGFu/YIFVC+bP7H1gMSIs6tMEhgweeJb51ITJUqjrrGehvraSsB5
kxDbZANhb/M55k5CZydOZezSsP0qG4jxVz3Y+8lEjEb4YTGLBtKOgclrIZhg
kfpk7dri6KFDfkxi4gPAZLrl/d4axq6V7HUKDxQN1hfvWDw+d439agiKHJbJ
GfUtTOL39Ox7FbD1tdtGgbsb2n466X46tg+e/wHtKGF0lI79Cc+FbHBM0LGD
8HyfbCCUfQjAfp5+N8pfGRbV+CIIo2MWu9jcQOh6kcFUIFKV1aiRufvmg5DA
r0C81weivDnnaT4dj7PhqBx3o9h4wQsI/Vhn9x/Zm+I8ckLv8i0nWLSKgBcv
DtD5DuAXemAeZjCzsI8gluXQ7gQ+dRjMP+V76H0Og46fQ5D3Ejm7dBb5hUXt
sqjNGTiqX3LxUHqIj1PGjzLyRvBD5KOEfFwjjw2j+1sG8puXLVvjBx3zxd1G
vkDQMUDKe1UfVfVdXP/4Cca/Jz0pE+/rvamE1IUheQVqRS2No/826ewk6AOo
q/34Vfvo/YcMLDOwtzXmWKSyvP8gPP7Qx/6UDWj5k44dYfQPEvqH8BoO0gtA
B82p7qIT7FLepGNNFPu4nidN15KXnqiHLY7Bw6ceD25ICjK5QG9YLbmwAmQE
UxCSgStBD1tq12q6xl9NtKnflFE3CL7CnGyQJCSNdfdvLTXZ/0+6dJVWkIft
LP50JMIOISJdqr0UIpwQIpIhRCgODrFbHSJDDuILh/AsB+lcB/gTB2SLHZOk
yAmQ5I/20ZDkpxh6kyH8S4UKYucXXyiGPmSG1i9cSMlPFad3sWPJ35RYR1/l
v/9M3pL5MuuDtz4cixUVDU6IlTTs3dJYsbGP4KH00riIEAX0Rv1CFvY2v3BQ
skTPotjHmMIDx3WjX9QinwwB38umhy3HoulDywtoZj42HQnV/3Ru7iMmQ3Hx
HqRiHIXhJAGOdNXqKd+MrX5JCU/ygSQDMPiCZ6YDlCSJkqgZoE1a0pAVJ4SV
JPbRY7IS8BXiJ6FxjyBR2SY/7CwePylOVAo1NvZqJV1FXUmKRw3S8KUiwJLT
2t5MjD+jB3MLJQPM6DCUC3jLL598Iu7PyiIO7mc+MI88bfl/Jwmd7jNFhOXf
XRVjXjDKYsCSmfyfFteE5hDC5zJJJMdlcg5YXklEaTtmkvOnQU5Eu0yUXUYY
NLmaJod5OWrwkmn6TYpDGYQdJMbVWWyDtf2yyVIMvglLhR+Mhj6DteHn7Cey
yvlAFfRxKoKCLGGMw3mzzUuX+pwlgQNI8VhxMS0iKIIeYU6f5xAWCxAldxal
EhU17ordZhKl6vltxvXFZam5T0OlXCeu2SmPhnoRLB5CB6UjU/QqUCkSjvCZ
NeCB90WM9yliSmUxk0/AdSKpLEq9jJI7pUJlhcklzneW3nshl4zSCR/ek0Xl
KdZmvOXGl8QfwOHXmjXM2Ef0xxWfzJlDoe1+bg/QVTylGVI/COEarL1hqd1J
qay5IazFeNhZ2srwPssYcMRDSIxpwohE8ilbH4vgMfIkykBRhvpPg4O0Y3D6
h+FxGSZXJon0QtIgZ4e8Pjmw4V0n31k6Kdlybvo7i6dyadOCut9F/Z4DppG/
5uSIo4cPWz5aEuKfMHZZnkyatNA8F9YGvAFEpx4knfflhDqSE0JJlCkxIp68
iBOlJIp9IoSSRIhf2SHVgh1CiRviZsmQ9zk6p4U5YZivpR+bP1k8MH9wbXJf
Hs6r8a8uqH2kFA+Rtyd4spF5+5irhVcGDNB749R/cYDB7wlJeRhl5EUqK5lD
GydktsYN4SiKfSKEIxf7pOZIFtXqVf0auY8TwlDEwJarNjnwYefi98r8VQqT
R4NO6KZQZ4a/BPUxscfSsy/UfpYhj/wpytMX6FWbpGdZNsejjzn2rR82DHOR
j5yE2L5hg3YqVToEnUplp08MhmhSyQ2p59yQwGYytJcZcrFPMkOHrcDIPl3X
DvQ0TZMS5jaRELBjhtsICbgeGJnvi4a41/HIO2i+L4PnM/YZ1Gxjp4kgKoqb
byxvH3eEuUEvwvpubSQifn3sMf6hiPX0xxGvDhpES5fIzWo8xRMpKcj80cx3
mRraP++EUOOEUKP2wphlHRVGaSE1N11+RrCs86YRZPlmRDnlE77IpvwmYUD6
J0MaDXlfPMS/YiHvi0o3OurFR9ONkqXw9J3iyT2GD6HysV54p2FDzEw+nlzx
1UMPibvKlNEl+JN0SknWU6WQ9QaTFcfeDiHLDslGsRCy6CrTQ8giJDKPSZbn
UWGZJxFwoSMBftT74oH3BfkJutrhoEtmsupMarbiOw1Wvi3Fe1D0a6GK+/nB
B//iZwVX9VcXFtLeiAcCrKgVe2/6wKu9NStyg4kqGejxN5Ic4iZ5bDIckwxs
WaVRkampiMhHnngVdGlG+lYQOyEukDRcRUUz9xiUHQ2hbJ/hNGkBZthhiA7H
8JevS/GXN6pXx6l8ZuYTZmbjvfeKxbb83yPWHMNf7BB/SXD2MZnhIk7fSWDG
t3gISxHENuMYLJU3ZhRUvZYh3UTWDCoLME4ZAWUfNegxaUwGPOXwcehR5zM9
z4xpGSw6XLX4kWOZ4TUJdc+EbugxWHHjRM3GIUNocTNADrrNvRUrktvgMPWp
gNs8FwhmL1v6FhEmx3Mbo7rGv+khg9TMwOwBQp1dGgeep7DGD/JZsgL+cdgK
L9XSDf9QurePQdRR43ymv6lljAz2Dzz/75YeihIHtuEfmwP+gTzQXf6ZcP1f
ffWYnwJcL3j58stphxyv+lkOU2D+IGEkhIIk188m/L96i5mqRt5nQL83FPpy
JtaHWHSH6GMymCtxKh4Yl8yQrBGRs2wHPALCPMUMPCawGHi+DQk8hrg5Jcg7
dbHY3Th0qPW4RPVTXlP9HSrdpWlp/Iu2nqBVleuEVLlJHjoimmoZPmrc6/SL
Ze6lkRsG1RDE4dWtwxIEAiLOxZC5VJibgvZhA+0srj7/8AAj9R00XjNUqljQ
NJgKjoQoOItDyC8eyBJl3p6q1tbDFPyGUvDmzYz1Z1y5vgxDPlQvD/Uc3lhi
iFevp7wn4Yav825oVKN0VRfhbNxP0sXkPRaWtyq7m8zZTcf2sBwRxvZG/OBZ
C7DgsAqujk+/B1D5EkylWwX0AQNM4yMaTFO1mQwmetQOBpO2tEOvwMS/xt2D
KFiEZdNVV1lP+EFEwS7LyqJpxSdV+R8nzT5p+eexMAK8Iz3eNTZ0qyVN21gN
QG/aSzjuwbPt9l0YQtYtpESJ6lVZy5thldnrsIqWjllNYMsKSFAWpfuV5hy9
SMhQSaRsjdQ3loLJP1Da9vjjAaQwYK4uKqKV7CfUjXZx/ZvlGBBwcQNrRb7D
ESVH29aiBjToA3so+EhUdvG1IB6DSkOFJaP8k2fO/MCYUtunrp8GwCRhAwOf
XH5gV/gkZCDSoIH489AhxuFz+pMpNq5YIRbAQORJy5vqxAvnn1qiv+hvvPpD
Z/tObfCVEy272KXSQzAYWyoGUbpuFoVO2Qc4uabzNO4eSy+ZUONbb22Ddx4k
+8LMu8w7lPhPmtcLwB84INZAiY+7FdROBYd+RjRKzz+0vA3Y30pVpRnXupOv
VfG9zwgf00tdgHXNuQeV+UBzu7GTq0GYKv7BCo7w1X3vkZnKJi7tHD7MV/cF
X93XwOZ9lrc77TX65OsUx17jK/6Ar/Ary9vLkjQkvS0gaTNCzqc+pieFVaLi
iV/ehPdzik9GPEHK+IXV5A+LFllP+e0/euSIeKt/fyrxX5HXYNl8yzFfD13D
+9Id5ezw994+3+PZP4/6hJ4X4OJNX4eaxN5uqT0odA+R2riltgTCa/LHY1U6
2/vFF+pSNnCA2blxo3iiZk31y5hR5gKtX2+ppGmY/pPlJad0w3QOhdZcw5PY
dMs2kow6prbOoNk83ydn0JWqvmJssd75q7R5I9u8ZeVKgv4FabPLNsND2jIh
g8333t7g43m/slnB6p90lhvW9c667/jubUvO636Qno5Vgt9EqZB3QSFPemZq
bD+3vNVs27TzNykJn51sI1l4p+G5/qkHWUXtZjN/kE7K4UdGXHTQ9yDU/Dhu
3NPS1E2M5i5QwPO1alG1+LxC0yE0MaJusbg+/d6/RULpN02Ghz2WGmkoEc8O
sTbmZRAqLVLDibR2E3/550VFz0hrv2RgvwXu1QaWl9j1HDb5df7kZouj7/fh
WTCJJtts8l7D5DsMk9XSeILlcIBZY3OVtfgU56E/BB3s/+wzn7VRnFET62G8
g/n6Gc9iM1ZsYIPV/dTfcayIhoiXihrHMFx53axSDU/qEdwPnvGqHqYkxKp4
Vlr+FVu+B1Sxrnp1SkCG5RHD1zA6y7vZNhMUX1u+RTE35AJi2Lt8AbsNF5xp
hI3gBeDznex9vxgXoYTyvhTKc/ICNvMF7P7kE7GuWjV9AS/7LwADBYdKy+b+
Gyt1m4npk1SMxwzrD7D1MwJB77C2Po2s32PpXbl0Qs43Wjyf5uSI/Z9/bvEl
fM1a371+vXgJPPNp6ZkURGy235CNtp/lk1IYK1cl+xMhup9Wqv22tt9bm3b1
As1n7KbbV6+2npe2b+HVlx8hxT/J0LPtlBZN4bhs99chdpt5hiqQZIjdU0/Q
bpdX2JBwrCt+GDwYl/MCJv8JMXvDyJFUWAfNZrkA+/IGuG8s/84KFjlZmmYo
5HDAUrXKLGeIPUv3BixFhDFPfAn0H9q8+QVp6Te8MwatfCrEyg10VmnhFssb
4v7AHrQHYdzLgTowOJpsJEFlocISvXS7Za5Tyv0Jm9jCg198sVZa+C1b+MV1
12kc17KFHzDtJFd5V3JUO7K6HWCHxfOOcgx6yGB7UiBGhFn4a8BCmiySFr4o
LfyOnWs9ZGczLL9PQvtGpU0tSDMOo3FyouigtkThNzEkgsWPYx3hB74P1q0z
rYuLvRB+X4LwqzZAv8PhihmVvyJDd4VQbOWhulpk/cOwa5LBa3C94kCIXb+y
XTj/tHP16pekXd8zr3shqn5QUqLHXjiC2SKjARsVI+S2sab38F82UC9AHk6x
0DUHJNSOqHey3+z0WUp3bukk9suYMbRAz+b+wDDC0ENsAWd5lWHEmv5LSwbe
75AfWYNtZUul33pxRlkdC+GbrFa7vI7ym3dYfHePnMxRG8U9M8eOfUVauJUB
Ret4CEGQo2A3M6AxNu87Poue3AiY55RmnmuYt8cy7hnGso8d7gtp1qvSrJ8Y
uG333Sfegez5FschNXfFwLmGZb+wZTKxuGqWUM9OI41T8Nxq18EfIdaoAgUv
/bcxY/4mrfmZS9S9kAj/Dtbw9Iba6Icy5ZztW7PZZanS1MPqEOMyxXBTNU9O
g1t5TwRtRSVrvmGPA2us16Q5v/B8K5rzMThBcC8b5zFty2+eE0h0IgSUHI4f
9Rnk6D1gPIVgMzDb2ZRvIYjtWb36dWnJNgYG68sfQUH8u2C2Man7D0ut1Hsa
383GxAIi2mf5t88HY9pRpnOXAitigPUzXzlaeAgGmG9IE//JYO0EJX0NYMmf
LJNLXF9KgZu5KUXYcg3LW0JRNt3OeP1h6eliCe0uOomCUFn1fePGaNWb0qjf
1LQa4PbLqFFiIwyKNW6uSaKKYHJoQ8SpTTdHDGtuDQxy9ltq/pT2KOoJoR1s
Eup7O8QqceTIW9Kk3zkfHfz8c/HTsGHKJB6/e0se/7B0NFVr4ubY8GaGRZVC
+yWEDi+U7g1R9d+lATsZEzJgyBDl7jbPXavppL2Wt8NFbW45ahgwnqO4OWex
X/MorTjE50DOtwIxIGjrHWnFbjUfAXLZAnLhre4R/t0wLAd5/y5dByMRDxHt
uEAhc1CJ28QC2f0hO1vsGDsWf+bceldasYdFi/pgSzQJXzKF22TMi/BNONsN
fLwFkn0pAfkG6r3pRDUXxZ+L8CYRtR61nQ3cfvXV4vCGDfI2Q2sfD27Ivvvv
F19BUETf3yLhkb9nllS3CBFi2/2IKU6QI2lSZso0k2GWWl8km1DEKIftV12F
NsltwNYBJeAvvtAC/lZ+OSYSlbA1UPvoP63X+HgTQrIm2c+27tPH5HQ6LXuD
ZvauXi13eFmHWDIHQLjb4Iu3ZWXJmwbkTj8Fwi90IvlrRdt8wWWv1o5aho3r
pXBaLc8IJAt8dnbIUDvC41U17a0WXJXSfqpZE+1Gr+dNHNYRNv7wRx+JX0Dv
fP96gsdZvxlqsuWmpQM6+KgZam8vehxPGeFdzWiVqqGO4q2h6rViw/Q/ArAr
zvdYvJTBpeBW1OCIEeLwpk1yudH6w6itdj/8sPgNoP8O/08Y9g92U4evRN2E
f9DyVpEOWuZ2naMMsWugreq/iDEO8G2yt7z1c0GaF5aa8TUn7I94OACl3vnV
t1cIHPPusEiYN+Bpd6A4riDZsIHn6y3BQ0iU4s6VK0mOP+TmUrjd6sfFUj/B
oiYQzO0O5m7BdA0MT+8ZuLBfeLW0wiZqYKMUq7Z2BD4fBm3w5hJhsbaMwK5g
OVIKFWmeFm1z1l1+oe3dqhfVI4Tt7N8/g38f/uyzDQaoNj1OE0cPHhS7QG07
ly0T3zZs6EP3F4msXj3ODPEV11vnS+iVU3U5Ruymv7LQTkXX1fcTcAFiSCyC
T9yQD8Woj5uUUAvQoTZrHLGCyzJ+Nt1S6Digag45yUZVx2+s1m1Nmoh9Dz1E
mW6jAW6UXRlv5Dh66JAE+O67xfcA8HeZ9ItDcnZ3L1etXJ8poKNGXjf3RR5V
V8K1LnsQ30jkqOUpNeYyy+IDplgCwUyD782jyBDmVY6qwqVThrFh663rxlmk
lA9od+DlL+1hJidRVsLRkGsmDdBUscN1ktqQoBYIaRawbl2xE9L6PggUEEMQ
/S8NUpKs+D+BlAOffSZ2rlol40l+vvgJSFG/QqJuWdpm8Q+U8TCKk6ec49Y/
V6t/JFXhzpqXXsjz24c8v4jw9MoBjyaijX8D16SQM6mr6wXVjijxwnmMiS+d
JtUquY801oGiIGJwyDQYd1nBhZvR/pDl9+W9fDu2zfdDHbAsX8z5J/jGr+gb
y5eL/Y88gimNZwMlFZmq3Dp6VBwCKvYBFTuHDhXbgIpf8/NdfIApDmKR+gVN
9QtFKi7J28Tlj1oEcFOXu8s7zPs9XK2VHZ52LNv4bQzjVCR8ugOfxxzmSqHS
3l75/ojxy8XqK5UATPYOe2HO8DR8Iw+HdmjLPfI8L1RpzeaopIjejngDdjtQ
/YAlq/9bA/Jy2MWEOHoUcx8E/QMQt/avWoUcQu/Q5+CROCQbOCe9eBjyws4G
DcTvwAhUe/n5UfwmLEDh+5Cgn6Sr6HqYf6CFRrIO/z4dIq5SNZXT9CMQ27UP
bTfa7waEriFcjkJyKpi3BhxMZcJhJkw/oqknKgzkdIH+DP3UB0SN30Cre0Gr
iBv+BMKPBnD11NAFwgbqFRGMUw+Z/8ABsR9wROwOrloVQcxAfQScwhPRjWBP
h5DIJUvEr8XFpPEI9Qkibzu0ndB2Q9sDbT+0fXz8N/KHHdA74rdkUu+s/ZFd
wrI1D9IxtuuwpUbKe7OzHTwfWgBnPAhSOUKmYR8Vh8FUeCTNli6LEvrZQOI8
RgKzmjCRoP2HGOLfe48+v4/OKMV1gCV1WH+XTd91FEY1EkTodxnfQv/6njxw
8sDJAycPnDxw8sDJAycPnDzw/+wBq8z/B2fGLBc=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["A"], "Input",
 CellChangeTimes->{3.690309227034073*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
jWP/H+vYG54=
   "], {
    {RGBColor[0, 1, 0], Opacity[0.8], EdgeForm[None], 
     StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwt1mdwVkUUxvG7LyVAChAI0mdCiwriSEADoSSEKpBAAKUHEkIN4AiIEFoK
LWgCSknoEECkq+MHC6ADKEUJoIBSFLBgm7GPoyj4P7PPh9/ckt3N2bO7576x
mTPSp4eCIPgFleAQ0n0RSrASL+IFFCMXT6IH+mAOkrEIi5GHSZiByVihsWyc
AuSjUPfpSEWa+vbGAwTQB/V1baL7nqiHGDyFoXgazTEAsZhG//GYgIE8D0I6
UtUmDas1H5vLs8jBdCzAfCxEKTajDC9jPdbofhyysAW7sBXl2IBN6jtRc++o
eDohGxkYi4aaT4xi3qAY9mAHdmImZmE2MjVmlsZZqzkew1G8h3fwLo5go9qs
w6vYi304gP04iGH87+EYgSx0QWckIBMd9X4axmMvliIXC1GOeViOfcjDfhSh
UDmfi34ow0FsxG4cwlYcwHqUwjbiFEzGYizSmEswSus4Gsu07iWKLQeTUKy+
KzBG80rBM+iBfBQotpXI1rxak4t4tAl8DGswA10VTzd8x8FowPUbrolcuytX
Nn6S2oxEW7RCBjqgPRrjR/p96/yebIlmiMNgtMBUjZmMv2n3ENc/9b+iEIl4
VEc1VEY7VEFNxVBLMXfS2sVrTS2G1viH8f5CDbUJx6NwIX/o54f8eemPMF6F
oxqqoDKq4jg+xInAn6OTeAnncQkXcFrvP9A+/Fjn4hPdn9M4VltW4Sau4jqu
4SI+xWXcwBV0J+7eSEEd9EBd9EEa+mIwGqMR0tEfqc6fzYs6U/V5jlbfBrjN
u1uKf7PO8lmd9zLdV+AjnS+rk2/hd/yGP/Cz3v8Kx5j/cb2Hu7iPf9Xezunb
em85PKVcWfsz6Enfbkhy/lxbvV2OKJ5jUNP5/NRwPlfVnM+55acS92GojHBU
QVXnc273lk/Lm/WNcL5vJKo737dCazdAue2FWIxAM4xECzS3GGmXFPiab/Xt
MbSz+NEr8DXc6vlADLIx0T/wdb49EtEh8N8Fq1fLkGJrHPhvSgfn82Yfo65c
EgJfP0cHvvaOQaTlBTVRG7UQjSZojKY2X9RFDAYH/lszBPXQV32trsYrnn5o
qHEiUN1yrTV9AiF0QbLFhZYYi1YYo1wN1z4cjSHIRhu0xlRMwkRkqW8GHtH7
tmo/BROcz0NHPK78Z2IU4pzfc7bfwrVnIhRbmNY0UTEnaPyHrabgK5sj1691
piK1r2wvWxvbz3GK+UGbA7VgQch/Nw9jD7ZZ/eRvQzXH07bPcAZzMRvPYQPO
YyNylbcU1Z+qql1h+Ix3V/C5zYPnq7Zf1bcCW3EZ23DB+fYXlcNNGI+ZylUn
rMcWlKrvJsXwA97E67a/nK+lVve2K+eTNb713ex8bFGqt1ZjI1Qz7YzkO19b
7Mwu0Hk5gWN4HyUowyqcwz3N5b5yZfHXZqybXL/EIbyBw4rxNcWZqHx2xhEc
x1Hl2drMU985eN753051Uce+oc7XzL76X/bbKRoneV6t2CzPthaXtEaLMB+3
nB/ntnJr48/CXZzVWtscbZ/bnrTfM/Z9bKRv5R18j2vYjV3aJ2Val1ewE+XO
x7kEedoDttYWT4Fyu1DxfIEbWkf7nv7k/LfVfh82DfnzZWPmKJd3lE/bh+uw
1vlzavcZisHG3IM1OKU22xXzDhRprQs1F1uv6xiGYufPu+03O5vj8D8nHkS9

         "]], Polygon3DBox[CompressedData["
1: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

         "]], Polygon3DBox[CompressedData["
1:eJxF1ndsVlUYx/FzLwWNoEhRKJtiYlvKMohCQaEMAQdIBa1VG0RAcWBcjKKm
yCwo26KiIDLKEBRQ4gAKOHHGmLgrjqpVFBdi3H5/nl/iH5/ct+c977lnPM9z
mj3mxqKJaQhhCupjfBLCQ1iJ5bgSm+mwDmtRjul4mPY1WIvrcDVm0L4RVXgU
M/Eg7auS2F99xuIB2pdiCe7HCmzw7/T71Rofveh7C27FTTgDpcxxERZiHkqw
0nPTHNdjFYrpeylKkI32yKVvN3RFIxyHa2lfjUe8bq1/gee3DNqcCZhL37tx
Dy5HMTLQAq3QAQ1CHOddvIe3PGaJ51qBObgYN9M+CbehN3ribEzBZK+7ABdh
JEahDVrrXJjPYixCJe5L4zhTUYZ+6JPEuS7GEoz2vJfjVbyGl7HM9PklPOf9
PYyf8DOewVP4gDFr8DGqfP6/0P4jfsCz2I2NtB/EJ/gQ6/AX7QnPFG/w+RXs
8fhHcBR7vT+7PNbTmOWnxv8eh/AkbvC4631+EzyvT/EZNmEDfqfv3yG+/wBe
xJuox3cZiSYV9+ILni3Yx5Y4GZ87tqs8zkRcn8S90LyrQ4yJ2d5LjfMPjz+8
l1uwFdtRhqmaN32+wbc4jJ3KL9qX+gy076U+r0rci3E+uyLMwEy/c6T2gHku
dBzMx1jcxZjzUIEiDEN/v1/zmIaB2O+9eMExssA5pfN/Hvsw398f8HlVem7v
MOb7SYyHNc7tybRPCrGO9EUhvqP9a3yFHXjC598A9fF2+D8W9HwdK/yeL/n+
kPdrO7b6rBVPHznHlGuPe/y6JJ7hFgzHbMxCOYa67qj+XIPOyNPvQsyptjp7
xQ5/d3UsqS6MQz46+jddkhinitcT2eumOCmNMVfjPd+LfajGXJzp/O7jdWv9
hZiG253vynuN0xxZqHUMt0S7JNauOt5Zi23YjE3ea+15Hr/piFwcUU7ifD6P
wIXogPZpzG/F55/4zec8kPbBGOL3a01HtV6enZCPX7WHPM/BIOdIKxxD+1me
f4HzqZn7qG8hMtNYN6ud3/sda9m0X4BhOA/tNG6ItVQ1tQkyQ2zXu5SbdY4n
xUVr/m7rdSmfutM3H51xOnromcS6qjNQ7VEdyPBcdbf0cP6rTjXxXI9PY3zp
HNqk8T2KxVqfoWprXzT0eWZ6nf3R278/gWGz0BzN0DjEsYZ4r8/13FWr78Qd
GOSxc5N4547BZTgF2R4rK0431EPPEO+y09ALBSHeG485J5QHujcb0t7F+5KD
Y53bqtOqsxXOc8XPFbgEoxxL25JYs3Z6nmXOvf/WqPNPYx424tk4jTlR47qg
PNP/BaqZ3Zw7o3GVc1H5dyo6Oc/Ge925jr1ilKDUcajaqvPS/wDdkxjD/Wgf
kMYYbur3K6dUZ3Z4L5RfuqPy/a6cJN5Xqu+q84pXnf1BzyfP+a67T3eg7pwc
z0tnoftHtUg1SfujO1f3uO6p6SjHcIzAHNp3Yw92JbEm/Qt2KSDe
         "]], 
        Polygon3DBox[CompressedData["
1:eJwt1PtLk1Ecx/HzrDLvC00IiqDSfgoCS/CSSzdvXTZrk8Jbq22mlrqI+qFs
TqfdoQtd1GkJXaB/JKikrLXZHfo/gur95Xx/ePE8POd+zuc82yLx4JjLGFOL
PHx2jPkHw0cHf3h/h+u838AUkjiG4zhC1U60ow3lqEAhbcqxEWX4zbefiNBm
CMM4Aw/qkKMsn3oFWI81+MS3xzzTWMAiogjjAGUdaEYTSuDGL5RS7kaJY/v8
wrcN8KEFB3EIZTjK2Fcwjmu4iiDu0O4hHjl2DifQjX7cxT3cx210oZE2UcQw
gDD2Yo+sGVGcQj92oUr2TsfqQy92IoEJXMYlBNCJdYxRhGLH7u0P+sjiI+9Z
5LCKJd2rAhlb51CD3S57pvspa0UbWvSMpM8EpjGDFPxap5s2KczgFm6iBxlj
5yBn+h2v8AKTSOIiLqBVsxHGAE4jhjpUw0tfZzGCUd3DffgqOeCZ77JrkUxm
kMd7IYpQjG+69sP0lcAEUphGAE8lR9pWsv0Wc7p2WWNA2mKTZrUCHZIvtMOr
WerRDEj2TqIK2xHBrPY5r9nok9ww9gIWkcaorv0NZR+w4tizS2vGpM5z3cNn
OI8x/KVsrZy/y649q23fy13VDGS0rYw1r2uUO7uM15rVEG27NEt+7ECl3kH5
AcRxDj7JCAbpa076wyweaIafSOaMvZsrWNY6MV2jzHkEHtSjkrF7dU/k7oSw
Wfd2ElNIYhw+vbNefW+We6X/hGrmVKv/inrNgOxJXM4YSzo3mfOwsXU8upYm
uDUzpWjQjDXqHZGMvaTNqrH/ipyuUfpswJD2Oah3uQZb4NeMBRHCVvwHiQyM
eQ==
         "]]}],
      Lighting->Automatic]}, {}, {}, {}, {}, {}, {}},
   VertexNormals->CompressedData["
1:eJyNW2dUVVcTtQW7BhVbYizYu4ga61hiEntBwUJREYkN7AgYFQUrIBEs2Esi
KjY0BkV0xI4KKigEQaVXgRiDPfFz5ex5a90b3lpffuSutxn2ORffnTuz95ym
01zHOpUrU6bMqU//K//p2szngVnrr4r5s6N+e+v/c4e/3xD3i/e5X7nBrh6r
TkQWs09Gncq1p0dy3cqZLxqPO8Wx40d67OtUzJV8Wr4b8SqK46/ExEbb3WDh
MQHPMMVDwhOg5SHhqQKeR4qH7OPeHi6bU8xVX299N2vDTmpCp261u3Ka16ed
Mq0yo5jHnb54ukzJQbp7tkW5451vscSnvdLEk8QPRHysiqf0/KQu+z2L+buy
XYa8m3OVnrwIXuM15hwL/o0Wp5jAeMtGVXP52D2PL79/nMkDNhcEjNofwS+2
rzpkG5/PURfMFjRtk8ZLthw9l9n2PFuajzAZUiaP3R2+de8ZlM63A6bOmjcu
hmN1PMMVDxnhIQvweILnkeKhScdKorqY5nKjzTb7a3ZLYcuLtk8b2j5jq0LT
gGcN87m2V956/yWPOOlUk+N9Wz/lSX/Ui6gcmsOvQ6bN5oxH3Kqwe9RI33Tu
2bBNSNc9eRwW7Opjef0Zt4uOKQ71fMRuNtGL4+s95xaVF1VzsE/kLZbbH7WO
j2dLl+K6Vj8WcrXB26fNKkzk6TWeVzd5EPEf3Fnh9DX4fwN/K8VPS8HfEvwB
ip9scV+NcV/t1X3ReNxXHdxXnLovkvt6hftqqe6LgkfEH9/gUMBVzJwsHFyv
8UVT//Ep657xgoAF2+eG5PKmG8Oi57td57/+OOYQeCKDH/w82KpOfCHbZPSp
fHnhdX406EbOjYCHHAd8LPBYhdNO8FcE/2+KnxaC31fLTxdH5jQwv1TA9Yu+
Pz15agjN3/DjXdOrz3jeZKeWJiW5/PJhcHT/iYfpx70nLT3fZLB/6oJt27oV
8ZqgnIBNVY7Q+z/TGzVKfcgBwL2B/6VwYvDXBv9sxU9G+KlP1uW6PT/ks7vb
5Sqre8dSnT7/DE/PesoX7pg73BmYy4Mv/lrisfIe5Q5LsrswNoNDjg0oHNCr
kD3ej3U76n6fjuR6v2nf+SHH9ru+aNn6Iu5aa9+dWTcfUMKcugVn+0UacAvg
SQqnw+BZCp6Diof66fZTQ+2HIrCfb7X7oaqOX73on/Lp3zHIL31z40S6GLJt
3aiVqbzt4xctRw0s4KlV6yel3E6mY65R//x8KY5/b2a/vOKnv8PcPNc7lX2e
0JGo8AchtZN5a48en62f/JzzXhSWm/pnCiX/uHL4n1fOG8MpWMcfovgN+9mF
/ZxX+6EkrLsE6wardal13TKFhw7k8sGSJg6TS9LI13HNFycXxnOWd7nw2tvy
OOLoWscORelk3W1urdjBEZypw60UTm3BcwA8axQPRSKP/IW8YoO8dAR55z7y
UAvksQXIL5K3av+k8pXwlGh56KiOpzPymJ6nvuIhi0m/f7HgaBpf3jfOvOfi
LN7qO8x1bPgzvorPHfBzwS/MvjfN83Ean8W1+Z6GF/MPZ3BGj1h/22kZPK3N
Ede51XL4mylRyasPPOKZ+JyLn9cHnqWLJ4XTDHwuwM/rAO+KfURhXwFqP3QN
nzvj577AI7C/cFxbqH3S/PI7CpeHp3HLVhMdAg+nsP/02mePu2XznpfbPs/d
m8m+r4e18TVN4Hq7toZNTsjiSnsq9D/3IZXb1Kz26+DQR9xjYMXpoz59n4Sn
DXh8FQ8Jjz946ioeqgyeVloeer41f9Mfp7I4N9Vm2Tv76+ze9HGXH/Ky2XJW
vzYuV9L4WNnCiole1/jDsaGVTBrncwHiM7XxJPEh2nhyOuPr7Po6i73tXMvH
dT9Mh7Zu7uD4dQ63PWh/ftmrNP6y47GZR7uH0M7GeU7O8/NZ4jdo46kN4ttp
46n59PBNPQZm8euIleGH8u/RjemnPHv7ZvPajpcKU9ek8RiX1PmnsmNpQPFI
y3kH8lji32rjSeKttPG0qUq5PkPWp7Pf+JKNLsGJFNZnsIn9oBy2jT4d4jYm
mx97dr0ZsuIpNTS71uxokzRe3Di595glGRxb6dxBd7OnlGSyo9Mrt0yejPgc
xJupePIHv7+Wn5aA576Wh0qKP5u97tN7wPqse42YJukU+Nfgkqlfp3HQ+8Qp
P7lk8wfTQYFvF2fS8pjcB/V6POSLbvvX2UZncq9teZ2tkzMo1bVJy5ONUti+
/4zpG1fkcLO2+9v1XpxFE1tH3K9Q5sJ/cBuF0xbw/w1+N8VPH7GfwdhPsNoP
RWPdNlg3V61Lj0cVnQz0y+LRzXufmL08i943LDenCcfzl+/n2UzfnM1lbZOb
+c7/9H1qG2PeZmgENwL+cbLCuyvcwDMGPCWKh6xRB1ijLtiHOscWdcNk1BEl
kaouosOqPnBAvVAV9Y/UN1LvbEOd8wvqFUvULxNQF9VEfSP1zgzUP9VLx0n4
3cHvizonBPzdwD8CdZHc1wTc11bUOfa4LzvcV6G6L5L7stfeF61DXghBnvgc
eUbykTvyyhrkpebIF58jf3RF/llbOg811/GsRV5qUToPWS4b7epy/NPfB9cT
q32Shgwu4G743FWL054p3iPCQpPYoUGDjhbdbnHVSrGjl5x4zoLbanH6vt6w
fJvdiVyzosvHGSZnOLh97JXAXwr51DzP5eV3JvP1Tumz/NP2U/OxYZ91T3rO
6yPXOc7s+JDr2+QkLny4h0a82/XcfFIRfweeSuDZoXjoJHjuaXloDXiqgmek
4qEHi9t6NWqeyBvPjHQ8/CKK2g8KOpi7vJD7jXap1L/7Y360fIlPhbn3adfr
vw9sLv+cJX6dNp4I8QmI363iycJiVVKJQyrbW7G/p08KfUhan2bjlcMT+rVe
mfLHY/ZcP3d1i72/k7u/tYfTkHyWeAdtPEm8B+I9VDy9eGZaNePvp/xD9JQs
i2NP6XrQgcor5uRwyZauo+uYZfChjU329XifTnPMag7LHpnG0S/fR3/tnMZj
n03wWjwijfLoTN9J6zO57FYVH4T4BSqe/gT/TC0/GeEhq0ENq16plMG4Uke3
1Ye2j0jjVT3OT+npncUr1ZXm5tyJ2xMbz3POm57qPSVTrrSk5WHruw+T+eoj
t5kLvLI5Rl1pQyubGuwTYcBjgW9WOHmBfzX4Zyh+GoX92GE/rdV+6AesuxTr
Tlfrkn6fc7DPm1g3Gutuwn70uL+R/ThhP7vTVV/dBH32/IqqTw8+ovrw9ujL
j6xTfX0F9Nu/o/8ug/59b+k8tK10HjLCQxvR/0i/JX2WCfql7eifrqAvm4z+
6j76rYfovwSXPkz6r8rg2QGeS+i//Epfl8JQr3RF/fI36hyphwpR7yxFXWQE
N8ZDq5GPApGfqiFf+QDfrMVp4E937G+Nu8ljmxRXs5sWx+XtzCfY1itiW3xu
jp8L7tfqwPbuza9xIK4P8x4822JRzMIzTMtDE/G5oZaHVuP3l+GaoHiowZbU
SNOc6+ywstWIrJU7ycM5f18H72KuALw/cE+F0wwrv7lLr8ax3bsvn3mtvEsD
wotf7b9cyJtc26elbo3mwQls+Xft69SzQ9KPi3KL2BnxE7Xx5IN4C8T3UvF0
+WyfDa0sH7Dplo8WscX36c3lk9/EHyjk/c5uTQPNE7hS2WcVOhU8ophZOQ0K
XhawxNfUxpPEV0b8XRVPSf2uPhkR+5R/V1f6PNvk+4/zcvhIgPef+TeSeL+6
0lCTMyFdR+Tz49LjyUg8ZSE+EfHVwG8sj31v9/Lj55PTeKC6UvSvmzq0XpfJ
oxFvq8szObr9gJ+G6HhuKx4ar1u3A9aVfOL1f+ZPfV5aj3x1A/ht4KuQr1bp
+J2Rr8bo7qsV7msm1l2MdZ2QP5HveIUufyKPS/4mb+xHjy/Hfrx1eXi67Af6
oOiFF6Er/gw9UfTFKtAhfykdp9E6nkjojYXQX1yhxyyHzmMOvSYS+o0bdKFd
0HdEBxL9Zy9w0YFeQv9pC55L4IG+REVY10W7LrVHfyX9mfRlXujHZqA/kz5u
Vek4dQBPOy0PJaNOuoS6qQnqrmmoq35AnbUZdZoV6qdg1FPDUI8Jz0UtDzmC
xwk8gajTxoInEDzDUY9tR/76CvnMHfltNnDJc5LfgncfdPvBMYh34Do+5U+3
yx+K2Rmf7XEdp3C6OGjW26suEZwU53ruhynnafND8+GHQovZH3go8ECF0/nI
lxRl8oDPqCt5W1m51zv06b03YF61Fd43OVldqe6el9/tzy5iiT+tjafbiI9G
fH0VT78h/hTifcBfvn7c8INlE/h1vX+v1Geh32vLVwUs8Se18STxb7TxlFd6
/uFfkA8PIB8OQ/40Ek+HSo838Ovz50TkDeQPaoc8NlHVi3xb1Y+UjvpT8t5k
xLdAnjHCT5PAgzqUMlB/7lX1q9SzNAN1L/pSRp9Kr9HndlH9MN9W/THdRz+O
/lb6XeqF/lePoy8mK/Ang78Q/e9u7McE+3FEXd0Z697DulHox6EX8DbV39NC
6AbNVf/PdkoPoJHQBwSHTkDjoA/oeeZCH+gNv0T8kzvwU4zg1AN67nnou3nQ
mRdA/xV9ugF0aXfoxYegH4dCfxZ9WfTmJ9CfjeDkCR7RoX+B/rwI6/bFurWg
PxvZJ42FfrQRelJf6E5/QW9qBf3pKnSqEuAttThZlc5D0jeGoy/sgv7xPvrA
AegL0Q8aw8kXPL+CxwJ9ZTfUW4Gov1B38WDUZ1KvDUJdJ7iTFqd24PECT2/U
bwnId+HIf5IPDwNfC1zyYRn8Z8Y1RlnVDeijPv3BgjvGTrxt2spXcGp5vXjs
npzzXEdd6UqNpC9OfuJ/c03hmepKVxVOYchvuNIa5MNE5M+HunwbpsuHiKcY
xF/9P/NtLVV38mZVh1Is6lWJP6HLt6alx9N81Scz+nKKQj+OPp+tVR8v/Tsb
iadlpcfTeKULcC+lE9Ab6AnDld7HFf74V/+jjdAhbyq9kr2Ufklx0D+HIr4y
4tdCJ7QGf0/wv4X+IDwrtTyUpPRTtlN6KjWA7rpf+RwM34PWwTdxVv6K+DwU
Bn8nUvkl4p/QN/BT9PhQ+CnwY7gd+L3hpzzDfuyxnzrQdV2wbjLW3Q9/x1b5
Q7xd+UUUBh8KfpL4S/QMfpMRnOzBA9+JjsJv8ofPJL6T+F8z4TOJ7yQ+12T4
VeJfncF+8uFvid+Vqt2PAdfth3BffBz7mYd18XfgXfg7/IR9Vsc+xRfzhg6+
A7p4KPT2u9DBf4Qu/hDfqzTo6aKv18f3IRu46PTy73KndB7DusHadckd+pe1
6Gd4jvBcEJ4LxvfWGG7gsdHyUDn0peHoU9+jny2LvnQn+tT7yA9GcCoPnrNa
HkpDPnqC/CR5LBT5JRL5RupMwSOAS/5JAM8d8NRDfkO+JeRb1uVbQr5lybcq
j4+OdFJ5O1Kfz71euU35rvkGwSldvRc4VL0XDPXzWeAewOV90VD9Hfik+jvQ
W/w9e6v3Efup95HoCSzxx7Xx1Bnx7oiX99cQ9b4T3YLkPRin3rPcX71nRY/l
oYifro0niSdtPK1S30Perb6HdBTf/2GqHmB/VQ+Q1BVG4slIPGWqeoM7qnqD
LqEO2aCeR0beIEbe6KrqHL6k6hzKRD0Gf53x/NIFPL/C30HLT5Y6nizUS6iv
GPUV1dLWdYy6jo5r6zqZI6A8bV1nwNNR1y0DD+YUDHMFmCdgwrpVUdeJX94G
/rk/3iOX4K+nw28fg/eFEVzeFwYevI9oFHyyMuo9yH54b6I+p5vwzVLQF4jf
Fgj/TXy9FvDnUJ/zaNTnLYHbAh+F+vwf8IiP5476vBPWjcG6segL8H4nE+xz
A97XqB8MPoDUG9bQ5dFncRb6rF3Q90Xvn4n+aAfwisCd0KcY4aEFunWvoG7Z
i/7wKPpF0eXS0b+JPlcdfWJa6TjtA0+olkfyI/2KfLgaefIf9L1/qytLv2wE
N/CEafOt1I2Uos2rhv7/hDYPG/DjwKX+vAIe9Pss9WcY8mMK8qXkz1XAoT8Y
6u0zSr8gL1xF31iFz4O0OC1ROsmnPPqvTmLQh4cB/xikcNFP1qu+g9G/kPQv
85U+w/5KnyHoM+KT8RnES5+yAPHrEA+fjvKULsS/KV2IzKEvdVN6FHdRehRt
g66lj28GHclIPLkrvYtnK72L9kMHK1B6Gi9Qehp5QsfzKD1edD99PPVQeh1j
LowWQfc7rPQ9mf+iD9D90EfLfCIlob+epPRGmYsk6I3cRxcfj777GPihH5Lo
hw7g2QCec9At+2KfmC8jF+iK55X+KXOX9Bl00cjScRoF/x46Bn+ATvIP/P7G
8P87avUQ+gp4B+ghwpMCnlfQQ0TXFn1ddPXZ0JFFz14KHVv0aNG/Rfe+A734
OvRj6Nh8F/g1LS6/b9CnxR90Ft0c686Ajg3fkOAbsuj5ychX4huI3vUNdPzv
oOvfgi8g9yv6luj5o43wG+GhlNLXpYPIk4eRJ4cg30p8AeIrY5+C52lxA88R
LQ9Jn3xWl/d2oO+Fv8PSL+8sHTfwnNHVsRtRz32H+k58qPOo/+qgHhRfKQI4
/CaW+nAleLqCR/ypusiDi5D/JB+WAT4CuORDX+W30U+4PoJ/54XPHriKHzdB
6dvkoPRtCoJO3l/5eTRG+Xsk/uAq5TPSFuUzksxLTASPLXi2QCcfAJ6h4KkA
f1B4grQ8hHkv6q18T3oD/9QITonKP6W/lH9K8+Greit/luDPUgl8YX38Avit
PqXHE+ZuZc6XouAjT1J+McEvpgfwkd95/+tT013lU9Nb+N0TdPHR8Jf18e/g
a8N3JvjOdAG+c6DyzelL5ZvTUszJG8FJn39ctPMABB+NN2jnASjaSP5Zpcs/
Y43kh7nIS3PFZ0M+xO/TSl0+1O8nwMh+/I3kQyddPvTAulN1+dBel6/EJ3iK
fFIDeeYmdPnx0OlzUX9K3hN/oD3udzjwacBbgt8Iz3/WrYk8ZiN6GfQz0dlE
X3OG3iZzMkZwmbfR84ifTvboIwei38S8ECWij5R+sy/wBC1u4LHR8tAt1E+E
emoQ6q441FtSf8mckuBrtThdB087LY/MG5A58orkJR/knfLIQ37IY7uRX+yQ
byRfWYOnPngkL60Gz3sTxeOPPCY8tloewjwZYb6MZN7MAp8ttTg1U3NrZKbm
1qgL5t+alo7TCjUXR8fUXBzVwHxdTzWPR1PVPB5VwZyhly6+OuboeiF+ijae
bNQcIGG+kfZgvhHnJWiJmickmVfcouZzqJWaz6GzOL+DeUXqquYSaTHmFYN0
8eE4p4M5RsIcIy3BHGNzrItzG+SHOcYJ2Ock7DMI84r6PDAT+eQK8gbmrNgH
+URw8e03Ip+I378WPI7IJ6/VHBqFwgebjn4zCr5XX/hgt9Bfi382Fn5akXYe
lTCPyu1Rf+px1KVSdxp48lF/xmLd9lg3Hv11Ofhzwdgn5uVkfo+mQhd/D13R
HTr4PejiCdA/P6j5W8I8sPTpjL6dvgUegP5deGK1PMbWJT/oR5ijNvhZm6E3
YS6aT0CnCgTur8XJFzyjtDxUhL4rBX2YGfo16bs6ow+Tfk3wFlqcCsGTruUx
1B9Sj0h9IvhhLU7V8Dy3xvPdHc97VeCttDg1VfOu5KHmXWkd5mYX4nML/Bzz
+RypzgPQRVy/xPkF4fHE72H+lozwkBEemqDmgclezQNTMeacO6nzCXRHnVcg
T5ynOKDmjQnzxmSFeeZMdf5BzkOQJc5NuKlzHNRFneOgBjgPgrlo6g6eoZhb
ztLxdMJ5CiM8hDltmor952CeGedE6Db274ZzFtfVORQqUudQaBHOsxjBSfxp
8avnQ08Tn1v87ZHaeXgDLnradvBAn+PZ0NOmwAdKgC+EOX9+DB9oFnyhQ/Bf
oA8a/KW10BvFf7oAP2q49ryPAR+pPe9j4PGC3vgU68L/4e3wXxyxz0Tssxb8
kfbQbYuh4zL04Ujotn2g42ZDB64G/Re+E0dCN64B3A/4OejDF8HTQ8tjWDdP
uy7NgW6yEDrKPugtOL9GT6CjyPk4zFHRbeAy1yT6i5OWh16ir3iCPmMh+hGc
1yPpS6QfERzn+EjmSIUnBTzSp/yM9zrm5akW6gE7vNdfqPOJ1AL1gC3wEuDN
8d43wkM38TzI87Ecz7U8/7XxPHXGOdDZeA5z8FzWxHPdG89tKJ7jtsgDOGdK
y/G8RuK8Ks5VEc5JURU8173AcxI8cq6zM3hWgCcK51VvYf/dsP+leK6nYP9m
2H8bnPc8rc6X0S11vowa4ZzaTXw+g583Ax5Werzhs8SbAxdfVvzVE/BDt8F/
zYUfm6I9D0ji0z7Rngc08ByBH4r5FYPvYQa/Q/wJnH/ko/A7YuBnfA1/43f4
HXr8sfYcJYl/ojtHaVhXzlGKztgUet5C6I2boAMehy74DnpjBnTDr6EjPoXe
KDqjE/TCGOiNEt8T8anQG0VnPAJ+Oa8qPM7guQe9UXTGitjnHOiN0ueXR/+N
eW85t0vW6OPl3C7OlVN1NZ9Ocj5d8GrAE9DXS/8/Djz3oAPswrqfY91w9Pvj
UO9WR/2bjPoc54gM9fJW1OdSf9dGfe2IOhzz9GSLenwI6napv00RL+ep9fEj
ULfjfBGZY92fUJ/j3DTh3DTFoz4vxPvyJt6fs/A+FfwG8Jl4nzpAz50IfVfO
4ws+SYtTY+gddaB/mEEPMYLT/wAr3qFB
    "]],
  BoxRatios->{1, 1, 1},
  Boxed->False,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->600,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]]},
  PlotRange->{{-4, 4}, {-4, 4}, {-4, 4}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.1645694931387722`, -1.3264953316762365`, 2.8868993800774656`},
  
  ViewVertical->{-0.08810046990792711, 0.4001686405036121, 
   0.9121969997536131}]], "Output",
 CellChangeTimes->{3.6903092273554697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"InCyl", "[", 
   RowBox[{
   "x0_", ",", "y0_", ",", "z0_", ",", "a0_", ",", "b0_", ",", "c0_", ",", 
    "x_", ",", "y_", ",", "z_", ",", "L_", ",", "R_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v0", "=", 
     RowBox[{"{", 
      RowBox[{"x0", ",", "y0", ",", "z0"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"hv", "=", 
     RowBox[{"v0", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"L", "/", "2"}], ")"}], "*", 
       RowBox[{"{", 
        RowBox[{"a0", ",", "b0", ",", "c0"}], "}"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"xv", "=", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"dv", "=", 
     RowBox[{"xv", "-", "hv"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"rv", "=", 
     RowBox[{"{", 
      RowBox[{"a0", ",", "b0", ",", "c0"}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"hv2", "=", 
     RowBox[{"hv", "+", 
      RowBox[{"L", "*", "rv"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"dv2", "=", 
     RowBox[{"xv", "-", "hv2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"proj2", "=", 
     RowBox[{"dv2", ".", "rv"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"proj", "=", 
     RowBox[{"dv", ".", "rv"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"norm", "=", 
     RowBox[{
      RowBox[{"Norm", "[", "dv", "]"}], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"ArcCos", "[", 
        RowBox[{
         RowBox[{"dv", ".", "rv"}], "/", 
         RowBox[{"Norm", "[", "dv", "]"}]}], "]"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"proj", ">=", "0"}], "&&", 
         RowBox[{"proj", "<=", "L"}], "&&", 
         RowBox[{"norm", "<=", "R"}]}], ")"}], "||", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"proj", "\[LessEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"Norm", "[", "dv", "]"}], "\[LessEqual]", "R"}]}], ")"}], "||",
        "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"proj2", "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{"Norm", "[", "dv2", "]"}], "\[LessEqual]", "R"}]}], ")"}]}],
       ",", "1", ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"-", "0.6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RegionPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"InCyl", "[", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", "0", ",", "x", ",",
         "y", ",", "z", ",", "0", ",", "1"}], "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "40"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Green", ",", 
        RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.690310608635017*^9, 3.6903106159793663`*^9}, {
   3.6903106809581833`*^9, 3.6903107051003857`*^9}, 3.690310748642456*^9, {
   3.6903107948887*^9, 3.690310806144664*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ilim"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Invalid integration variable or limit(s) in \
\[NoBreak]\\!\\(ImplicitRegion[\\(\\(\\(\\(\\(\\(If[\\(\\(\\(\\(\\(\\((\\(\\(\
\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) + \\(\
\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\) \
\[GreaterEqual] 0\\)\\) && \\(\\(\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\) \[LessEqual] 0\\)\\) && \
\\(\\(\\(\\(\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\
\\\\ \\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\) \
\[LessEqual] 1\\)\\))\\)\\) || \\(\\((\\(\\(\\(\\(\\(\\(Times[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Times[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\) \[LessEqual] 0\\)\\) && \
\\(\\(\\@\\(Plus[\\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\)]\\) \
\[LessEqual] 1\\)\\))\\)\\) || \\(\\((\\(\\(\\(\\(\\(\\(Times[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Times[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\) \[GreaterEqual] 0\\)\\) \
&& \\(\\(\\@\\(Plus[\\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\)]\\) \
\[LessEqual] 1\\)\\))\\)\\)\\)\\), 1, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\({x, y, z}\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \\\"NIntegrate::ilim\
\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.690310706898291*^9, 3.690310751779657*^9, 
  3.690310796655779*^9}],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{"1", ",", "R"}], "]"}]], "Output",
 CellChangeTimes->{3.690310619221681*^9, 3.6903107069094877`*^9, 
  3.6903107517939787`*^9, 3.6903107966608477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RR", "=", 
   RowBox[{"ImplicitRegion", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"InCyl", "[", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", "0", ",", "x", ",",
         "y", ",", "z", ",", "1", ",", "1"}], "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{"1", ",", "RR"}], "]"}]}], "Input",
 CellChangeTimes->{{3.690310773095439*^9, 3.690310835408197*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ilim"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Invalid integration variable or limit(s) in \
\[NoBreak]\\!\\(ImplicitRegion[\\(\\(\\(\\(\\(\\(If[\\(\\(\\(\\(\\(\\((\\(\\(\
\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) + \\(\
\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\) \
\[GreaterEqual] 0\\)\\) && \\(\\(\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\) \[LessEqual] 1\\)\\) && \
\\(\\(\\(\\(\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\
\\\\ \\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\) \
\[LessEqual] 1\\)\\))\\)\\) || \\(\\((\\(\\(\\(\\(\\(\\(Times[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Times[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\) \[LessEqual] 0\\)\\) && \
\\(\\(\\@\\(Plus[\\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\)]\\) \
\[LessEqual] 1\\)\\))\\)\\) || \\(\\((\\(\\(\\(\\(\\(\\(Times[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) + \\(\\(Times[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\) \[GreaterEqual] 0\\)\\) \
&& \\(\\(\\@\\(Plus[\\(\\(\[LeftSkeleton] 3 \[RightSkeleton]\\)\\)]\\) \
\[LessEqual] 1\\)\\))\\)\\)\\)\\), 1, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\({x, y, z}\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \\\"NIntegrate::ilim\
\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.690310807984221*^9, 3.690310835885301*^9}}],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{"1", ",", "RR"}], "]"}]], "Output",
 CellChangeTimes->{3.690310835888406*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", "RR"}]}], "]"}]],\
 "Input",
 CellChangeTimes->{{3.690310814711423*^9, 3.690310818361944*^9}}],

Cell[BoxData[
 RowBox[{"7.330382850637234`", "\[VeryThinSpace]", "+", 
  RowBox[{"3.00517725034652`*^-31", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.690310819150899*^9, 3.69031085417911*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "*", 
  RowBox[{"\[Pi]", "/", "3."}]}]], "Input",
 CellChangeTimes->{{3.6903108229934673`*^9, 3.6903108262791758`*^9}}],

Cell[BoxData["4.1887902047863905`"], "Output",
 CellChangeTimes->{3.690310826473177*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Pi]", "+", 
  RowBox[{"4", "*", 
   RowBox[{"\[Pi]", "/", "3."}]}]}]], "Input",
 CellChangeTimes->{{3.690310863221901*^9, 3.690310878084999*^9}}],

Cell[BoxData["7.330382858376184`"], "Output",
 CellChangeTimes->{{3.690310873543523*^9, 3.690310878559956*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"h", "=", 
  RowBox[{"-", "0.90"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InCyl", "[", 
    RowBox[{
    "x0_", ",", "y0_", ",", "z0_", ",", "a0_", ",", "b0_", ",", "c0_", ",", 
     "x_", ",", "y_", ",", "z_", ",", "L_", ",", "R_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"v0", "=", 
      RowBox[{"{", 
       RowBox[{"x0", ",", "y0", ",", "z0"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"hv", "=", 
      RowBox[{"v0", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"L", "/", "2"}], ")"}], "*", 
        RowBox[{"{", 
         RowBox[{"a0", ",", "b0", ",", "c0"}], "}"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xv", "=", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dv", "=", 
      RowBox[{"xv", "-", "hv"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rv", "=", 
      RowBox[{"{", 
       RowBox[{"a0", ",", "b0", ",", "c0"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"hv2", "=", 
      RowBox[{"hv", "+", 
       RowBox[{"L", "*", "rv"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dv2", "=", 
      RowBox[{"xv", "-", "hv2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"proj2", "=", 
      RowBox[{"dv2", ".", "rv"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"proj", "=", 
      RowBox[{"dv", ".", "rv"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"norm", "=", 
      RowBox[{
       RowBox[{"Norm", "[", "dv", "]"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"ArcCos", "[", 
         RowBox[{
          RowBox[{"dv", ".", "rv"}], "/", 
          RowBox[{"Norm", "[", "dv", "]"}]}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"proj", ">=", "0"}], "&&", 
          RowBox[{"proj", "<=", "L"}], "&&", 
          RowBox[{"norm", "<=", "R"}]}], ")"}], "||", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"proj", "\[LessEqual]", "0"}], "&&", 
          RowBox[{
           RowBox[{"Norm", "[", "dv", "]"}], "\[LessEqual]", "R"}]}], ")"}], "||",
         "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"proj2", "\[GreaterEqual]", "0"}], "&&", 
          RowBox[{
           RowBox[{"Norm", "[", "dv2", "]"}], "\[LessEqual]", "R"}]}], 
         ")"}]}], ",", "1", ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"RegionPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"InCyl", "[", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", "0", ",", "x", ",",
         "y", ",", "z", ",", "1", ",", "1"}], "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "40"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Green", ",", 
        RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<NDSolve`FEM`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mesh", "=", 
   RowBox[{"ToElementMesh", "[", 
    RowBox[{
     RowBox[{"DiscretizeGraphics", "[", "A", "]"}], ",", 
     RowBox[{"\"\<MeshOrder\>\"", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6903111834448338`*^9, 3.690311215459626*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.9`"}]], "Output",
 CellChangeTimes->{3.690311216897317*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"h", "+", "0.01"}]}], ";", "\[IndentingNewLine]", 
  RowBox[{"A", "=", 
   RowBox[{"RegionPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"InCyl", "[", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", "0", ",", "x", ",",
         "y", ",", "z", ",", "1", ",", "1"}], "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "100"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Green", ",", 
        RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}]}], "]"}]}], ";", 
  "\[IndentingNewLine]", 
  RowBox[{"Needs", "[", "\"\<NDSolve`FEM`\>\"", "]"}], ";", "\n", 
  RowBox[{"mesh", "=", 
   RowBox[{"ToElementMesh", "[", 
    RowBox[{
     RowBox[{"DiscretizeGraphics", "[", "A", "]"}], ",", 
     RowBox[{"\"\<MeshOrder\>\"", "\[Rule]", "1"}]}], "]"}]}], ";", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"stressOperator", "[", 
    RowBox[{"Y_", ",", "\[Nu]_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Nu]"}], ")"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Nu]"}], ")"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", "\[Nu]"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Inactive", "[", "Div", "]"}], "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"Y", "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}], 
              ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Y", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "\[Nu]"}], ")"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "\[Nu]"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Nu]"}], ")"}]}], ")"}]}], ")"}]}]}], 
             "}"}]}], "}"}], ".", 
          RowBox[{
           RowBox[{"Inactive", "[", "Grad", "]"}], "[", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ")"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]}], "}"}]}], ";", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Subscript", "[", 
    RowBox[{"\[CapitalGamma]", ",", "D"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"DirichletCondition", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}], ",", 
        RowBox[{
         RowBox[{"w", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", "\[GreaterEqual]", "h"}], "}"}]}], "]"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Subscript", "[", 
    RowBox[{"\[CapitalGamma]2", ",", "D"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"DirichletCondition", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", "0."}], ",", 
        RowBox[{
         RowBox[{"w", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", "z"}], "+", "h"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", "<", "h"}], "}"}]}], "]"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.690311388256205*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"E0", "=", 
   RowBox[{"10", "^", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V0", "=", 
   RowBox[{"33", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mf", "=", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"stressOperator", "[", 
         RowBox[{"E0", ",", "V0"}], "]"}], "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"Subscript", "[", 
        RowBox[{"\[CapitalGamma]", ",", "D"}], "]"}], ",", 
       RowBox[{"Subscript", "[", 
        RowBox[{"\[CapitalGamma]2", ",", "D"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v", ",", "w"}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", "mesh"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.6903114453917723`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"test", "[", 
     RowBox[{"mf_", ",", "x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"mf", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
       RowBox[{
        RowBox[{"mf", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
       RowBox[{
        RowBox[{"mf", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "}"}], 
     "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",\

 CellChangeTimes->{3.690311458920156*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"uik", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"test", "[", 
         RowBox[{"mf", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Grad", "[", 
        RowBox[{
         RowBox[{"test", "[", 
          RowBox[{"mf", ",", "x", ",", "y", ",", "z"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "]"}]}], ")"}], 
    "/", "2.0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ull2", "=", 
   SuperscriptBox[
    RowBox[{"Tr", "[", "uik", "]"}], "2"]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.690311464336269*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"uik2", "=", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "uik", "]"}], "*", 
      RowBox[{"Flatten", "[", "uik", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{3.6903114921358747`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fden", "=", 
   RowBox[{
    FractionBox["E0", 
     RowBox[{"2", "*", 
      RowBox[{"(", 
       RowBox[{"1", "+", "V0"}], ")"}]}]], "*", 
    RowBox[{"(", 
     RowBox[{"uik2", "+", 
      RowBox[{
       FractionBox["V0", 
        RowBox[{"1", "-", 
         RowBox[{"2", "V0"}]}]], "ull2"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RR", "=", 
   RowBox[{"ImplicitRegion", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"InCyl", "[", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "/", "2"}], ",", "0", ",", "x", ",",
         "y", ",", "z", ",", "1", ",", "1"}], "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.690311502129414*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{"Fden", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", "RR"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{3.690311513894588*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.69031164440769*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(2000\\)\[NoBreak] times. The global error \
is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(269.7758484961202`\\)\[NoBreak] and \
\[NoBreak]\\!\\(17.63005330122855`\\)\[NoBreak] for the integral and error \
estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6903121448279257`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["F"], "Input",
 CellChangeTimes->{3.6903121680059233`*^9}],

Cell[BoxData["269.7758484961202`"], "Output",
 CellChangeTimes->{3.690312168515196*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["hl"], "Input",
 CellChangeTimes->{{3.6905370685262537`*^9, 3.690537068630691*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.020000000000000018`", ",", "0.030000000000000027`", ",", 
   "0.040000000000000036`", ",", "0.050000000000000044`", ",", 
   "0.06000000000000005`", ",", "0.07000000000000006`", ",", 
   "0.08000000000000007`", ",", "0.09000000000000008`", ",", 
   "0.10000000000000009`"}], "}"}]], "Output",
 CellChangeTimes->{3.6905370692653713`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Fl"], "Input",
 CellChangeTimes->{{3.690537070344046*^9, 3.6905370706548567`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "287.33008235642313`", ",", "690.8173671570225`", ",", 
   "1213.1406849200987`", ",", "1821.1029029697452`", ",", 
   "2581.941026130142`", ",", "3731.7241704149237`", ",", "4841.88663600355`",
    ",", "6225.666307017342`", ",", "7791.533220178874`"}], "}"}]], "Output",
 CellChangeTimes->{3.690537071030415*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hl", "=", 
  RowBox[{"{", 
   RowBox[{
   "0.020000000000000018`", ",", "0.030000000000000027`", ",", 
    "0.040000000000000036`", ",", "0.050000000000000044`", ",", 
    "0.06000000000000005`", ",", "0.07000000000000006`", ",", 
    "0.08000000000000007`", ",", "0.09000000000000008`", ",", 
    "0.10000000000000009`"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6905493358275757`*^9, 3.690549336426189*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.020000000000000018`", ",", "0.030000000000000027`", ",", 
   "0.040000000000000036`", ",", "0.050000000000000044`", ",", 
   "0.06000000000000005`", ",", "0.07000000000000006`", ",", 
   "0.08000000000000007`", ",", "0.09000000000000008`", ",", 
   "0.10000000000000009`"}], "}"}]], "Output",
 CellChangeTimes->{3.690549337356077*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fl", "=", 
  RowBox[{"{", 
   RowBox[{
   "287.33008235642313`", ",", "690.8173671570225`", ",", 
    "1213.1406849200987`", ",", "1821.1029029697452`", ",", 
    "2581.941026130142`", ",", "3731.7241704149237`", ",", 
    "4841.88663600355`", ",", "6225.666307017342`", ",", 
    "7791.533220178874`"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6905493403640614`*^9, 3.6905493410502768`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "287.33008235642313`", ",", "690.8173671570225`", ",", 
   "1213.1406849200987`", ",", "1821.1029029697452`", ",", 
   "2581.941026130142`", ",", "3731.7241704149237`", ",", "4841.88663600355`",
    ",", "6225.666307017342`", ",", "7791.533220178874`"}], "}"}]], "Output",
 CellChangeTimes->{3.690549341479986*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FIG1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Log10", "[", "hl", "]"}], ",", 
       RowBox[{"Log10", "[", "Fl", "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Large"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mp", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Log10", "[", "hl", "]"}], ",", 
      RowBox[{"Log10", "[", "Fl", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"mpf", "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"mp", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FIG2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"mpf", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2.5"}], ",", "0"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", "Large"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FIG3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"7", "+", 
      RowBox[{"2.0", "*", "x"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2.5"}], ",", "0"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"FIG1", ",", "FIG2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.5"}], ",", 
        RowBox[{"-", "0.5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "5"}], "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"FIG1", ",", "FIG3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.5"}], ",", 
        RowBox[{"-", "0.5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "5"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.690549371724152*^9, 3.690549376536211*^9}, {
  3.690549410969627*^9, 3.6905494368173656`*^9}, {3.690549516937891*^9, 
  3.690549551932808*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], CapForm["Butt"], 
     PointBox[{{-1.6989700043360185`, 
      2.4583810973371145`}, {-1.5228787452803372`, 
      2.8393632472012285`}, {-1.3979400086720373`, 
      3.08391116784235}, {-1.3010299956639808`, 
      3.260334486667671}, {-1.221848749616356, 
      3.4119463183646563`}, {-1.1549019599857429`, 
      3.5719095354780506`}, {-1.096910013008056, 
      3.6850146170069005`}, {-1.0457574905606748`, 
      3.7941858389766283`}, {-0.9999999999999997, 
      3.8916229266769258`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-0.9890785936822494, 2.3867190058701238`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Large,
  Method->{},
  PlotRange->{{-1.6989700043360185`, -0.9999999999999997}, {
   2.4583810973371145`, 3.8916229266769258`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6905493629613323`*^9, 3.690549376874282*^9}, {
  3.69054941983705*^9, 3.690549437720314*^9}, {3.690549525363686*^9, 
  3.690549552310267*^9}}],

Cell[BoxData[
 RowBox[{"5.912219264822164`", "\[VeryThinSpace]", "+", 
  RowBox[{"2.0290929475113155`", " ", "x"}]}]], "Output",
 CellChangeTimes->{{3.6905493629613323`*^9, 3.690549376874282*^9}, {
  3.69054941983705*^9, 3.690549437720314*^9}, {3.690549525363686*^9, 
  3.690549552328974*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], CapForm["Butt"], 
      PointBox[{{-1.6989700043360185`, 
       2.4583810973371145`}, {-1.5228787452803372`, 
       2.8393632472012285`}, {-1.3979400086720373`, 
       3.08391116784235}, {-1.3010299956639808`, 
       3.260334486667671}, {-1.221848749616356, 
       3.4119463183646563`}, {-1.1549019599857429`, 
       3.5719095354780506`}, {-1.096910013008056, 
       3.6850146170069005`}, {-1.0457574905606748`, 
       3.7941858389766283`}, {-0.9999999999999997, 
       3.8916229266769258`}}]}, {}}, {}}, {{}, {}, 
    {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], CapForm[
     "Butt"], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAvvMm+f//A8DAHRLXE93qPzpRjPpt
/gPAAFjLk9Lp6j+2rvH72/wDwEiShFCR9uo/rmm8/rf5A8DQBvfJDhDrP57f
UQRw8wPA6O/bvAlD6z99y3wP4OYDwBjCpaL/qOs/PKPSJcDNA8BwZjlu63Ts
P7pSflKAmwPAIK9gBcMM7j84ILOZjC4DwNwTfk2HwPA/2gM4N9HIAsB4Ufky
YF3yP7/F5rIUZQLAgLYf5h/y8z8m9nIc5PgBwCCP7MwtqfU/sDxP3OuTAcAU
6WbO7kL3P7zxCIp/JgHApLaHA/7++D8LhewVErsAwKCrUwb0svo/fi4g+NxW
AMDsIc0jnUn8P+SMYpBn1P+/2AvtdJQC/j8T6STdhQn/vxR3uuA+nv8/yAE7
5qFC/r/ehBkN6JgAQIH3C8vVav2//wepw9dzAUCBGX1ceqH8v8lLjwchQAJA
hRipyTbH+79hyUhlkR0DQBDUKPPw8Pq/rdrXKfX2A0Diu0jJGyn6v6KsvXuy
wQRAuIAje15Q+b9luHbnlp0FQNVxntkRhvi/0YSG4NRqBkD2P9QT3ar3vwqL
afM5SQdAncpdCqbT9r/4JCJtkiMIQIuBh63fCva/kH8xdETvCEB9FWwsMTH1
v/UTFJUdzAlAttXwV/Nl9L8EaU1DUJoKQHVSyT+znvO/x1FcWHZkC0A4rFwD
i8byv1h0PofDPwxAQjKQc9P88b+TV3dDagwNQFCVfr8zIvG/mnSDGTjqDUDk
tMDHkUvwv1clZVb5ww5AfgFG+cAG77++lp0gFI8PQDxTgBqOVO2/+KBUAqs1
EECI/fqUPL/rv+fWBbt4nBBA4CAdiOYx6r+w1iEnQAERQED+tDLAgui/YHMn
IJtuEUAuNI02e/Dmv2Rw2N+i1BFAJCTb8WU85b9QCnMsPkMSQKhsaQYypeO/
jwS5P4aqEkA4Lp+T+RXiv6rIaQbIDxNA0KlK2PBk4L+qKQRanX0TQO77bOyS
od2/AOtJdB/kE0BMGDCXozXavzxJeRs1UxRAwiZCM6vZ1r9TcRN2RMAUQFTm
1IF1t9O/vvlYlwAmFUD2GVM/n1HQvxAfiEVQlBVAaf2jXhdLyr+3pGK6TPsV
QBerPyHeEsS/OPSn4kJgFkDJgWSDx6a6v6Dg1pfMzRZAq+OYHLsdrL9dLbET
AzQXQF6M/zZErau/ifGAess1F0AQNWZRzTyrv7a1UOGTNxdAdoYzht9bqr8P
PvCuJDsXQEIpzu8Dmqi/wk4vSkZCF0DabgPDTBalvyhwrYCJUBdAEfTb0rwd
nL/0sqntD20XQHZFqQfPPJu/IXd5VNhuF0DclnY84Vuav047SbugcBdAqDkR
pgWamL+nw+iIMXQXQEB/RnlOFpW/WtQnJFN7F0DdFGI/wB2Mv8D1pVqWiRdA
qLf8qORbir/tuXXBXosXQHRalxIJmoi/GX5FKCeNF0AMoMzlURaFv3MG5fW3
kBdAdlZuGMcdfL8mFySR2ZcXQA6co+sPmni/U9vz96GZF0Cl4di+WBZ1v3+f
w15qmxdAp9mGytQdbL/ZJ2Ms+54XQNZk8XBmFmW/Buwyk8OgF0AJ4Lcu8B1c
vzKwAvqLohdAzuwZ9yYeTL9fdNJgVKQXQJ1+YgYxZGu+jDiixxymF0Bz7GB7

      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-0.9890785936822494, 2.3867190058701238`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Large,
  Method->{},
  PlotRange->{{-2.5, -0.5}, {0, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6905493629613323`*^9, 3.690549376874282*^9}, {
  3.69054941983705*^9, 3.690549437720314*^9}, {3.690549525363686*^9, 
  3.690549552390712*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], CapForm["Butt"], 
      PointBox[{{-1.6989700043360185`, 
       2.4583810973371145`}, {-1.5228787452803372`, 
       2.8393632472012285`}, {-1.3979400086720373`, 
       3.08391116784235}, {-1.3010299956639808`, 
       3.260334486667671}, {-1.221848749616356, 
       3.4119463183646563`}, {-1.1549019599857429`, 
       3.5719095354780506`}, {-1.096910013008056, 
       3.6850146170069005`}, {-1.0457574905606748`, 
       3.7941858389766283`}, {-0.9999999999999997, 
       3.8916229266769258`}}]}, {}}, {}}, {{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwlVHs0lAkcnfExIfIYM2Z8ptTKSTlOKGw72/zWlnViE7XqeG1E1q7VQzrb
azRaExoaK5QQiUjZDjYbrd/XUoxHD68tj0VpbKFmGsaYxNqzf9xzzz3nPv67
K8MP+Efq0Gi0rxfxHzeo7GYXFgjqZ06V8aKETX4S7Y/zBCUJGTO0JWhwp1L5
oX+OoC5ctdb3YtCgMvrefO0sQV1zOKsjNaJBwZCf7kEVQTVB8MwKLg1OtZ00
GZYTFCOaMSJwpgG/uHM11UFQyXcDaxIiaFDnL/Q/fXmxP5AIWmihgbtN9SWJ
I0FJ8VK7/Cod+gh3t6ctOpSP5nxGSKwO4AN5lUWkDpV4xDm3dyMBdurD1qMa
OlXDtGp2W6YLt/m+A+OZdKpQHPbVmme6cE+pn5pgR6eSrd+O06r1YGnSBMu8
nka9mbbr7k9hgNDRRjMQQKN0i9HE038JjErCpVHdC2gdl3/g4jp9YL62HUwy
WMBJdv+q42p9aKF/Ji/ymEf3+SZu6B8GIJpZ2tbz/UdM0J/asDbLEETcU8HH
i+YwQZ5YnBS6FJI45TLX5g94YizAVeZuBKbda1QKhRYV6/4yMjExhhf1XjLS
XovLt9S6jvYaw++nPzkRumMWvRIGfi76dRn0HCp4bibW4Lr0MLu3x0xALehm
Dt6YQb1h1tGMtaaQ3xpiWNqlxiqrp1qHbFM4Jzp7a8hQjZsEfHup1hROsWIc
nJym0WNaFh0VZQZ3ehS7VZFTuDpryS5GhxnE+8sE1QUqfBhA7i1dbw7uN4OJ
cw/f42i5n7Auzxw8nKVxXXNKHJK7eWbTmbAjS4guq5S45zewkccyYbSGas7w
VmB6yQprtz4mCOmesxTjHRYmVN733WwB/J2nrdJ3TaLT+LfHBm5YQPJH7QU+
jmMB3O9bb8qCYRtestzpDbbUakLEcSyA+RpnKvEfPEj5q3yHWOC4Ic31hEKO
U1XBziNfssHWtl8ZyX+FM64pZ+S32VAWE81wLnmJvdcihdVsS3B3vJI5y3qB
hzdwLouOW8KT8m3PFBHDKPlmUtYot4S3H2ImfikaxMS9h692eHPAh7M+p3hj
H6rnuGnedznwp52HS8XzXlxTn3Op1ZYLu+TdovjaLnTd98DXLIULau5OwRW/
J3g/j8Vpn+ZC9MfiUEvvVrSnWKnbg6zAskKw8m/zJvTVm+B1NliBTBRxprm0
Dt/3jzbK1pJQ8fKidT3vJh7KS2OmnCchVLLguuVWBT6m277blkGC6cb9fh38
CnSIqms1yiThqNhFPBR0A+VOYyJpNgke9o/eEbllGNQMipx8EvpiiUYfdglu
fa9qL60gwWyqv/MeLw85XoHipubF/NbyJY/5lzH+liJMLCNhIPsofyQoFzvN
z37u1UZC2admpXq5FzFtsHqq7REJkOB5bDs7C3XijPd19ZAwaBEuoHgSHM+n
BC9eLvpr58pGg1LRi9hNXntFwpHAHHOD3GQs/W5SHTlGglFh+ys/dhLudbGq
fP1mcT8gltPMO4k9LXHWSiUJy/KKx01yf0JnR0NNlYqEkpFnDXvY8Xg+s7Dr
yDQJ15+LW7t5MbgttCNVoyGhN0J5cD87Eq837ttfpyXBYLjWUcELRl177Rcn
50h4NMGdsVvug2HpUt7meRLyheEMp4gfGv7/MRL+BWG5Wu0=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-0.9890785936822494, 2.3867190058701238`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Large,
  Method->{},
  PlotRange->{{-2.5, -0.5}, {0, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6905493629613323`*^9, 3.690549376874282*^9}, {
  3.69054941983705*^9, 3.690549437720314*^9}, {3.690549525363686*^9, 
  3.69054955239712*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"FIG1", ",", "FIG2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.5"}], ",", 
        RowBox[{"-", "0.5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "5"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690549386264225*^9, 3.690549400401211*^9}, {
  3.690549505398584*^9, 3.6905495085735703`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], 
      PointBox[{{-1.6989700043360185`, 
       2.4583810973371145`}, {-1.5228787452803372`, 
       2.8393632472012285`}, {-1.3979400086720373`, 
       3.08391116784235}, {-1.3010299956639808`, 
       3.260334486667671}, {-1.221848749616356, 
       3.4119463183646563`}, {-1.1549019599857429`, 
       3.5719095354780506`}, {-1.096910013008056, 
       3.6850146170069005`}, {-1.0457574905606748`, 
       3.7941858389766283`}, {-0.9999999999999997, 
       3.8916229266769258`}}]}, {}}, {}}, {{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAvvMm+f//A8DAHRLXE93qPzpRjPpt
/gPAAFjLk9Lp6j+2rvH72/wDwEiShFCR9uo/rmm8/rf5A8DQBvfJDhDrP57f
UQRw8wPA6O/bvAlD6z99y3wP4OYDwBjCpaL/qOs/PKPSJcDNA8BwZjlu63Ts
P7pSflKAmwPAIK9gBcMM7j84ILOZjC4DwNwTfk2HwPA/2gM4N9HIAsB4Ufky
YF3yP7/F5rIUZQLAgLYf5h/y8z8m9nIc5PgBwCCP7MwtqfU/sDxP3OuTAcAU
6WbO7kL3P7zxCIp/JgHApLaHA/7++D8LhewVErsAwKCrUwb0svo/fi4g+NxW
AMDsIc0jnUn8P+SMYpBn1P+/2AvtdJQC/j8T6STdhQn/vxR3uuA+nv8/yAE7
5qFC/r/ehBkN6JgAQIH3C8vVav2//wepw9dzAUCBGX1ceqH8v8lLjwchQAJA
hRipyTbH+79hyUhlkR0DQBDUKPPw8Pq/rdrXKfX2A0Diu0jJGyn6v6KsvXuy
wQRAuIAje15Q+b9luHbnlp0FQNVxntkRhvi/0YSG4NRqBkD2P9QT3ar3vwqL
afM5SQdAncpdCqbT9r/4JCJtkiMIQIuBh63fCva/kH8xdETvCEB9FWwsMTH1
v/UTFJUdzAlAttXwV/Nl9L8EaU1DUJoKQHVSyT+znvO/x1FcWHZkC0A4rFwD
i8byv1h0PofDPwxAQjKQc9P88b+TV3dDagwNQFCVfr8zIvG/mnSDGTjqDUDk
tMDHkUvwv1clZVb5ww5AfgFG+cAG77++lp0gFI8PQDxTgBqOVO2/+KBUAqs1
EECI/fqUPL/rv+fWBbt4nBBA4CAdiOYx6r+w1iEnQAERQED+tDLAgui/YHMn
IJtuEUAuNI02e/Dmv2Rw2N+i1BFAJCTb8WU85b9QCnMsPkMSQKhsaQYypeO/
jwS5P4aqEkA4Lp+T+RXiv6rIaQbIDxNA0KlK2PBk4L+qKQRanX0TQO77bOyS
od2/AOtJdB/kE0BMGDCXozXavzxJeRs1UxRAwiZCM6vZ1r9TcRN2RMAUQFTm
1IF1t9O/vvlYlwAmFUD2GVM/n1HQvxAfiEVQlBVAaf2jXhdLyr+3pGK6TPsV
QBerPyHeEsS/OPSn4kJgFkDJgWSDx6a6v6Dg1pfMzRZAq+OYHLsdrL9dLbET
AzQXQF6M/zZErau/ifGAess1F0AQNWZRzTyrv7a1UOGTNxdAdoYzht9bqr8P
PvCuJDsXQEIpzu8Dmqi/wk4vSkZCF0DabgPDTBalvyhwrYCJUBdAEfTb0rwd
nL/0sqntD20XQHZFqQfPPJu/IXd5VNhuF0DclnY84Vuav047SbugcBdAqDkR
pgWamL+nw+iIMXQXQEB/RnlOFpW/WtQnJFN7F0DdFGI/wB2Mv8D1pVqWiRdA
qLf8qORbir/tuXXBXosXQHRalxIJmoi/GX5FKCeNF0AMoMzlURaFv3MG5fW3
kBdAdlZuGMcdfL8mFySR2ZcXQA6co+sPmni/U9vz96GZF0Cl4di+WBZ1v3+f
w15qmxdAp9mGytQdbL/ZJ2Ms+54XQNZk8XBmFmW/Buwyk8OgF0AJ4Lcu8B1c
vzKwAvqLohdAzuwZ9yYeTL9fdNJgVKQXQJ1+YgYxZGu+jDiixxymF0Bz7GB7

      "]]}}},
  PlotTheme -> "Scientific",
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.9890785936822494, 2.3867190058701238`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-2.5, -0.5}, {0, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.690549384216216*^9, 3.690549392865279*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/farzanberoz/Desktop/biophysics/biofilms/1d-film/analysis/plots/\
sc-scaling-l1.jpg\>\"", ",", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"FIG1", ",", "FIG2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2.5"}], ",", 
          RowBox[{"-", "0.5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "5"}], "}"}]}], "}"}]}]}], "]"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.69054944739384*^9, 3.69054947897082*^9}}],

Cell[BoxData["\<\"/Users/farzanberoz/Desktop/biophysics/biofilms/1d-film/\
analysis/plots/sc-scaling-l1.jpg\"\>"], "Output",
 CellChangeTimes->{{3.6905494704890957`*^9, 3.6905494803622007`*^9}, 
   3.690549558015566*^9}]
}, Open  ]]
},
WindowSize->{808, 655},
WindowMargins->{{Automatic, 94}, {Automatic, 32}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 18313, 508, 675, "Input"],
Cell[CellGroupData[{
Cell[18896, 532, 8609, 224, 621, "Input"],
Cell[27508, 758, 627, 12, 60, "Message"],
Cell[28138, 772, 1167, 20, 114, "Message"],
Cell[29308, 794, 275, 7, 21, "Print"],
Cell[29586, 803, 627, 12, 60, "Message"],
Cell[30216, 817, 1165, 20, 114, "Message"],
Cell[31384, 839, 275, 7, 21, "Print"],
Cell[31662, 848, 625, 12, 60, "Message"],
Cell[32290, 862, 584, 12, 24, "Message"],
Cell[32877, 876, 1166, 20, 114, "Message"],
Cell[34046, 898, 583, 12, 24, "Message"],
Cell[CellGroupData[{
Cell[34654, 914, 275, 7, 21, "Print"],
Cell[34932, 923, 276, 7, 21, "Print"],
Cell[35211, 932, 273, 7, 21, "Print"],
Cell[35487, 941, 304, 7, 21, "Print"],
Cell[35794, 950, 299, 7, 21, "Print"],
Cell[36096, 959, 301, 7, 21, "Print"],
Cell[36400, 968, 303, 7, 21, "Print"]
}, Open  ]]
}, Open  ]],
Cell[36730, 979, 22370, 625, 896, "Input"],
Cell[CellGroupData[{
Cell[59125, 1608, 3349, 90, 216, "Input"],
Cell[62477, 1700, 914, 17, 60, "Message"],
Cell[63394, 1719, 224496, 3699, 615, 195111, 3217, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287927, 5423, 69, 1, 28, "Input"],
Cell[287999, 5426, 20577, 352, 656, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308613, 5783, 4072, 110, 369, "Input"],
Cell[312688, 5895, 1763, 28, 106, "Message"],
Cell[314454, 5925, 204, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314695, 5934, 687, 18, 46, "Input"],
Cell[315385, 5954, 1740, 27, 106, "Message"],
Cell[317128, 5983, 130, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317295, 5991, 249, 7, 28, "Input"],
Cell[317547, 6000, 206, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317790, 6008, 147, 3, 28, "Input"],
Cell[317940, 6013, 88, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318065, 6019, 171, 4, 28, "Input"],
Cell[318239, 6025, 111, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318387, 6031, 4303, 116, 386, "Input"],
Cell[322693, 6149, 90, 2, 28, "Output"]
}, Open  ]],
Cell[322798, 6154, 18890, 525, 607, "Input"],
Cell[341691, 6681, 988, 28, 97, "Input"],
Cell[342682, 6711, 784, 23, 80, "Input"],
Cell[343469, 6736, 866, 26, 82, "Input"],
Cell[344338, 6764, 294, 9, 46, "Input"],
Cell[344635, 6775, 963, 30, 87, "Input"],
Cell[CellGroupData[{
Cell[345623, 6809, 324, 10, 46, "Input"],
Cell[345950, 6821, 577, 11, 60, "Message"],
Cell[346530, 6834, 1120, 19, 114, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347687, 6858, 71, 1, 28, "Input"],
Cell[347761, 6861, 87, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347885, 6867, 96, 1, 28, "Input"],
Cell[347984, 6870, 381, 8, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348402, 6883, 96, 1, 28, "Input"],
Cell[348501, 6886, 356, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348894, 6898, 434, 9, 63, "Input"],
Cell[349331, 6909, 379, 8, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349747, 6922, 417, 9, 63, "Input"],
Cell[350167, 6933, 356, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350560, 6945, 2464, 77, 148, "Input"],
Cell[353027, 7024, 1566, 39, 235, "Output"],
Cell[354596, 7065, 293, 5, 28, "Output"],
Cell[354892, 7072, 3361, 70, 250, "Output"],
Cell[358256, 7144, 3321, 69, 250, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361614, 7218, 503, 15, 28, "Input"],
Cell[362120, 7235, 3227, 67, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365384, 7307, 632, 19, 63, "Input"],
Cell[366019, 7328, 220, 3, 28, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
